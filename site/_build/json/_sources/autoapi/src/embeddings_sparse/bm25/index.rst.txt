src.embeddings_sparse.bm25
==========================

.. py:module:: src.embeddings_sparse.bm25

.. autoapi-nested-parse::

   Overview of bm25.

   This module bundles bm25 logic for the kgfoundry stack. It groups related helpers so downstream
   packages can import a single cohesive namespace. Refer to the functions and classes below for
   implementation specifics.

   ..
       !! processed by numpydoc !!






Module Contents
---------------

.. py:class:: BM25Doc


   Model the BM25Doc.

   Represent the bm25doc data structure used throughout the project. The class encapsulates
   behaviour behind a well-defined interface for collaborating components. Instances are typically
   created by factories or runtime orchestrators documented nearby.















   ..
       !! processed by numpydoc !!

   .. py:attribute:: doc_id
      :type:  str


   .. py:attribute:: length
      :type:  int


   .. py:attribute:: fields
      :type:  dict[str, str]


.. py:class:: PurePythonBM25(index_dir, k1 = 0.9, b = 0.4, field_boosts = None)


   Model the PurePythonBM25.

   Represent the purepythonbm25 data structure used throughout the project. The class encapsulates
   behaviour behind a well-defined interface for collaborating components. Instances are typically
   created by factories or runtime orchestrators documented nearby.















   ..
       !! processed by numpydoc !!

   .. py:attribute:: index_dir


   .. py:attribute:: k1
      :value: 0.9



   .. py:attribute:: b
      :value: 0.4



   .. py:attribute:: field_boosts


   .. py:attribute:: df
      :type:  dict[str, int]


   .. py:attribute:: postings
      :type:  dict[str, dict[str, int]]


   .. py:attribute:: docs
      :type:  dict[str, BM25Doc]


   .. py:attribute:: N
      :value: 0



   .. py:attribute:: avgdl
      :value: 0.0



   .. py:method:: _tokenize(text)
      :staticmethod:



      Compute tokenize.

      Carry out the tokenize operation.

      :param text: Description for ``text``.
      :type text: str

      :returns: *List[str]* -- Description of return value.















      ..
          !! processed by numpydoc !!


   .. py:method:: build(docs_iterable)


      Compute build.

      Carry out the build operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param docs_iterable: Description for ``docs_iterable``.
      :type docs_iterable: collections.abc.Iterable

      .. rubric:: Examples

      >>> from embeddings_sparse.bm25 import build
      >>> build(...)  # doctest: +ELLIPSIS















      ..
          !! processed by numpydoc !!


   .. py:method:: load()


      Compute load.

      Carry out the load operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      .. rubric:: Examples

      >>> from embeddings_sparse.bm25 import load
      >>> load()  # doctest: +ELLIPSIS















      ..
          !! processed by numpydoc !!


   .. py:method:: _idf(term)


      Compute idf.

      Carry out the idf operation.

      :param term: Description for ``term``.
      :type term: str

      :returns: *float* -- Description of return value.















      ..
          !! processed by numpydoc !!


   .. py:method:: search(query, k, fields = None)


      Compute search.

      Carry out the search operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param query: Description for ``query``.
      :type query: str
      :param k: Description for ``k``.
      :type k: int
      :param fields: Optional parameter default ``None``. Description for ``fields``.
      :type fields: Mapping[str, str] | None

      :returns: *List[Tuple[str, float]]* -- Description of return value.

      .. rubric:: Examples

      >>> from embeddings_sparse.bm25 import search
      >>> result = search(..., ...)
      >>> result  # doctest: +ELLIPSIS
      ...















      ..
          !! processed by numpydoc !!


.. py:class:: LuceneBM25(index_dir, k1 = 0.9, b = 0.4, field_boosts = None)


   Model the LuceneBM25.

   Represent the lucenebm25 data structure used throughout the project. The class encapsulates
   behaviour behind a well-defined interface for collaborating components. Instances are typically
   created by factories or runtime orchestrators documented nearby.















   ..
       !! processed by numpydoc !!

   .. py:attribute:: index_dir


   .. py:attribute:: k1
      :value: 0.9



   .. py:attribute:: b
      :value: 0.4



   .. py:attribute:: field_boosts


   .. py:attribute:: _searcher
      :type:  Any | None
      :value: None



   .. py:method:: build(docs_iterable)


      Compute build.

      Carry out the build operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param docs_iterable: Description for ``docs_iterable``.
      :type docs_iterable: collections.abc.Iterable

      :raises RuntimeError: Raised when validation fails.

      .. rubric:: Examples

      >>> from embeddings_sparse.bm25 import build
      >>> build(...)  # doctest: +ELLIPSIS















      ..
          !! processed by numpydoc !!


   .. py:method:: _ensure_searcher()


      Compute ensure searcher.

      Carry out the ensure searcher operation.















      ..
          !! processed by numpydoc !!


   .. py:method:: search(query, k, fields = None)


      Compute search.

      Carry out the search operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param query: Description for ``query``.
      :type query: str
      :param k: Description for ``k``.
      :type k: int
      :param fields: Optional parameter default ``None``. Description for ``fields``.
      :type fields: Mapping[str, str] | None

      :returns: *List[Tuple[str, float]]* -- Description of return value.

      :raises RuntimeError: Raised when validation fails.

      .. rubric:: Examples

      >>> from embeddings_sparse.bm25 import search
      >>> result = search(..., ...)
      >>> result  # doctest: +ELLIPSIS
      ...















      ..
          !! processed by numpydoc !!


.. py:function:: get_bm25(backend, index_dir, *, k1 = 0.9, b = 0.4, field_boosts = None)


   Compute get bm25.

   Carry out the get bm25 operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

   :param backend: Description for ``backend``.
   :type backend: str
   :param index_dir: Description for ``index_dir``.
   :type index_dir: str
   :param k1: Optional parameter default ``0.9``. Description for ``k1``.
   :type k1: float | None
   :param b: Optional parameter default ``0.4``. Description for ``b``.
   :type b: float | None
   :param field_boosts: Optional parameter default ``None``. Description for ``field_boosts``.
   :type field_boosts: Mapping[str, float] | None

   :returns: *PurePythonBM25 | LuceneBM25* -- Description of return value.

   .. rubric:: Examples

   >>> from embeddings_sparse.bm25 import get_bm25
   >>> result = get_bm25(..., ...)
   >>> result  # doctest: +ELLIPSIS
   ...















   ..
       !! processed by numpydoc !!

src.embeddings_sparse.bm25
==========================

.. py:module:: src.embeddings_sparse.bm25

.. autoapi-nested-parse::

   Module for embeddings_sparse.bm25.

   NavMap:
   - NavMap: Structure describing a module navmap.
   - BM25Doc: Serialized representation of a BM25 indexed document.
   - PurePythonBM25: Pure-Python BM25 builder and searcher for sparse retrieval.
   - LuceneBM25: Pyserini-backed Lucene BM25 adapter lazily importing Luceneâ€¦.
   - get_bm25: Construct a BM25 implementation for the requested backend.







Module Contents
---------------

.. py:class:: BM25Doc

   Serialized representation of a BM25 indexed document.


   .. py:attribute:: doc_id
      :type:  str


   .. py:attribute:: length
      :type:  int


   .. py:attribute:: fields
      :type:  dict[str, str]


.. py:class:: PurePythonBM25(index_dir, k1 = 0.9, b = 0.4, field_boosts = None)

   Pure-Python BM25 builder and searcher for sparse retrieval.


   .. py:attribute:: index_dir


   .. py:attribute:: k1
      :value: 0.9



   .. py:attribute:: b
      :value: 0.4



   .. py:attribute:: field_boosts


   .. py:attribute:: df
      :type:  dict[str, int]


   .. py:attribute:: postings
      :type:  dict[str, dict[str, int]]


   .. py:attribute:: docs
      :type:  dict[str, BM25Doc]


   .. py:attribute:: N
      :value: 0



   .. py:attribute:: avgdl
      :value: 0.0



   .. py:method:: build(docs_iterable)

      Build the BM25 index from an iterable of document field mappings.



   .. py:method:: load()

      Load a previously persisted BM25 index from disk.



   .. py:method:: search(query, k, fields = None)

      Score documents using BM25 and return the top ``k`` hits.



.. py:class:: LuceneBM25(index_dir, k1 = 0.9, b = 0.4, field_boosts = None)

   Pyserini-backed Lucene BM25 adapter lazily importing Lucene bindings.


   .. py:attribute:: index_dir


   .. py:attribute:: k1
      :value: 0.9



   .. py:attribute:: b
      :value: 0.4



   .. py:attribute:: field_boosts


   .. py:method:: build(docs_iterable)

      Materialize a Lucene index from the provided document iterable.



   .. py:method:: search(query, k, fields = None)

      Execute a Lucene BM25 query and return the top ``k`` matches.



.. py:function:: get_bm25(backend, index_dir, *, k1 = 0.9, b = 0.4, field_boosts = None)

   Construct a BM25 implementation for the requested backend.



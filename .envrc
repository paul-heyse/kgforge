# ----- direnv for uv projects -----

# Re-evaluate when these change:
watch_file pyproject.toml
watch_file uv.lock
watch_file .env

REQUIRED_PYTHON_VERSION="${REQUIRED_PYTHON_VERSION:-3.13.9}"

ensure_uv_python_version() {
  local version="${1:-}"
  if [ -z "${version}" ]; then
    echo "direnv: missing REQUIRED_PYTHON_VERSION" >&2
    return 1
  fi
  if ! uv python list "${version}" --only-installed | grep -q "${version}"; then
    echo "direnv: installing Python ${version} via uv"
    uv python install "${version}"
  fi
}

ensure_uv_python_version "${REQUIRED_PYTHON_VERSION}"

# Ensure the project env exists & is in sync (fast no-op if nothing changed):
[ ! -d .venv ] && uv venv

set -- --frozen
UV_SYNC_EXTRAS=""

uv_add_extra() {
  local extra="${1:-}"
  if [ -z "${extra}" ]; then
    return
  fi
  case ",${UV_SYNC_EXTRAS}," in
    *,"${extra}",*)
      return
      ;;
  esac
  if [ -z "${UV_SYNC_EXTRAS}" ]; then
    UV_SYNC_EXTRAS="${extra}"
  else
    UV_SYNC_EXTRAS="${UV_SYNC_EXTRAS},${extra}"
  fi
}

# Allow users to opt-in to extras via env vars, e.g. KGFOUNDRY_UV_EXTRAS=gpu,other
if [ -n "${KGFOUNDRY_UV_EXTRAS:-}" ]; then
  for extra in ${KGFOUNDRY_UV_EXTRAS//,/ }; do
    uv_add_extra "${extra}"
  done
fi

SENTINEL_DIR=".venv/.uv-extras"
GPU_SENTINEL="${SENTINEL_DIR}/gpu"

if [ -n "${KGFOUNDRY_DISABLE_GPU_EXTRA:-}" ]; then
  rm -f "${GPU_SENTINEL}"
else
  if [ ! -f "${GPU_SENTINEL}" ] && [ -x .venv/bin/python ]; then
    if .venv/bin/python - <<'PY' >/dev/null 2>&1; then
import importlib.util
import sys
sys.exit(0 if importlib.util.find_spec("torch") else 1)
PY
      mkdir -p "${SENTINEL_DIR}"
      : > "${GPU_SENTINEL}"
    fi
  fi

  if [ -f "${GPU_SENTINEL}" ]; then
    uv_add_extra gpu
  fi
fi

if [ -n "${UV_SYNC_EXTRAS}" ]; then
  for extra in ${UV_SYNC_EXTRAS//,/ }; do
    set -- "$@" --extra "${extra}"
  done
fi

uv sync "$@"

# Make the .venv active for shells/editors:
VIRTUAL_ENV="$PWD/.venv"
PATH_add "$VIRTUAL_ENV/bin"
export VIRTUAL_ENV

# Quality-of-life: ensure pre-commit hooks are installed (idempotent)
if [ ! -f .git/hooks/pre-commit ]; then
  uvx pre-commit install -t pre-commit -t pre-push >/dev/null 2>&1 || true
fi

# Load developer config (never commit secrets):
dotenv_if_exists .env
source_env_if_exists .envrc.local

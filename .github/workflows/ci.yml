name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Ruff Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: requirements/ci-lint.txt

      - name: Install dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements/ci-lint.txt

      - name: Run ruff
        run: |
          . .venv/bin/activate
          ruff check src tests tools docs/_scripts

      - name: Check docstring style
        run: |
          . .venv/bin/activate
          python tools/check_docstrings.py --no-todo

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Run documentation linting
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          make lint-docs

  tests:
    name: Pytest
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: requirements/ci-test.txt

      - name: Install dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements/ci-test.txt

      - name: Build navmap
        run: |
          . .venv/bin/activate
          python tools/navmap/build_navmap.py

      - name: Check navmap
        run: |
          . .venv/bin/activate
          python tools/navmap/check_navmap.py

      - name: Run pytest
        env:
          PYTHONPATH: src
        run: |
          . .venv/bin/activate
          pytest

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: requirements/ci-docs.txt

      - name: Install documentation toolchain
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements/ci-docs.txt

      - name: Validate gallery examples
        run: |
          . .venv/bin/activate
          python tools/validate_gallery.py

      - name: Regenerate documentation
        run: |
          . .venv/bin/activate
          tools/update_docs.sh

      - name: Check README freshness
        run: |
          . .venv/bin/activate
          python tools/gen_readmes.py --link-mode github --editor relative
          if git diff --quiet --exit-code -- src/**/README.md; then
            echo "Package READMEs are up to date."
          else
            echo "::error::Detected stale package README files."
            echo "Run: python tools/gen_readmes.py --link-mode github --editor relative"
            git diff -- src/**/README.md
            exit 1
          fi

      - name: Verify clean tree
        run: |
          git status --short
          git diff --exit-code
          if [ -n "$(git ls-files --others --exclude-standard)" ]; then
            echo "Unexpected untracked files:"
            git ls-files --others --exclude-standard
            exit 1
          fi

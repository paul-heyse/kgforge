[project]
name = "KGForge"
version = "0.1.0"
description = "KGForge"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    # ============================================================================
    # HTTP & Networking
    # ============================================================================
    "httpx>=0.28.1",
    "hishel>=0.1.0",
    "certifi>=2025.10.5",
    "pyrate-limiter>=3.9",
    "url-normalize>=2.2.0",
    "uvicorn>=0.38.0",
    "fastapi>=0.115.0",

    # ============================================================================
    # Data Processing & Storage
    # ============================================================================
    "pyarrow>=21.0.0",
    "numpy>=2.2.6",
    "jsonlines>=4.0.0",
    "libarchive-c>=5.3",

    # ============================================================================
    # Pydantic Ecosystem
    # ============================================================================
    "pydantic>=2.0",
    "pydantic-core>=2.41.4",
    "pydantic-settings>=2.11.0",

    # ============================================================================
    # Document Processing
    # ============================================================================
    "docling-core>=2.48.4",

    # ============================================================================
    # Domain-Specific APIs
    # ============================================================================
    "pyalex>=0.18",
    "waybackpy>=3.0.6",

    # ============================================================================
    # Ontology & Knowledge Graphs
    # ============================================================================
    "bioregistry>=0.12.43",
    "arelle>=2.2",
    "rdflib>=7.2.1",

    # ============================================================================
    # Web Scraping
    # ============================================================================
    "trafilatura>=2.0.0",
    "beautifulsoup4>=4.14.2",

    # ============================================================================
    # ML/Embeddings (lazy imports - consider making optional)
    # ============================================================================
    "transformers>=4.57.1",

    # ============================================================================
    # Observability & Reliability
    # ============================================================================
    "prometheus-client>=0.23.1",
    "tenacity>=9.1.2",
    "pybreaker",

    # ============================================================================
    # CLI & User Experience
    # ============================================================================
    "typer>=0.19.2",
    "rich>=14.2.0",
    "tqdm>=4.67.1",

    # ============================================================================
    # Utilities
    # ============================================================================
    "filelock>=3.20.0",
    "platformdirs>=4.5.0",
    "typing-extensions>=4.15.0",
    "pyyaml>=6",
    "jsonschema>=4.25.1",

    # ============================================================================
    # Testing Framework (if tests are in src/)
    # ============================================================================
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-logging>=2015.11.4",
    "hypothesis>=6.141.0",
    "requests>=2.32.5",
    "psutil>=7.1.0",

    # ============================================================================
    # Cloud & Databases
    # ============================================================================
    "boto3",  # for AWS S3 storage
    "psycopg>=3",  # for PostgreSQL
    "psycopg-pool",  # for PostgreSQL connection pooling
    "sqlalchemy>=2.0.44",  # for PostgreSQL via ORM
    "redis>=6.4.0",  # for Redis caching

    # ============================================================================
    # Advanced Analytics
    # ============================================================================
    "polars",
    "duckdb>=1.4.1",
]


[project.optional-dependencies]
gpu = [
    "cython>=3.2.0b1",
    "nvidia-cublas>=12.9.1.4",
    "nvidia-cuda-cupti>=12.9.79",
    "nvidia-cuda-nvrtc>=12.9.86",
    "nvidia-cuda-runtime>=12.9.79",
    "nvidia-cudnn-cu13>=9.10.2.21",
    "nvidia-cudnn-frontend>=1.15.0",
    "nvidia-cufft>=11.4.1.4",
    "nvidia-cufile>=1.14.1.1",
    "nvidia-curand>=10.3.10.19",
    "nvidia-cusolver>=11.7.5.82",
    "nvidia-cusparse>=12.5.10.65",
    "nvidia-cusparselt-cu13>=0.7.1",
    "nvidia-cutlass-dsl>=4.2.1",
    "nvidia-ml-py>=13.580.82",
    "nvidia-nccl-cu13>=2.27.3",
    "nvidia-nvjitlink>=12.9.86",
    "nvidia-nvshmem-cu13>=3",
    "nvidia-nvtx>=12.9.79",
    "cuda-bindings>=12.9.3",
    "cuda-pathfinder>=1.3.1",
    "cuda-python>=13.0.0",
    "cuda-toolkit>=13.0.0",
    "pylibraft-cu13>=25.10.0",
    "rmm-cu13>=25.10.0",
    "torch",
    "torchvision",
    "torchaudio",
    "flashinfer-cubin>=0.4.0",
    "apache-tvm-ffi==0.1.0b15",
    "flashinfer-python>=0.4.0",
    "compressed-tensors>=0.11.0",
    "accelerate>=1.10.1",
    "easyocr>=1.7.2",
    "libcuvs-cu13>=25.10.0",
    "libraft-cu13>=25.10.0",
    "librmm-cu13>=25.10.0",
    "cuvs-cu13>=25.10.0",
    "docling>=2.56.1",
    "docling-ibm-models>=3.9.1",
    "openai>=2.3.0",
    "openai-harmony>=0.0.4",
    "openai-whisper>=20250625",
    "pyserini>=1.2.0",
    "transformers>=4.57.1",
    "triton>=3.4.0",
    "sentence-transformers>=5.1.1",
    "keybert>=0.9.0",
    "stanza>=1.11.0",
    "xgrammar>=0.1.25",
    "safetensors>=0.6.2",
    "triton",
    "triton-kernels @git+https://github.com/triton-lang/triton.git@v3.5.0#subdirectory=python/triton_kernels",
    "vllm",
    "faiss==1.12.0 ; python_version >= '3.13' and python_version < '3.14' and platform_system == 'Linux' and platform_machine == 'x86_64'",
    "ray>=2.50.0",
    
] 

dev = [
    "mypy>=1.11.0",
    "mypy-extensions>=1.0.0",
    "types-requests>=2.32.0.20241016",
    "types-PyYAML>=6.0.12.20240917",
]
docs = [
    "sphinx>=8.2.3",
    "myst-parser>=3.0.1",
    "myst-parser[linkify]>=3.0.1",
    "pydata-sphinx-theme>=0.15.4",
    "sphinx-sitemap>=2.6.0",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.5.0",
    "sphinx-autoapi>=3.3.0",
    "astroid>=4.0.0",
    "sphinx-autobuild>=2024.4.3",
    "sphinx-autodoc-typehints>=1.27.0",
    "sphinxext-opengraph[social-cards]>=0.13.0",
    "sphinx-notfound-page>=1.1.0",
    "sphinxext-rediraffe>=0.3.0",
    "sphinx-codeautolink>=0.17.5",
    "autodoc-pydantic>=2.0.0",
    "myst-nb>=1.3.0",
    "sphinxcontrib-mermaid>=0.7.1",
    "sphinx-issues>=5.0.1",
    "sphinxcontrib-spelling>=7.7.0",
    "pyenchant>=3.3.0",
    "linkify-it-py>=2.0.3",
    "sphinxcontrib-typer>=0.6.2",
    "nbsphinx>=0.9.1",
    "nbformat>=5.10.2",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.1",
    "sphinx-favicon>=0.2.0",
    "sphinx-inline-tabs>=0.3.0",
    "sphobjinv>=2.3.1.3",
    "graphviz>=0.21",
    "griffe",
]
docs-agent = [
    "doq",               # generate docstring skeletons
    "pyment",            # fill/convert to preferred style (Google/NumPy/reST)
    "interrogate",       # enforce docstring coverage
    "pydocstyle",        # PEP-257 lint
    "docformatter",      # format docstrings
    "import-linter",     # enforce layered architecture
]
docs-mkdocs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
    "griffe",
]

[project.scripts]
docstokg-hybrid-validation = "DocsToKG.HybridSearch.validation:main"

[tool.black]
line-length = 100
target-version = ["py313"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP", "SIM"]
ignore = ["E203"]

[tool.docs.extensions]
enabled = [
    "myst_parser",
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.napoleon",
    "sphinx.ext.intersphinx",
    "sphinx.ext.viewcode",
    "sphinx.ext.linkcode",
    "sphinx.ext.autosectionlabel",
    "sphinx.ext.githubpages",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx_sitemap",
    "sphinx_copybutton",
    "sphinx_design",
    "autoapi.extension",
    "sphinxext.opengraph",
    "notfound.extension",
    "sphinxext.rediraffe",
    "sphinx_codeautolink",
    "sphinxcontrib.autodoc_pydantic",
    "sphinx_issues",
    "sphinxcontrib.spelling",
    "sphinx.ext.graphviz",
    "sphinx.ext.inheritance_diagram",
    "sphinxcontrib.mermaid",
]
optional = [
    "myst_nb",
]

[tool.pytest.ini_options]
markers = [
    "real_vectors: tests that require the real-vector fixture (enable with --real-vectors)",
    "scale_vectors: tests that require the large real-vector fixture (enable with --scale-vectors)",
    "integration: marks integration tests that may hit real network services",
    "benchmark: performance benchmarks requiring pytest-benchmark",
]
testpaths = ["tests"]

[tool.mypy]
python_version = "3.13"
disallow_untyped_defs = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
strict_equality = true
show_error_codes = true

# Tell uv that vllm should come ONLY from the vllm-nightly index.
[tool.uv.sources]
vllm = { index = "vllm-nightly" }

# point torch packages to the *named* PyTorch cu130 index
torch = [       { index = "pytorch-cu130" } ]
torchvision = [ { index = "pytorch-cu130" } ]
torchaudio = [  { index = "pytorch-cu130" } ]


# Define named indexes uv can use.
[[tool.uv.index]]
name = "vllm-nightly"
url = "https://wheels.vllm.ai/nightly"
explicit = true          # prevents accidental installs of other deps from here

# NEW â€” define the cu130 index *by name*, then reference it above
[[tool.uv.index]]
name = "pytorch-cu130"
url  = "https://download.pytorch.org/whl/cu130"
explicit = true


[tool.uv]
# Allow pre-releases in resolution so uv can select dev/nightly builds of vLLM.
# (Default behavior is "if-necessary-or-explicit"; "allow" is simplest here.)
prerelease = "allow"


[tool.uv.pip]
find-links = ["./.wheelhouse"]
emit-index-annotation = true
emit-index-url        = true
emit-build-options    = true  # include only/no-binary flags if you use them

[dependency-groups]
dev = [
    "ruff>=0.14.1",
]

[tool.pydocstyle]
add-ignore = [
    "D200",
    "D202",
    "D204",
    "D205",
    "D209",
    "D400",
    "D401",
]

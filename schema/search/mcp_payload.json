{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://kgfoundry.dev/schema/search/mcp_payload.json",
  "title": "MCPAgentCatalogPayload",
  "description": "Message payload for agent catalog operations via MCP (Model Context Protocol). Includes request/response envelopes and error handling.",
  "type": "object",
  "oneOf": [
    {
      "$ref": "#/$defs/SearchRequest"
    },
    {
      "$ref": "#/$defs/SearchResponse"
    },
    {
      "$ref": "#/$defs/ErrorResponse"
    }
  ],
  "$defs": {
    "SearchRequest": {
      "description": "MCP request for agent catalog search.",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "jsonrpc",
        "id",
        "method",
        "params"
      ],
      "properties": {
        "jsonrpc": {
          "description": "JSON-RPC version.",
          "type": "string",
          "const": "2.0"
        },
        "id": {
          "description": "Request identifier (string or number).",
          "oneOf": [
            {"type": "string"},
            {"type": "number"}
          ]
        },
        "method": {
          "description": "Method name.",
          "type": "string",
          "const": "agent_catalog/search"
        },
        "params": {
          "description": "Search parameters.",
          "type": "object",
          "additionalProperties": false,
          "required": [
            "query"
          ],
          "properties": {
            "query": {
              "description": "Search query text.",
              "type": "string",
              "minLength": 1
            },
            "k": {
              "description": "Maximum number of results to return.",
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "facets": {
              "description": "Facet filters for narrowing results.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {
                "package": {
                  "description": "Filter by package name.",
                  "type": "string"
                },
                "module": {
                  "description": "Filter by module name.",
                  "type": "string"
                },
                "kind": {
                  "description": "Filter by symbol kind.",
                  "type": "string",
                  "enum": ["class", "function", "module", "method", "property", "attribute", "type", "protocol"]
                },
                "stability": {
                  "description": "Filter by stability level.",
                  "type": "string",
                  "enum": ["stable", "experimental", "deprecated"]
                },
                "deprecated": {
                  "description": "Filter by deprecated status.",
                  "type": "boolean"
                }
              }
            },
            "explain": {
              "description": "Whether to include explanation metadata.",
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    },
    "SearchResponse": {
      "description": "MCP response for successful search operations.",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "jsonrpc",
        "id",
        "result"
      ],
      "properties": {
        "jsonrpc": {
          "description": "JSON-RPC version.",
          "type": "string",
          "const": "2.0"
        },
        "id": {
          "description": "Request identifier (matches request).",
          "oneOf": [
            {"type": "string"},
            {"type": "number"}
          ]
        },
        "result": {
          "description": "Search results payload.",
          "$ref": "../search/search_response.json"
        }
      }
    },
    "ErrorResponse": {
      "description": "MCP error response following JSON-RPC 2.0 error format with RFC 9457 Problem Details.",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "jsonrpc",
        "id",
        "error"
      ],
      "properties": {
        "jsonrpc": {
          "description": "JSON-RPC version.",
          "type": "string",
          "const": "2.0"
        },
        "id": {
          "description": "Request identifier (matches request) or null for parse errors.",
          "oneOf": [
            {"type": "string"},
            {"type": "number"},
            {"type": "null"}
          ]
        },
        "error": {
          "description": "JSON-RPC error object with Problem Details.",
          "type": "object",
          "additionalProperties": false,
          "required": [
            "code",
            "message",
            "data"
          ],
          "properties": {
            "code": {
              "description": "JSON-RPC error code.",
              "type": "integer",
              "minimum": -32768,
              "maximum": -32000
            },
            "message": {
              "description": "Short error message.",
              "type": "string"
            },
            "data": {
              "description": "RFC 9457 Problem Details object.",
              "$ref": "../common/problem_details.json"
            }
          }
        }
      }
    }
  },
  "examples": [
    {
      "jsonrpc": "2.0",
      "id": "1",
      "method": "agent_catalog/search",
      "params": {
        "query": "vector store",
        "k": 10,
        "facets": {
          "package": "search_api"
        },
        "explain": false
      }
    },
    {
      "jsonrpc": "2.0",
      "id": "1",
      "result": {
        "results": [
          {
            "symbol_id": "py:search_api.types.FaissIndexProtocol",
            "score": 0.95,
            "lexical_score": 0.8,
            "vector_score": 0.9,
            "package": "search_api",
            "module": "types",
            "qname": "FaissIndexProtocol",
            "kind": "protocol",
            "anchor": {
              "start_line": 78,
              "end_line": 156
            },
            "metadata": {
              "stability": "stable",
              "deprecated": false
            }
          }
        ],
        "total": 1,
        "took_ms": 42,
        "metadata": {
          "alpha": 0.7,
          "backend": "faiss"
        }
      }
    },
    {
      "jsonrpc": "2.0",
      "id": "1",
      "error": {
        "code": -32603,
        "message": "Internal error",
        "data": {
          "type": "https://kgfoundry.dev/problems/search-error",
          "title": "Search Error",
          "status": 500,
          "detail": "Failed to load FAISS index",
          "instance": "/mcp/agent_catalog/search",
          "code": "search-error"
        }
      }
    }
  ]
}


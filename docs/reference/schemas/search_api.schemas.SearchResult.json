{
  "description": "Represent SearchResult.\n\nAttributes\n----------\ndoc_id : str\n    Attribute description.\nchunk_id : str\n    Attribute description.\ntitle : str\n    Attribute description.\nsection : str\n    Attribute description.\nscore : float\n    Attribute description.\nsignals : Mapping[str, float]\n    Attribute description.\nspans : Mapping[str, int]\n    Attribute description.\nconcepts : List[dict[str, str]]\n    Attribute description.\n\nExamples\n--------\n>>> from search_api.schemas import SearchResult\n>>> result = SearchResult()\n>>> result  # doctest: +ELLIPSIS\n...\n\nSee Also\n--------\nsearch_api.schemas\n\nNotes\n-----\nDocument class invariants and lifecycle details here.",
  "properties": {
    "doc_id": {
      "title": "Doc Id",
      "type": "string"
    },
    "chunk_id": {
      "title": "Chunk Id",
      "type": "string"
    },
    "title": {
      "title": "Title",
      "type": "string"
    },
    "section": {
      "title": "Section",
      "type": "string"
    },
    "score": {
      "title": "Score",
      "type": "number"
    },
    "signals": {
      "additionalProperties": {
        "type": "number"
      },
      "default": {},
      "title": "Signals",
      "type": "object"
    },
    "spans": {
      "additionalProperties": {
        "type": "integer"
      },
      "default": {},
      "title": "Spans",
      "type": "object"
    },
    "concepts": {
      "default": [],
      "items": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "title": "Concepts",
      "type": "array"
    }
  },
  "required": [
    "doc_id",
    "chunk_id",
    "title",
    "section",
    "score"
  ],
  "title": "SearchResult",
  "type": "object"
}

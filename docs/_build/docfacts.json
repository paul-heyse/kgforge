[
  {
    "kind": "class",
    "module": "docling.__init__",
    "notes": [],
    "parameters": [],
    "qname": "docling.__init__.GraniteDoclingVLM",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "docling.__init__",
    "notes": [],
    "parameters": [],
    "qname": "docling.__init__.HybridChunker",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "docling.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "blocks",
        "kind": "positional_or_keyword",
        "name": "blocks",
        "optional": false
      }
    ],
    "qname": "docling.__init__.canonicalize_text",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "docling.canonicalizer",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "blocks",
        "kind": "positional_or_keyword",
        "name": "blocks",
        "optional": false
      }
    ],
    "qname": "docling.canonicalizer.canonicalize_text",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "docling.hybrid",
    "notes": [],
    "parameters": [],
    "qname": "docling.hybrid.HybridChunker",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "docling.vlm",
    "notes": [],
    "parameters": [],
    "qname": "docling.vlm.GraniteDoclingVLM",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "download.__init__",
    "notes": [],
    "parameters": [],
    "qname": "download.__init__.HarvesterConfig",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'https://api.openalex.org'",
        "display_name": "openalex_base",
        "kind": "positional_or_keyword",
        "name": "openalex_base",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'https://api.unpaywall.org'",
        "display_name": "unpaywall_base",
        "kind": "positional_or_keyword",
        "name": "unpaywall_base",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "pdf_host_base",
        "kind": "positional_or_keyword",
        "name": "pdf_host_base",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'/data/pdfs'",
        "display_name": "out_dir",
        "kind": "positional_or_keyword",
        "name": "out_dir",
        "optional": true
      }
    ],
    "qname": "download.__init__.HarvesterConfig.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "download.__init__",
    "notes": [],
    "parameters": [],
    "qname": "download.__init__.OpenAccessHarvester",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "user_agent",
        "kind": "positional_or_keyword",
        "name": "user_agent",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "contact_email",
        "kind": "positional_or_keyword",
        "name": "contact_email",
        "optional": false
      },
      {
        "annotation": "HarvesterConfig | None",
        "default": "None",
        "display_name": "config",
        "kind": "positional_or_keyword",
        "name": "config",
        "optional": true
      }
    ],
    "qname": "download.__init__.OpenAccessHarvester.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "doi",
        "kind": "positional_or_keyword",
        "name": "doi",
        "optional": false
      }
    ],
    "qname": "download.__init__.OpenAccessHarvester._host_pdf_url",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "work",
        "kind": "positional_or_keyword",
        "name": "work",
        "optional": false
      }
    ],
    "qname": "download.__init__.OpenAccessHarvester._lookup_direct_pdf",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": null,
        "display_name": "locations",
        "kind": "positional_or_keyword",
        "name": "locations",
        "optional": false
      }
    ],
    "qname": "download.__init__.OpenAccessHarvester._lookup_locations_pdf",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "doi",
        "kind": "positional_or_keyword",
        "name": "doi",
        "optional": false
      }
    ],
    "qname": "download.__init__.OpenAccessHarvester._resolve_unpaywall_pdf",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_or_keyword",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "target_path",
        "kind": "positional_or_keyword",
        "name": "target_path",
        "optional": false
      }
    ],
    "qname": "download.__init__.OpenAccessHarvester.download_pdf",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "work",
        "kind": "positional_or_keyword",
        "name": "work",
        "optional": false
      }
    ],
    "qname": "download.__init__.OpenAccessHarvester.resolve_pdf",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "topic",
        "kind": "positional_or_keyword",
        "name": "topic",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "years",
        "kind": "positional_or_keyword",
        "name": "years",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "max_works",
        "kind": "positional_or_keyword",
        "name": "max_works",
        "optional": false
      }
    ],
    "qname": "download.__init__.OpenAccessHarvester.run",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "topic",
        "kind": "positional_or_keyword",
        "name": "topic",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "years",
        "kind": "positional_or_keyword",
        "name": "years",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "max_works",
        "kind": "positional_or_keyword",
        "name": "max_works",
        "optional": false
      }
    ],
    "qname": "download.__init__.OpenAccessHarvester.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "topic",
        "kind": "positional_or_keyword",
        "name": "topic",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'>=2018'",
        "display_name": "years",
        "kind": "positional_or_keyword",
        "name": "years",
        "optional": true
      },
      {
        "annotation": "int",
        "default": "20000",
        "display_name": "max_works",
        "kind": "positional_or_keyword",
        "name": "max_works",
        "optional": true
      }
    ],
    "qname": "download.__init__.harvest",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "download.cli",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "topic",
        "kind": "positional_or_keyword",
        "name": "topic",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'>=2018'",
        "display_name": "years",
        "kind": "positional_or_keyword",
        "name": "years",
        "optional": true
      },
      {
        "annotation": "int",
        "default": "20000",
        "display_name": "max_works",
        "kind": "positional_or_keyword",
        "name": "max_works",
        "optional": true
      }
    ],
    "qname": "download.cli.harvest",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "download.harvester",
    "notes": [],
    "parameters": [],
    "qname": "download.harvester.HarvesterConfig",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'https://api.openalex.org'",
        "display_name": "openalex_base",
        "kind": "positional_or_keyword",
        "name": "openalex_base",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'https://api.unpaywall.org'",
        "display_name": "unpaywall_base",
        "kind": "positional_or_keyword",
        "name": "unpaywall_base",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "pdf_host_base",
        "kind": "positional_or_keyword",
        "name": "pdf_host_base",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'/data/pdfs'",
        "display_name": "out_dir",
        "kind": "positional_or_keyword",
        "name": "out_dir",
        "optional": true
      }
    ],
    "qname": "download.harvester.HarvesterConfig.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "download.harvester",
    "notes": [],
    "parameters": [],
    "qname": "download.harvester.OpenAccessHarvester",
    "raises": [
      {
        "description": "Raised when TODO for TypeError.",
        "exception": "TypeError"
      },
      {
        "description": "Raised when TODO for DownloadError.",
        "exception": "DownloadError"
      },
      {
        "description": "Raised when TODO for UnsupportedMIMEError.",
        "exception": "UnsupportedMIMEError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "user_agent",
        "kind": "positional_or_keyword",
        "name": "user_agent",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "contact_email",
        "kind": "positional_or_keyword",
        "name": "contact_email",
        "optional": false
      },
      {
        "annotation": "HarvesterConfig | None",
        "default": "None",
        "display_name": "config",
        "kind": "positional_or_keyword",
        "name": "config",
        "optional": true
      }
    ],
    "qname": "download.harvester.OpenAccessHarvester.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "doi",
        "kind": "positional_or_keyword",
        "name": "doi",
        "optional": false
      }
    ],
    "qname": "download.harvester.OpenAccessHarvester._host_pdf_url",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "work",
        "kind": "positional_or_keyword",
        "name": "work",
        "optional": false
      }
    ],
    "qname": "download.harvester.OpenAccessHarvester._lookup_direct_pdf",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": null,
        "display_name": "locations",
        "kind": "positional_or_keyword",
        "name": "locations",
        "optional": false
      }
    ],
    "qname": "download.harvester.OpenAccessHarvester._lookup_locations_pdf",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "doi",
        "kind": "positional_or_keyword",
        "name": "doi",
        "optional": false
      }
    ],
    "qname": "download.harvester.OpenAccessHarvester._resolve_unpaywall_pdf",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_or_keyword",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "target_path",
        "kind": "positional_or_keyword",
        "name": "target_path",
        "optional": false
      }
    ],
    "qname": "download.harvester.OpenAccessHarvester.download_pdf",
    "raises": [
      {
        "description": "Raised when TODO for DownloadError.",
        "exception": "DownloadError"
      },
      {
        "description": "Raised when TODO for UnsupportedMIMEError.",
        "exception": "UnsupportedMIMEError"
      }
    ],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "work",
        "kind": "positional_or_keyword",
        "name": "work",
        "optional": false
      }
    ],
    "qname": "download.harvester.OpenAccessHarvester.resolve_pdf",
    "raises": [],
    "returns": [
      {
        "annotation": "str | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "topic",
        "kind": "positional_or_keyword",
        "name": "topic",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "years",
        "kind": "positional_or_keyword",
        "name": "years",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "max_works",
        "kind": "positional_or_keyword",
        "name": "max_works",
        "optional": false
      }
    ],
    "qname": "download.harvester.OpenAccessHarvester.run",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "download.harvester",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "topic",
        "kind": "positional_or_keyword",
        "name": "topic",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "years",
        "kind": "positional_or_keyword",
        "name": "years",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "max_works",
        "kind": "positional_or_keyword",
        "name": "max_works",
        "optional": false
      }
    ],
    "qname": "download.harvester.OpenAccessHarvester.search",
    "raises": [
      {
        "description": "Raised when TODO for TypeError.",
        "exception": "TypeError"
      }
    ],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_dense.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_dense.__init__.DenseEmbeddingModel",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_dense.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Sequence",
        "default": null,
        "display_name": "texts",
        "kind": "positional_or_keyword",
        "name": "texts",
        "optional": false
      }
    ],
    "qname": "embeddings_dense.__init__.DenseEmbeddingModel.encode",
    "raises": [],
    "returns": [
      {
        "annotation": "NDArray",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_dense.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_dense.__init__.Qwen3Embedder",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "embeddings_dense.base",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_dense.base.DenseEmbeddingModel",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_dense.base",
    "notes": [],
    "parameters": [
      {
        "annotation": "Sequence",
        "default": null,
        "display_name": "texts",
        "kind": "positional_or_keyword",
        "name": "texts",
        "optional": false
      }
    ],
    "qname": "embeddings_dense.base.DenseEmbeddingModel.encode",
    "raises": [],
    "returns": [
      {
        "annotation": "NDArray",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_dense.qwen3",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_dense.qwen3.Qwen3Embedder",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.BM25Doc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_id",
        "kind": "positional_or_keyword",
        "name": "doc_id",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "length",
        "kind": "positional_or_keyword",
        "name": "length",
        "optional": false
      },
      {
        "annotation": "dict",
        "default": null,
        "display_name": "fields",
        "kind": "positional_or_keyword",
        "name": "fields",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.BM25Doc.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.LuceneBM25",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "positional_or_keyword",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "positional_or_keyword",
        "name": "b",
        "optional": true
      },
      {
        "annotation": "dict[str, float] | None",
        "default": "None",
        "display_name": "field_boosts",
        "kind": "positional_or_keyword",
        "name": "field_boosts",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.__init__.LuceneBM25.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.LuceneBM25._ensure_searcher",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "docs_iterable",
        "kind": "positional_or_keyword",
        "name": "docs_iterable",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.LuceneBM25.build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      },
      {
        "annotation": "dict[str, str] | None",
        "default": "None",
        "display_name": "fields",
        "kind": "positional_or_keyword",
        "name": "fields",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.__init__.LuceneBM25.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.LuceneImpactIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'naver/splade-v3-distilbert'",
        "display_name": "query_encoder",
        "kind": "positional_or_keyword",
        "name": "query_encoder",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.__init__.LuceneImpactIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.LuceneImpactIndex._ensure",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.LuceneImpactIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.PureImpactIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.PureImpactIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.PureImpactIndex._tokenize",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "docs_iterable",
        "kind": "positional_or_keyword",
        "name": "docs_iterable",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.PureImpactIndex.build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.PureImpactIndex.load",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.PureImpactIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.PurePythonBM25",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "positional_or_keyword",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "positional_or_keyword",
        "name": "b",
        "optional": true
      },
      {
        "annotation": "dict[str, float] | None",
        "default": "None",
        "display_name": "field_boosts",
        "kind": "positional_or_keyword",
        "name": "field_boosts",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.__init__.PurePythonBM25.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "term",
        "kind": "positional_or_keyword",
        "name": "term",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.PurePythonBM25._idf",
    "raises": [],
    "returns": [
      {
        "annotation": "float",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.PurePythonBM25._tokenize",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "docs_iterable",
        "kind": "positional_or_keyword",
        "name": "docs_iterable",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.PurePythonBM25.build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.PurePythonBM25.load",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      },
      {
        "annotation": "Mapping[str, str] | None",
        "default": "None",
        "display_name": "fields",
        "kind": "positional_or_keyword",
        "name": "fields",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.__init__.PurePythonBM25.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.SPLADEv3Encoder",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'naver/splade-v3-distilbert'",
        "display_name": "model_id",
        "kind": "positional_or_keyword",
        "name": "model_id",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'cuda'",
        "display_name": "device",
        "kind": "positional_or_keyword",
        "name": "device",
        "optional": true
      },
      {
        "annotation": "int",
        "default": "256",
        "display_name": "topk",
        "kind": "positional_or_keyword",
        "name": "topk",
        "optional": true
      },
      {
        "annotation": "int",
        "default": "512",
        "display_name": "max_seq_len",
        "kind": "positional_or_keyword",
        "name": "max_seq_len",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.__init__.SPLADEv3Encoder.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "texts",
        "kind": "positional_or_keyword",
        "name": "texts",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.SPLADEv3Encoder.encode",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.SparseEncoder",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "texts",
        "kind": "positional_or_keyword",
        "name": "texts",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.SparseEncoder.encode",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.__init__.SparseIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "docs_iterable",
        "kind": "positional_or_keyword",
        "name": "docs_iterable",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.__init__.SparseIndex.build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      },
      {
        "annotation": "Mapping[str, str] | None",
        "default": "None",
        "display_name": "fields",
        "kind": "positional_or_keyword",
        "name": "fields",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.__init__.SparseIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "backend",
        "kind": "positional_or_keyword",
        "name": "backend",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "keyword_only",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "keyword_only",
        "name": "b",
        "optional": true
      },
      {
        "annotation": "dict[str, float] | None",
        "default": "None",
        "display_name": "field_boosts",
        "kind": "keyword_only",
        "name": "field_boosts",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.__init__.get_bm25",
    "raises": [],
    "returns": [
      {
        "annotation": "PurePythonBM25 | LuceneBM25",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "backend",
        "kind": "positional_or_keyword",
        "name": "backend",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'naver/splade-v3-distilbert'",
        "display_name": "query_encoder",
        "kind": "positional_or_keyword",
        "name": "query_encoder",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.__init__.get_splade",
    "raises": [],
    "returns": [
      {
        "annotation": "PureImpactIndex | LuceneImpactIndex",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.base",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.base.SparseEncoder",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.base",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "texts",
        "kind": "positional_or_keyword",
        "name": "texts",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.base.SparseEncoder.encode",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.base",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.base.SparseIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.base",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "docs_iterable",
        "kind": "positional_or_keyword",
        "name": "docs_iterable",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.base.SparseIndex.build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.base",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      },
      {
        "annotation": "Mapping[str, str] | None",
        "default": "None",
        "display_name": "fields",
        "kind": "positional_or_keyword",
        "name": "fields",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.base.SparseIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.bm25.BM25Doc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_id",
        "kind": "positional_or_keyword",
        "name": "doc_id",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "length",
        "kind": "positional_or_keyword",
        "name": "length",
        "optional": false
      },
      {
        "annotation": "dict",
        "default": null,
        "display_name": "fields",
        "kind": "positional_or_keyword",
        "name": "fields",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.bm25.BM25Doc.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.bm25.LuceneBM25",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "positional_or_keyword",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "positional_or_keyword",
        "name": "b",
        "optional": true
      },
      {
        "annotation": "dict[str, float] | None",
        "default": "None",
        "display_name": "field_boosts",
        "kind": "positional_or_keyword",
        "name": "field_boosts",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.bm25.LuceneBM25.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.bm25.LuceneBM25._ensure_searcher",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "docs_iterable",
        "kind": "positional_or_keyword",
        "name": "docs_iterable",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.bm25.LuceneBM25.build",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      },
      {
        "annotation": "dict[str, str] | None",
        "default": "None",
        "display_name": "fields",
        "kind": "positional_or_keyword",
        "name": "fields",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.bm25.LuceneBM25.search",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.bm25.PurePythonBM25",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "positional_or_keyword",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "positional_or_keyword",
        "name": "b",
        "optional": true
      },
      {
        "annotation": "dict[str, float] | None",
        "default": "None",
        "display_name": "field_boosts",
        "kind": "positional_or_keyword",
        "name": "field_boosts",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.bm25.PurePythonBM25.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "term",
        "kind": "positional_or_keyword",
        "name": "term",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.bm25.PurePythonBM25._idf",
    "raises": [],
    "returns": [
      {
        "annotation": "float",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.bm25.PurePythonBM25._tokenize",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "docs_iterable",
        "kind": "positional_or_keyword",
        "name": "docs_iterable",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.bm25.PurePythonBM25.build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.bm25.PurePythonBM25.load",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      },
      {
        "annotation": "Mapping[str, str] | None",
        "default": "None",
        "display_name": "fields",
        "kind": "positional_or_keyword",
        "name": "fields",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.bm25.PurePythonBM25.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "embeddings_sparse.bm25",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "backend",
        "kind": "positional_or_keyword",
        "name": "backend",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "keyword_only",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "keyword_only",
        "name": "b",
        "optional": true
      },
      {
        "annotation": "dict[str, float] | None",
        "default": "None",
        "display_name": "field_boosts",
        "kind": "keyword_only",
        "name": "field_boosts",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.bm25.get_bm25",
    "raises": [],
    "returns": [
      {
        "annotation": "PurePythonBM25 | LuceneBM25",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.splade.LuceneImpactIndex",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'naver/splade-v3-distilbert'",
        "display_name": "query_encoder",
        "kind": "positional_or_keyword",
        "name": "query_encoder",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.splade.LuceneImpactIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.splade.LuceneImpactIndex._ensure",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.splade.LuceneImpactIndex.search",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.splade.PureImpactIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.splade.PureImpactIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.splade.PureImpactIndex._tokenize",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "docs_iterable",
        "kind": "positional_or_keyword",
        "name": "docs_iterable",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.splade.PureImpactIndex.build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.splade.PureImpactIndex.load",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.splade.PureImpactIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [],
    "qname": "embeddings_sparse.splade.SPLADEv3Encoder",
    "raises": [
      {
        "description": "Raised when TODO for NotImplementedError.",
        "exception": "NotImplementedError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'naver/splade-v3-distilbert'",
        "display_name": "model_id",
        "kind": "positional_or_keyword",
        "name": "model_id",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'cuda'",
        "display_name": "device",
        "kind": "positional_or_keyword",
        "name": "device",
        "optional": true
      },
      {
        "annotation": "int",
        "default": "256",
        "display_name": "topk",
        "kind": "positional_or_keyword",
        "name": "topk",
        "optional": true
      },
      {
        "annotation": "int",
        "default": "512",
        "display_name": "max_seq_len",
        "kind": "positional_or_keyword",
        "name": "max_seq_len",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.splade.SPLADEv3Encoder.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "texts",
        "kind": "positional_or_keyword",
        "name": "texts",
        "optional": false
      }
    ],
    "qname": "embeddings_sparse.splade.SPLADEv3Encoder.encode",
    "raises": [
      {
        "description": "Raised when TODO for NotImplementedError.",
        "exception": "NotImplementedError"
      }
    ],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "embeddings_sparse.splade",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "backend",
        "kind": "positional_or_keyword",
        "name": "backend",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'naver/splade-v3-distilbert'",
        "display_name": "query_encoder",
        "kind": "positional_or_keyword",
        "name": "query_encoder",
        "optional": true
      }
    ],
    "qname": "embeddings_sparse.splade.get_splade",
    "raises": [],
    "returns": [
      {
        "annotation": "PureImpactIndex | LuceneImpactIndex",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kg_builder.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kg_builder.__init__.MockKG",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kg_builder.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kg_builder.__init__.MockKG.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kg_builder.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "a",
        "kind": "positional_or_keyword",
        "name": "a",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "b",
        "kind": "positional_or_keyword",
        "name": "b",
        "optional": false
      }
    ],
    "qname": "kg_builder.__init__.MockKG.add_edge",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kg_builder.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "concept_id",
        "kind": "positional_or_keyword",
        "name": "concept_id",
        "optional": false
      }
    ],
    "qname": "kg_builder.__init__.MockKG.add_mention",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kg_builder.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      }
    ],
    "qname": "kg_builder.__init__.MockKG.linked_concepts",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kg_builder.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "concept_id",
        "kind": "positional_or_keyword",
        "name": "concept_id",
        "optional": false
      }
    ],
    "qname": "kg_builder.__init__.MockKG.one_hop",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kg_builder.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kg_builder.__init__.Neo4jStore",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kg_builder.mock_kg",
    "notes": [],
    "parameters": [],
    "qname": "kg_builder.mock_kg.MockKG",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kg_builder.mock_kg",
    "notes": [],
    "parameters": [],
    "qname": "kg_builder.mock_kg.MockKG.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kg_builder.mock_kg",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "a",
        "kind": "positional_or_keyword",
        "name": "a",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "b",
        "kind": "positional_or_keyword",
        "name": "b",
        "optional": false
      }
    ],
    "qname": "kg_builder.mock_kg.MockKG.add_edge",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kg_builder.mock_kg",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "concept_id",
        "kind": "positional_or_keyword",
        "name": "concept_id",
        "optional": false
      }
    ],
    "qname": "kg_builder.mock_kg.MockKG.add_mention",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kg_builder.mock_kg",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      }
    ],
    "qname": "kg_builder.mock_kg.MockKG.linked_concepts",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kg_builder.mock_kg",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "concept_id",
        "kind": "positional_or_keyword",
        "name": "concept_id",
        "optional": false
      }
    ],
    "qname": "kg_builder.mock_kg.MockKG.one_hop",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kg_builder.neo4j_store",
    "notes": [],
    "parameters": [],
    "qname": "kg_builder.neo4j_store.Neo4jStore",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "kgfoundry.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.__init__.__getattr__",
    "raises": [
      {
        "description": "Raised when TODO for AttributeError.",
        "exception": "AttributeError"
      }
    ],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.__init__._ensure_namespace_alias",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "kgfoundry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.__init__._load",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "ModuleType",
        "default": null,
        "display_name": "module",
        "kind": "positional_or_keyword",
        "name": "module",
        "optional": false
      },
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "exports",
        "kind": "positional_or_keyword",
        "name": "exports",
        "optional": false
      }
    ],
    "qname": "kgfoundry.__init__.namespace_dir",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "ModuleType",
        "default": null,
        "display_name": "module",
        "kind": "positional_or_keyword",
        "name": "module",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.__init__.namespace_getattr",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry._namespace_proxy",
    "notes": [],
    "parameters": [
      {
        "annotation": "ModuleType",
        "default": null,
        "display_name": "module",
        "kind": "positional_or_keyword",
        "name": "module",
        "optional": false
      },
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "exports",
        "kind": "positional_or_keyword",
        "name": "exports",
        "optional": false
      }
    ],
    "qname": "kgfoundry._namespace_proxy.namespace_dir",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry._namespace_proxy",
    "notes": [],
    "parameters": [
      {
        "annotation": "ModuleType",
        "default": null,
        "display_name": "module",
        "kind": "positional_or_keyword",
        "name": "module",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry._namespace_proxy.namespace_getattr",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.docling.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.docling.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.docling.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.docling.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.download.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.download.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.download.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.download.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.embeddings_dense.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.embeddings_dense.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.embeddings_dense.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.embeddings_dense.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.embeddings_sparse.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.embeddings_sparse.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.embeddings_sparse.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.embeddings_sparse.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.kg_builder.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.kg_builder.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.kg_builder.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.kg_builder.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.kgfoundry_common.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.kgfoundry_common.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.linking.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.linking.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.linking.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.linking.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.observability.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.observability.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.observability.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.observability.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.ontology.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.ontology.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.ontology.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.ontology.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.orchestration.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.orchestration.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.orchestration.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.registry.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.registry.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.registry.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.search_api.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.search_api.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_api.app",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.search_api.app.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_api.app",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.search_api.app.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_api.bm25_index",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.search_api.bm25_index.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.search_api.bm25_index.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_api.faiss_adapter",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.search_api.faiss_adapter.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.search_api.faiss_adapter.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_client.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.search_client.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_client.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.search_client.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_client.client",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.search_client.client.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.search_client.client",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.search_client.client.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry.vectorstore_faiss.__init__.__dir__",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry.vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "name",
        "kind": "positional_or_keyword",
        "name": "name",
        "optional": false
      }
    ],
    "qname": "kgfoundry.vectorstore_faiss.__init__.__getattr__",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.BaseModel",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**data",
        "kind": "var_keyword",
        "name": "data",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.__init__.BaseModel.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'python'",
        "display_name": "mode",
        "kind": "keyword_only",
        "name": "mode",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "include",
        "kind": "keyword_only",
        "name": "include",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "exclude",
        "kind": "keyword_only",
        "name": "exclude",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "context",
        "kind": "keyword_only",
        "name": "context",
        "optional": true
      },
      {
        "annotation": "bool | None",
        "default": "None",
        "display_name": "by_alias",
        "kind": "keyword_only",
        "name": "by_alias",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_unset",
        "kind": "keyword_only",
        "name": "exclude_unset",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_defaults",
        "kind": "keyword_only",
        "name": "exclude_defaults",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_none",
        "kind": "keyword_only",
        "name": "exclude_none",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_computed_fields",
        "kind": "keyword_only",
        "name": "exclude_computed_fields",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "round_trip",
        "kind": "keyword_only",
        "name": "round_trip",
        "optional": true
      },
      {
        "annotation": "bool | str",
        "default": "True",
        "display_name": "warnings",
        "kind": "keyword_only",
        "name": "warnings",
        "optional": true
      },
      {
        "annotation": "Callable[[object], object] | None",
        "default": "None",
        "display_name": "fallback",
        "kind": "keyword_only",
        "name": "fallback",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "serialize_as_any",
        "kind": "keyword_only",
        "name": "serialize_as_any",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.__init__.BaseModel.model_dump",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "int | None",
        "default": "None",
        "display_name": "indent",
        "kind": "keyword_only",
        "name": "indent",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "ensure_ascii",
        "kind": "keyword_only",
        "name": "ensure_ascii",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "include",
        "kind": "keyword_only",
        "name": "include",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "exclude",
        "kind": "keyword_only",
        "name": "exclude",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "context",
        "kind": "keyword_only",
        "name": "context",
        "optional": true
      },
      {
        "annotation": "bool | None",
        "default": "None",
        "display_name": "by_alias",
        "kind": "keyword_only",
        "name": "by_alias",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_unset",
        "kind": "keyword_only",
        "name": "exclude_unset",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_defaults",
        "kind": "keyword_only",
        "name": "exclude_defaults",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_none",
        "kind": "keyword_only",
        "name": "exclude_none",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_computed_fields",
        "kind": "keyword_only",
        "name": "exclude_computed_fields",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "round_trip",
        "kind": "keyword_only",
        "name": "round_trip",
        "optional": true
      },
      {
        "annotation": "bool | str",
        "default": "True",
        "display_name": "warnings",
        "kind": "keyword_only",
        "name": "warnings",
        "optional": true
      },
      {
        "annotation": "Callable[[object], object] | None",
        "default": "None",
        "display_name": "fallback",
        "kind": "keyword_only",
        "name": "fallback",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "serialize_as_any",
        "kind": "keyword_only",
        "name": "serialize_as_any",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.__init__.BaseModel.model_dump_json",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": null,
        "default": null,
        "display_name": "cls",
        "kind": "positional_only",
        "name": "cls",
        "optional": false
      },
      {
        "annotation": "object",
        "default": null,
        "display_name": "obj",
        "kind": "positional_only",
        "name": "obj",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.__init__.BaseModel.model_validate",
    "raises": [],
    "returns": [
      {
        "annotation": "Self",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.Chunk",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.ChunkingError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.Doc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.DoclingError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.DoctagsAsset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.DownloadError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.EmbeddingError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.IndexBuildError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.JsonFormatter",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "logging.LogRecord",
        "default": null,
        "display_name": "record",
        "kind": "positional_or_keyword",
        "name": "record",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.__init__.JsonFormatter.format",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.LinkAssertion",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.LinkerCalibrationError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.ModuleMeta",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.NavMap",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.NavSection",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.Neo4jError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.OCRTimeoutError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.OntologyParseError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.ParquetChunkWriter",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'docling_hybrid'",
        "display_name": "model",
        "kind": "positional_or_keyword",
        "name": "model",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'dev'",
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.__init__.ParquetChunkWriter.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.ParquetChunkWriter.chunk_schema",
    "raises": [],
    "returns": [
      {
        "annotation": "pa.schema",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.__init__.ParquetChunkWriter.write",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.ParquetVectorWriter",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.__init__.ParquetVectorWriter.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": null,
        "display_name": "dim",
        "kind": "positional_or_keyword",
        "name": "dim",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.__init__.ParquetVectorWriter.dense_schema",
    "raises": [],
    "returns": [
      {
        "annotation": "pa.schema",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.ParquetVectorWriter.splade_schema",
    "raises": [],
    "returns": [
      {
        "annotation": "pa.schema",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "model",
        "kind": "positional_or_keyword",
        "name": "model",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "dim",
        "kind": "positional_or_keyword",
        "name": "dim",
        "optional": false
      },
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "records",
        "kind": "positional_or_keyword",
        "name": "records",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "0",
        "display_name": "shard",
        "kind": "positional_or_keyword",
        "name": "shard",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.__init__.ParquetVectorWriter.write_dense",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "model",
        "kind": "positional_or_keyword",
        "name": "model",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "records",
        "kind": "positional_or_keyword",
        "name": "records",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "0",
        "display_name": "shard",
        "kind": "positional_or_keyword",
        "name": "shard",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.__init__.ParquetVectorWriter.write_splade",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.SpladeOOMError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.SymbolMeta",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.__init__.UnsupportedMIMEError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "path",
        "kind": "positional_or_keyword",
        "name": "path",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.__init__.load_config",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": "logging.INFO",
        "display_name": "level",
        "kind": "positional_or_keyword",
        "name": "level",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.__init__.setup_logging",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_hash",
        "kind": "positional_or_keyword",
        "name": "doc_hash",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "start",
        "kind": "positional_or_keyword",
        "name": "start",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "end",
        "kind": "positional_or_keyword",
        "name": "end",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.__init__.urn_chunk",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry_common.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.__init__.urn_doc_from_text",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry_common.config",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "path",
        "kind": "positional_or_keyword",
        "name": "path",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.config.load_config",
    "raises": [
      {
        "description": "Raised when TODO for TypeError.",
        "exception": "TypeError"
      }
    ],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.ChunkingError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.DoclingError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.DownloadError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.EmbeddingError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.IndexBuildError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.LinkerCalibrationError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.Neo4jError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.OCRTimeoutError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.OntologyParseError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.SpladeOOMError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.errors",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.errors.UnsupportedMIMEError",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "kgfoundry_common.ids",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_hash",
        "kind": "positional_or_keyword",
        "name": "doc_hash",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "start",
        "kind": "positional_or_keyword",
        "name": "start",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "end",
        "kind": "positional_or_keyword",
        "name": "end",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.ids.urn_chunk",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry_common.ids",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.ids.urn_doc_from_text",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.logging",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.logging.JsonFormatter",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.logging",
    "notes": [],
    "parameters": [
      {
        "annotation": "logging.LogRecord",
        "default": null,
        "display_name": "record",
        "kind": "positional_or_keyword",
        "name": "record",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.logging.JsonFormatter.format",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "kgfoundry_common.logging",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": "logging.INFO",
        "display_name": "level",
        "kind": "positional_or_keyword",
        "name": "level",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.logging.setup_logging",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.models",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.models.Chunk",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.models",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.models.Doc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.models",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.models.DoctagsAsset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.models",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.models.LinkAssertion",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.navmap_types",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.navmap_types.ModuleMeta",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.navmap_types",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.navmap_types.NavMap",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.navmap_types",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.navmap_types.NavSection",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.navmap_types",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.navmap_types.SymbolMeta",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.parquet_io.ParquetChunkWriter",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'docling_hybrid'",
        "display_name": "model",
        "kind": "positional_or_keyword",
        "name": "model",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'dev'",
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.parquet_io.ParquetChunkWriter.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.parquet_io.ParquetChunkWriter.chunk_schema",
    "raises": [],
    "returns": [
      {
        "annotation": "pa.schema",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.parquet_io.ParquetChunkWriter.write",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.parquet_io.ParquetVectorWriter",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.parquet_io.ParquetVectorWriter.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": null,
        "display_name": "dim",
        "kind": "positional_or_keyword",
        "name": "dim",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.parquet_io.ParquetVectorWriter.dense_schema",
    "raises": [],
    "returns": [
      {
        "annotation": "pa.schema",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.parquet_io.ParquetVectorWriter.splade_schema",
    "raises": [],
    "returns": [
      {
        "annotation": "pa.schema",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "model",
        "kind": "positional_or_keyword",
        "name": "model",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "dim",
        "kind": "positional_or_keyword",
        "name": "dim",
        "optional": false
      },
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "records",
        "kind": "positional_or_keyword",
        "name": "records",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "0",
        "display_name": "shard",
        "kind": "positional_or_keyword",
        "name": "shard",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.parquet_io.ParquetVectorWriter.write_dense",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.parquet_io",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "model",
        "kind": "positional_or_keyword",
        "name": "model",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "records",
        "kind": "positional_or_keyword",
        "name": "records",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "0",
        "display_name": "shard",
        "kind": "positional_or_keyword",
        "name": "shard",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.parquet_io.ParquetVectorWriter.write_splade",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "kgfoundry_common.pydantic",
    "notes": [],
    "parameters": [],
    "qname": "kgfoundry_common.pydantic.BaseModel",
    "raises": [
      {
        "description": "Raised when TODO for NotImplementedError.",
        "exception": "NotImplementedError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.pydantic",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**data",
        "kind": "var_keyword",
        "name": "data",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.pydantic.BaseModel.__init__",
    "raises": [
      {
        "description": "Raised when TODO for NotImplementedError.",
        "exception": "NotImplementedError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.pydantic",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'python'",
        "display_name": "mode",
        "kind": "keyword_only",
        "name": "mode",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "include",
        "kind": "keyword_only",
        "name": "include",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "exclude",
        "kind": "keyword_only",
        "name": "exclude",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "context",
        "kind": "keyword_only",
        "name": "context",
        "optional": true
      },
      {
        "annotation": "bool | None",
        "default": "None",
        "display_name": "by_alias",
        "kind": "keyword_only",
        "name": "by_alias",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_unset",
        "kind": "keyword_only",
        "name": "exclude_unset",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_defaults",
        "kind": "keyword_only",
        "name": "exclude_defaults",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_none",
        "kind": "keyword_only",
        "name": "exclude_none",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_computed_fields",
        "kind": "keyword_only",
        "name": "exclude_computed_fields",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "round_trip",
        "kind": "keyword_only",
        "name": "round_trip",
        "optional": true
      },
      {
        "annotation": "bool | str",
        "default": "True",
        "display_name": "warnings",
        "kind": "keyword_only",
        "name": "warnings",
        "optional": true
      },
      {
        "annotation": "Callable[[object], object] | None",
        "default": "None",
        "display_name": "fallback",
        "kind": "keyword_only",
        "name": "fallback",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "serialize_as_any",
        "kind": "keyword_only",
        "name": "serialize_as_any",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.pydantic.BaseModel.model_dump",
    "raises": [
      {
        "description": "Raised when TODO for NotImplementedError.",
        "exception": "NotImplementedError"
      }
    ],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.pydantic",
    "notes": [],
    "parameters": [
      {
        "annotation": "int | None",
        "default": "None",
        "display_name": "indent",
        "kind": "keyword_only",
        "name": "indent",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "ensure_ascii",
        "kind": "keyword_only",
        "name": "ensure_ascii",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "include",
        "kind": "keyword_only",
        "name": "include",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "exclude",
        "kind": "keyword_only",
        "name": "exclude",
        "optional": true
      },
      {
        "annotation": "object | None",
        "default": "None",
        "display_name": "context",
        "kind": "keyword_only",
        "name": "context",
        "optional": true
      },
      {
        "annotation": "bool | None",
        "default": "None",
        "display_name": "by_alias",
        "kind": "keyword_only",
        "name": "by_alias",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_unset",
        "kind": "keyword_only",
        "name": "exclude_unset",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_defaults",
        "kind": "keyword_only",
        "name": "exclude_defaults",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_none",
        "kind": "keyword_only",
        "name": "exclude_none",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "exclude_computed_fields",
        "kind": "keyword_only",
        "name": "exclude_computed_fields",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "round_trip",
        "kind": "keyword_only",
        "name": "round_trip",
        "optional": true
      },
      {
        "annotation": "bool | str",
        "default": "True",
        "display_name": "warnings",
        "kind": "keyword_only",
        "name": "warnings",
        "optional": true
      },
      {
        "annotation": "Callable[[object], object] | None",
        "default": "None",
        "display_name": "fallback",
        "kind": "keyword_only",
        "name": "fallback",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "serialize_as_any",
        "kind": "keyword_only",
        "name": "serialize_as_any",
        "optional": true
      }
    ],
    "qname": "kgfoundry_common.pydantic.BaseModel.model_dump_json",
    "raises": [
      {
        "description": "Raised when TODO for NotImplementedError.",
        "exception": "NotImplementedError"
      }
    ],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "kgfoundry_common.pydantic",
    "notes": [],
    "parameters": [
      {
        "annotation": null,
        "default": null,
        "display_name": "cls",
        "kind": "positional_only",
        "name": "cls",
        "optional": false
      },
      {
        "annotation": "object",
        "default": null,
        "display_name": "obj",
        "kind": "positional_only",
        "name": "obj",
        "optional": false
      }
    ],
    "qname": "kgfoundry_common.pydantic.BaseModel.model_validate",
    "raises": [
      {
        "description": "Raised when TODO for NotImplementedError.",
        "exception": "NotImplementedError"
      }
    ],
    "returns": [
      {
        "annotation": "Self",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "linking.__init__",
    "notes": [],
    "parameters": [],
    "qname": "linking.__init__.Linker",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "linking.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "pairs",
        "kind": "positional_or_keyword",
        "name": "pairs",
        "optional": false
      }
    ],
    "qname": "linking.__init__.isotonic_calibrate",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "linking.calibration",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "pairs",
        "kind": "positional_or_keyword",
        "name": "pairs",
        "optional": false
      }
    ],
    "qname": "linking.calibration.isotonic_calibrate",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "linking.linker",
    "notes": [],
    "parameters": [],
    "qname": "linking.linker.Linker",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "observability.__init__",
    "notes": [],
    "parameters": [],
    "qname": "observability.__init__._NoopMetric",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "observability.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.__init__._NoopMetric.inc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "observability.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.__init__._NoopMetric.labels",
    "raises": [],
    "returns": [
      {
        "annotation": "_NoopMetric",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "observability.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.__init__._NoopMetric.observe",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "observability.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.__init__._NoopMetric.set",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "observability.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.__init__._make_noop_metric",
    "raises": [],
    "returns": [
      {
        "annotation": "_NoopMetric",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "observability.metrics",
    "notes": [],
    "parameters": [],
    "qname": "observability.metrics._NoopMetric",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "observability.metrics",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.metrics._NoopMetric.inc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "observability.metrics",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.metrics._NoopMetric.labels",
    "raises": [],
    "returns": [
      {
        "annotation": "_NoopMetric",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "observability.metrics",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.metrics._NoopMetric.observe",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "observability.metrics",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.metrics._NoopMetric.set",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "observability.metrics",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "observability.metrics._make_noop_metric",
    "raises": [],
    "returns": [
      {
        "annotation": "_NoopMetric",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "ontology.__init__",
    "notes": [],
    "parameters": [],
    "qname": "ontology.__init__.Concept",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "ontology.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "id",
        "kind": "positional_or_keyword",
        "name": "id",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "label",
        "kind": "positional_or_keyword",
        "name": "label",
        "optional": true
      }
    ],
    "qname": "ontology.__init__.Concept.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "ontology.__init__",
    "notes": [],
    "parameters": [],
    "qname": "ontology.__init__.OntologyCatalog",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "ontology.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "concepts",
        "kind": "positional_or_keyword",
        "name": "concepts",
        "optional": false
      }
    ],
    "qname": "ontology.__init__.OntologyCatalog.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "ontology.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "concept_id",
        "kind": "positional_or_keyword",
        "name": "concept_id",
        "optional": false
      }
    ],
    "qname": "ontology.__init__.OntologyCatalog.hydrate",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "ontology.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "concept_id",
        "kind": "positional_or_keyword",
        "name": "concept_id",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "1",
        "display_name": "depth",
        "kind": "positional_or_keyword",
        "name": "depth",
        "optional": true
      }
    ],
    "qname": "ontology.__init__.OntologyCatalog.neighbors",
    "raises": [],
    "returns": [
      {
        "annotation": "set",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "ontology.__init__",
    "notes": [],
    "parameters": [],
    "qname": "ontology.__init__.OntologyLoader",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "ontology.catalog",
    "notes": [],
    "parameters": [],
    "qname": "ontology.catalog.Concept",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "ontology.catalog",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "id",
        "kind": "positional_or_keyword",
        "name": "id",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "label",
        "kind": "positional_or_keyword",
        "name": "label",
        "optional": true
      }
    ],
    "qname": "ontology.catalog.Concept.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "ontology.catalog",
    "notes": [],
    "parameters": [],
    "qname": "ontology.catalog.OntologyCatalog",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "ontology.catalog",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "concepts",
        "kind": "positional_or_keyword",
        "name": "concepts",
        "optional": false
      }
    ],
    "qname": "ontology.catalog.OntologyCatalog.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "ontology.catalog",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "concept_id",
        "kind": "positional_or_keyword",
        "name": "concept_id",
        "optional": false
      }
    ],
    "qname": "ontology.catalog.OntologyCatalog.hydrate",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "ontology.catalog",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "concept_id",
        "kind": "positional_or_keyword",
        "name": "concept_id",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "1",
        "display_name": "depth",
        "kind": "positional_or_keyword",
        "name": "depth",
        "optional": true
      }
    ],
    "qname": "ontology.catalog.OntologyCatalog.neighbors",
    "raises": [],
    "returns": [
      {
        "annotation": "set",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "ontology.loader",
    "notes": [],
    "parameters": [],
    "qname": "ontology.loader.OntologyLoader",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [],
    "qname": "orchestration.__init__._e2e_flow_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'/data'",
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'/data/catalog/catalog.duckdb'",
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": true
      }
    ],
    "qname": "orchestration.__init__._fixture_pipeline_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "msg",
        "kind": "positional_or_keyword",
        "name": "msg",
        "optional": false
      }
    ],
    "qname": "orchestration.__init__._t_echo_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": false
      }
    ],
    "qname": "orchestration.__init__._t_prepare_dirs_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      },
      {
        "annotation": "tuple",
        "default": null,
        "display_name": "chunks_info",
        "kind": "positional_or_keyword",
        "name": "chunks_info",
        "optional": false
      },
      {
        "annotation": "tuple",
        "default": null,
        "display_name": "dense_info",
        "kind": "positional_or_keyword",
        "name": "dense_info",
        "optional": false
      },
      {
        "annotation": "tuple",
        "default": null,
        "display_name": "sparse_info",
        "kind": "positional_or_keyword",
        "name": "sparse_info",
        "optional": false
      }
    ],
    "qname": "orchestration.__init__._t_register_in_duckdb_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunks_root",
        "kind": "positional_or_keyword",
        "name": "chunks_root",
        "optional": false
      }
    ],
    "qname": "orchestration.__init__._t_write_fixture_chunks_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "tuple",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dense_root",
        "kind": "positional_or_keyword",
        "name": "dense_root",
        "optional": false
      }
    ],
    "qname": "orchestration.__init__._t_write_fixture_dense_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "tuple",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "sparse_root",
        "kind": "positional_or_keyword",
        "name": "sparse_root",
        "optional": false
      }
    ],
    "qname": "orchestration.__init__._t_write_fixture_splade_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "tuple",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": "8080",
        "display_name": "port",
        "kind": "positional_or_keyword",
        "name": "port",
        "optional": true
      }
    ],
    "qname": "orchestration.__init__.api",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [],
    "qname": "orchestration.__init__.e2e",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "typer.Argument(..., help='Path to Parquet/JSONL with chunks')",
        "display_name": "chunks_parquet",
        "kind": "positional_or_keyword",
        "name": "chunks_parquet",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "typer.Option('lucene', help='lucene|pure')",
        "display_name": "backend",
        "kind": "positional_or_keyword",
        "name": "backend",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "typer.Option('./_indices/bm25', help='Output index directory')",
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": true
      }
    ],
    "qname": "orchestration.__init__.index_bm25",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "orchestration.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "typer.Argument(..., help='Path to dense vectors JSON (skeleton)')",
        "display_name": "dense_vectors",
        "kind": "positional_or_keyword",
        "name": "dense_vectors",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "typer.Option('./_indices/faiss/shard_000.idx', help='Output index (CPU .idx)')",
        "display_name": "index_path",
        "kind": "positional_or_keyword",
        "name": "index_path",
        "optional": true
      }
    ],
    "qname": "orchestration.__init__.index_faiss",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "orchestration.cli",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": "8080",
        "display_name": "port",
        "kind": "positional_or_keyword",
        "name": "port",
        "optional": true
      }
    ],
    "qname": "orchestration.cli.api",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "orchestration.cli",
    "notes": [],
    "parameters": [],
    "qname": "orchestration.cli.e2e",
    "raises": [
      {
        "description": "Raised when TODO for Exit.",
        "exception": "Exit"
      }
    ],
    "returns": []
  },
  {
    "kind": "function",
    "module": "orchestration.cli",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "typer.Argument(..., help='Path to Parquet/JSONL with chunks')",
        "display_name": "chunks_parquet",
        "kind": "positional_or_keyword",
        "name": "chunks_parquet",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "typer.Option('lucene', help='lucene|pure')",
        "display_name": "backend",
        "kind": "positional_or_keyword",
        "name": "backend",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "typer.Option('./_indices/bm25', help='Output index directory')",
        "display_name": "index_dir",
        "kind": "positional_or_keyword",
        "name": "index_dir",
        "optional": true
      }
    ],
    "qname": "orchestration.cli.index_bm25",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "orchestration.cli",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "typer.Argument(..., help='Path to dense vectors JSON (skeleton)')",
        "display_name": "dense_vectors",
        "kind": "positional_or_keyword",
        "name": "dense_vectors",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "typer.Option('./_indices/faiss/shard_000.idx', help='Output index (CPU .idx)')",
        "display_name": "index_path",
        "kind": "positional_or_keyword",
        "name": "index_path",
        "optional": true
      }
    ],
    "qname": "orchestration.cli.index_faiss",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "orchestration.fixture_flow",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'/data'",
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'/data/catalog/catalog.duckdb'",
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": true
      }
    ],
    "qname": "orchestration.fixture_flow._fixture_pipeline_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.fixture_flow",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": false
      }
    ],
    "qname": "orchestration.fixture_flow._t_prepare_dirs_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.fixture_flow",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      },
      {
        "annotation": "tuple",
        "default": null,
        "display_name": "chunks_info",
        "kind": "positional_or_keyword",
        "name": "chunks_info",
        "optional": false
      },
      {
        "annotation": "tuple",
        "default": null,
        "display_name": "dense_info",
        "kind": "positional_or_keyword",
        "name": "dense_info",
        "optional": false
      },
      {
        "annotation": "tuple",
        "default": null,
        "display_name": "sparse_info",
        "kind": "positional_or_keyword",
        "name": "sparse_info",
        "optional": false
      }
    ],
    "qname": "orchestration.fixture_flow._t_register_in_duckdb_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.fixture_flow",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunks_root",
        "kind": "positional_or_keyword",
        "name": "chunks_root",
        "optional": false
      }
    ],
    "qname": "orchestration.fixture_flow._t_write_fixture_chunks_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "tuple",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.fixture_flow",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dense_root",
        "kind": "positional_or_keyword",
        "name": "dense_root",
        "optional": false
      }
    ],
    "qname": "orchestration.fixture_flow._t_write_fixture_dense_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "tuple",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.fixture_flow",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "sparse_root",
        "kind": "positional_or_keyword",
        "name": "sparse_root",
        "optional": false
      }
    ],
    "qname": "orchestration.fixture_flow._t_write_fixture_splade_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "tuple",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.flows",
    "notes": [],
    "parameters": [],
    "qname": "orchestration.flows._e2e_flow_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "orchestration.flows",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "msg",
        "kind": "positional_or_keyword",
        "name": "msg",
        "optional": false
      }
    ],
    "qname": "orchestration.flows._t_echo_impl",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [],
    "qname": "registry.__init__.DuckDBRegistry",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "kind",
        "kind": "positional_or_keyword",
        "name": "kind",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.begin_dataset",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "bool",
        "default": null,
        "display_name": "success",
        "kind": "positional_or_keyword",
        "name": "success",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "notes",
        "kind": "positional_or_keyword",
        "name": "notes",
        "optional": true
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.close_run",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "parquet_root",
        "kind": "positional_or_keyword",
        "name": "parquet_root",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.commit_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event_name",
        "kind": "positional_or_keyword",
        "name": "event_name",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "payload",
        "kind": "positional_or_keyword",
        "name": "payload",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.emit_event",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event",
        "kind": "positional_or_keyword",
        "name": "event",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "error_class",
        "kind": "positional_or_keyword",
        "name": "error_class",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "message",
        "kind": "positional_or_keyword",
        "name": "message",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.incident",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "purpose",
        "kind": "positional_or_keyword",
        "name": "purpose",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "model_id",
        "kind": "positional_or_keyword",
        "name": "model_id",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "revision",
        "kind": "positional_or_keyword",
        "name": "revision",
        "optional": true
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "config",
        "kind": "positional_or_keyword",
        "name": "config",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.insert_run",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "assets",
        "kind": "positional_or_keyword",
        "name": "assets",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.register_doctags",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "docs",
        "kind": "positional_or_keyword",
        "name": "docs",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.register_documents",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistry.rollback_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [],
    "qname": "registry.__init__.DuckDBRegistryHelper",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistryHelper.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [],
    "qname": "registry.__init__.DuckDBRegistryHelper._con",
    "raises": [],
    "returns": [
      {
        "annotation": "duckdb.DuckDBPyConnection",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "kind",
        "kind": "positional_or_keyword",
        "name": "kind",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistryHelper.begin_dataset",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "bool",
        "default": null,
        "display_name": "success",
        "kind": "positional_or_keyword",
        "name": "success",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "notes",
        "kind": "positional_or_keyword",
        "name": "notes",
        "optional": true
      }
    ],
    "qname": "registry.__init__.DuckDBRegistryHelper.close_run",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "parquet_root",
        "kind": "positional_or_keyword",
        "name": "parquet_root",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistryHelper.commit_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event_name",
        "kind": "positional_or_keyword",
        "name": "event_name",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "payload",
        "kind": "positional_or_keyword",
        "name": "payload",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistryHelper.emit_event",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "purpose",
        "kind": "positional_or_keyword",
        "name": "purpose",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "model_id",
        "kind": "positional_or_keyword",
        "name": "model_id",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "revision",
        "kind": "positional_or_keyword",
        "name": "revision",
        "optional": true
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "config",
        "kind": "positional_or_keyword",
        "name": "config",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistryHelper.new_run",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "assets",
        "kind": "positional_or_keyword",
        "name": "assets",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistryHelper.register_doctags",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "docs",
        "kind": "positional_or_keyword",
        "name": "docs",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistryHelper.register_documents",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      }
    ],
    "qname": "registry.__init__.DuckDBRegistryHelper.rollback_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [],
    "qname": "registry.__init__.Registry",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "kind",
        "kind": "positional_or_keyword",
        "name": "kind",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      }
    ],
    "qname": "registry.__init__.Registry.begin_dataset",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "bool",
        "default": null,
        "display_name": "success",
        "kind": "positional_or_keyword",
        "name": "success",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "notes",
        "kind": "positional_or_keyword",
        "name": "notes",
        "optional": true
      }
    ],
    "qname": "registry.__init__.Registry.close_run",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "parquet_root",
        "kind": "positional_or_keyword",
        "name": "parquet_root",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "registry.__init__.Registry.commit_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event_name",
        "kind": "positional_or_keyword",
        "name": "event_name",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "payload",
        "kind": "positional_or_keyword",
        "name": "payload",
        "optional": false
      }
    ],
    "qname": "registry.__init__.Registry.emit_event",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event",
        "kind": "positional_or_keyword",
        "name": "event",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "error_class",
        "kind": "positional_or_keyword",
        "name": "error_class",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "message",
        "kind": "positional_or_keyword",
        "name": "message",
        "optional": false
      }
    ],
    "qname": "registry.__init__.Registry.incident",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "purpose",
        "kind": "positional_or_keyword",
        "name": "purpose",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "model_id",
        "kind": "positional_or_keyword",
        "name": "model_id",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "revision",
        "kind": "positional_or_keyword",
        "name": "revision",
        "optional": true
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "config",
        "kind": "positional_or_keyword",
        "name": "config",
        "optional": false
      }
    ],
    "qname": "registry.__init__.Registry.insert_run",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "assets",
        "kind": "positional_or_keyword",
        "name": "assets",
        "optional": false
      }
    ],
    "qname": "registry.__init__.Registry.register_doctags",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "docs",
        "kind": "positional_or_keyword",
        "name": "docs",
        "optional": false
      }
    ],
    "qname": "registry.__init__.Registry.register_documents",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      }
    ],
    "qname": "registry.__init__.Registry.rollback_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db",
        "kind": "positional_or_keyword",
        "name": "db",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "migrations_dir",
        "kind": "positional_or_keyword",
        "name": "migrations_dir",
        "optional": false
      }
    ],
    "qname": "registry.__init__.apply",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "registry.__init__",
    "notes": [],
    "parameters": [],
    "qname": "registry.__init__.main",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "registry.api",
    "notes": [],
    "parameters": [],
    "qname": "registry.api.Registry",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.api",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "kind",
        "kind": "positional_or_keyword",
        "name": "kind",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      }
    ],
    "qname": "registry.api.Registry.begin_dataset",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.api",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "bool",
        "default": null,
        "display_name": "success",
        "kind": "positional_or_keyword",
        "name": "success",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "notes",
        "kind": "positional_or_keyword",
        "name": "notes",
        "optional": true
      }
    ],
    "qname": "registry.api.Registry.close_run",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.api",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "parquet_root",
        "kind": "positional_or_keyword",
        "name": "parquet_root",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "registry.api.Registry.commit_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.api",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event_name",
        "kind": "positional_or_keyword",
        "name": "event_name",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "payload",
        "kind": "positional_or_keyword",
        "name": "payload",
        "optional": false
      }
    ],
    "qname": "registry.api.Registry.emit_event",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.api",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event",
        "kind": "positional_or_keyword",
        "name": "event",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "error_class",
        "kind": "positional_or_keyword",
        "name": "error_class",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "message",
        "kind": "positional_or_keyword",
        "name": "message",
        "optional": false
      }
    ],
    "qname": "registry.api.Registry.incident",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.api",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "purpose",
        "kind": "positional_or_keyword",
        "name": "purpose",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "model_id",
        "kind": "positional_or_keyword",
        "name": "model_id",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "revision",
        "kind": "positional_or_keyword",
        "name": "revision",
        "optional": true
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "config",
        "kind": "positional_or_keyword",
        "name": "config",
        "optional": false
      }
    ],
    "qname": "registry.api.Registry.insert_run",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.api",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "assets",
        "kind": "positional_or_keyword",
        "name": "assets",
        "optional": false
      }
    ],
    "qname": "registry.api.Registry.register_doctags",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.api",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "docs",
        "kind": "positional_or_keyword",
        "name": "docs",
        "optional": false
      }
    ],
    "qname": "registry.api.Registry.register_documents",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.api",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      }
    ],
    "qname": "registry.api.Registry.rollback_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [],
    "qname": "registry.duckdb_registry.DuckDBRegistry",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "kind",
        "kind": "positional_or_keyword",
        "name": "kind",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.begin_dataset",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "bool",
        "default": null,
        "display_name": "success",
        "kind": "positional_or_keyword",
        "name": "success",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "notes",
        "kind": "positional_or_keyword",
        "name": "notes",
        "optional": true
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.close_run",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "parquet_root",
        "kind": "positional_or_keyword",
        "name": "parquet_root",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.commit_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event_name",
        "kind": "positional_or_keyword",
        "name": "event_name",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "payload",
        "kind": "positional_or_keyword",
        "name": "payload",
        "optional": false
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.emit_event",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event",
        "kind": "positional_or_keyword",
        "name": "event",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "error_class",
        "kind": "positional_or_keyword",
        "name": "error_class",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "message",
        "kind": "positional_or_keyword",
        "name": "message",
        "optional": false
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.incident",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "purpose",
        "kind": "positional_or_keyword",
        "name": "purpose",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "model_id",
        "kind": "positional_or_keyword",
        "name": "model_id",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "revision",
        "kind": "positional_or_keyword",
        "name": "revision",
        "optional": true
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "config",
        "kind": "positional_or_keyword",
        "name": "config",
        "optional": false
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.insert_run",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "assets",
        "kind": "positional_or_keyword",
        "name": "assets",
        "optional": false
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.register_doctags",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "docs",
        "kind": "positional_or_keyword",
        "name": "docs",
        "optional": false
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.register_documents",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.duckdb_registry",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      }
    ],
    "qname": "registry.duckdb_registry.DuckDBRegistry.rollback_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "registry.helper",
    "notes": [],
    "parameters": [],
    "qname": "registry.helper.DuckDBRegistryHelper",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      }
    ],
    "qname": "registry.helper.DuckDBRegistryHelper.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [],
    "qname": "registry.helper.DuckDBRegistryHelper._con",
    "raises": [],
    "returns": [
      {
        "annotation": "duckdb.DuckDBPyConnection",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "kind",
        "kind": "positional_or_keyword",
        "name": "kind",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      }
    ],
    "qname": "registry.helper.DuckDBRegistryHelper.begin_dataset",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "run_id",
        "kind": "positional_or_keyword",
        "name": "run_id",
        "optional": false
      },
      {
        "annotation": "bool",
        "default": null,
        "display_name": "success",
        "kind": "positional_or_keyword",
        "name": "success",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "notes",
        "kind": "positional_or_keyword",
        "name": "notes",
        "optional": true
      }
    ],
    "qname": "registry.helper.DuckDBRegistryHelper.close_run",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "parquet_root",
        "kind": "positional_or_keyword",
        "name": "parquet_root",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "registry.helper.DuckDBRegistryHelper.commit_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "event_name",
        "kind": "positional_or_keyword",
        "name": "event_name",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "subject_id",
        "kind": "positional_or_keyword",
        "name": "subject_id",
        "optional": false
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "payload",
        "kind": "positional_or_keyword",
        "name": "payload",
        "optional": false
      }
    ],
    "qname": "registry.helper.DuckDBRegistryHelper.emit_event",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "purpose",
        "kind": "positional_or_keyword",
        "name": "purpose",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "model_id",
        "kind": "positional_or_keyword",
        "name": "model_id",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "revision",
        "kind": "positional_or_keyword",
        "name": "revision",
        "optional": true
      },
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "config",
        "kind": "positional_or_keyword",
        "name": "config",
        "optional": false
      }
    ],
    "qname": "registry.helper.DuckDBRegistryHelper.new_run",
    "raises": [],
    "returns": [
      {
        "annotation": "str",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "assets",
        "kind": "positional_or_keyword",
        "name": "assets",
        "optional": false
      }
    ],
    "qname": "registry.helper.DuckDBRegistryHelper.register_doctags",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "docs",
        "kind": "positional_or_keyword",
        "name": "docs",
        "optional": false
      }
    ],
    "qname": "registry.helper.DuckDBRegistryHelper.register_documents",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "registry.helper",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "dataset_id",
        "kind": "positional_or_keyword",
        "name": "dataset_id",
        "optional": false
      }
    ],
    "qname": "registry.helper.DuckDBRegistryHelper.rollback_dataset",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "registry.migrate",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db",
        "kind": "positional_or_keyword",
        "name": "db",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "migrations_dir",
        "kind": "positional_or_keyword",
        "name": "migrations_dir",
        "optional": false
      }
    ],
    "qname": "registry.migrate.apply",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "registry.migrate",
    "notes": [],
    "parameters": [],
    "qname": "registry.migrate.main",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.BM25Doc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_id",
        "kind": "positional_or_keyword",
        "name": "doc_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "title",
        "kind": "positional_or_keyword",
        "name": "title",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "section",
        "kind": "positional_or_keyword",
        "name": "section",
        "optional": false
      },
      {
        "annotation": "dict",
        "default": null,
        "display_name": "tf",
        "kind": "positional_or_keyword",
        "name": "tf",
        "optional": false
      },
      {
        "annotation": "float",
        "default": null,
        "display_name": "dl",
        "kind": "positional_or_keyword",
        "name": "dl",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.BM25Doc.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.BM25Index",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "positional_or_keyword",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "positional_or_keyword",
        "name": "b",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.BM25Index.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.BM25Index._build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "term",
        "kind": "positional_or_keyword",
        "name": "term",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.BM25Index._idf",
    "raises": [],
    "returns": [
      {
        "annotation": "float",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": null,
        "default": null,
        "display_name": "cls",
        "kind": "positional_or_keyword",
        "name": "cls",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.BM25Index.build_from_duckdb",
    "raises": [],
    "returns": [
      {
        "annotation": "BM25Index",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": null,
        "display_name": "index",
        "kind": "positional_or_keyword",
        "name": "index",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.BM25Index.doc",
    "raises": [],
    "returns": [
      {
        "annotation": "BM25Doc",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": null,
        "default": null,
        "display_name": "cls",
        "kind": "positional_or_keyword",
        "name": "cls",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "path",
        "kind": "positional_or_keyword",
        "name": "path",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "keyword_only",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "keyword_only",
        "name": "b",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.BM25Index.from_parquet",
    "raises": [],
    "returns": [
      {
        "annotation": "BM25Index",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": null,
        "default": null,
        "display_name": "cls",
        "kind": "positional_or_keyword",
        "name": "cls",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "path",
        "kind": "positional_or_keyword",
        "name": "path",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.BM25Index.load",
    "raises": [],
    "returns": [
      {
        "annotation": "BM25Index",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "path",
        "kind": "positional_or_keyword",
        "name": "path",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.BM25Index.save",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.BM25Index.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.ConceptMeta",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.DenseVecs",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "ids",
        "kind": "positional_or_keyword",
        "name": "ids",
        "optional": false
      },
      {
        "annotation": "VecArray",
        "default": null,
        "display_name": "mat",
        "kind": "positional_or_keyword",
        "name": "mat",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.DenseVecs.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.FaissAdapter",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'OPQ64,IVF8192,PQ64'",
        "display_name": "factory",
        "kind": "positional_or_keyword",
        "name": "factory",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'ip'",
        "display_name": "metric",
        "kind": "positional_or_keyword",
        "name": "metric",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.FaissAdapter.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": null,
        "display_name": "cpu_index",
        "kind": "positional_or_keyword",
        "name": "cpu_index",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.FaissAdapter._clone_to_gpu",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Path",
        "default": null,
        "display_name": "source",
        "kind": "positional_or_keyword",
        "name": "source",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.FaissAdapter._load_dense_from_parquet",
    "raises": [],
    "returns": [
      {
        "annotation": "DenseVecs",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.FaissAdapter._load_dense_parquet",
    "raises": [],
    "returns": [
      {
        "annotation": "DenseVecs",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "VecArray",
        "default": null,
        "display_name": "qvec",
        "kind": "positional_or_keyword",
        "name": "qvec",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.FaissAdapter._prepare_queries",
    "raises": [],
    "returns": [
      {
        "annotation": "VecArray",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "VecArray",
        "default": null,
        "display_name": "queries",
        "kind": "positional_or_keyword",
        "name": "queries",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.FaissAdapter._search_with_cpu",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "VecArray",
        "default": null,
        "display_name": "queries",
        "kind": "positional_or_keyword",
        "name": "queries",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.FaissAdapter._search_with_faiss",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.FaissAdapter.build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "cpu_index_path",
        "kind": "positional_or_keyword",
        "name": "cpu_index_path",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.FaissAdapter.load_or_build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "FloatArrayLike",
        "default": null,
        "display_name": "qvec",
        "kind": "positional_or_keyword",
        "name": "qvec",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.FaissAdapter.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.FixtureDoc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_id",
        "kind": "positional_or_keyword",
        "name": "doc_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "title",
        "kind": "positional_or_keyword",
        "name": "title",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "section",
        "kind": "positional_or_keyword",
        "name": "section",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.FixtureDoc.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.FixtureIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'/data'",
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'/data/catalog/catalog.duckdb'",
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.FixtureIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.FixtureIndex._build_lex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.FixtureIndex._load_from_duckdb",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": null,
        "display_name": "index",
        "kind": "positional_or_keyword",
        "name": "index",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.FixtureIndex.doc",
    "raises": [],
    "returns": [
      {
        "annotation": "FixtureDoc",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.FixtureIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.SearchRequest",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.SearchResult",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.SpladeDoc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_id",
        "kind": "positional_or_keyword",
        "name": "doc_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "section",
        "kind": "positional_or_keyword",
        "name": "section",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.SpladeDoc.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.SpladeIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "chunks_dataset_root",
        "kind": "positional_or_keyword",
        "name": "chunks_dataset_root",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "sparse_root",
        "kind": "positional_or_keyword",
        "name": "sparse_root",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.SpladeIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "chunks_root",
        "kind": "positional_or_keyword",
        "name": "chunks_root",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.SpladeIndex._load",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": null,
        "display_name": "index",
        "kind": "positional_or_keyword",
        "name": "index",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.SpladeIndex.doc",
    "raises": [],
    "returns": [
      {
        "annotation": "SpladeDoc",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.SpladeIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "fused",
        "kind": "positional_or_keyword",
        "name": "fused",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.apply_kg_boosts",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str | None",
        "default": "Header(default=None)",
        "display_name": "authorization",
        "kind": "positional_or_keyword",
        "name": "authorization",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.auth",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.detect_query_concepts",
    "raises": [],
    "returns": [
      {
        "annotation": "set",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "body",
        "kind": "positional_or_keyword",
        "name": "body",
        "optional": false
      },
      {
        "annotation": "None",
        "default": "Depends(auth)",
        "display_name": "_",
        "kind": "positional_or_keyword",
        "name": "_",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.graph_concepts",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_api.__init__.healthz",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "query_concepts",
        "kind": "positional_or_keyword",
        "name": "query_concepts",
        "optional": false
      },
      {
        "annotation": "list",
        "default": null,
        "display_name": "chunk_concepts",
        "kind": "positional_or_keyword",
        "name": "chunk_concepts",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.08",
        "display_name": "direct",
        "kind": "positional_or_keyword",
        "name": "direct",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.04",
        "display_name": "one_hop",
        "kind": "positional_or_keyword",
        "name": "one_hop",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.kg_boost",
    "raises": [],
    "returns": [
      {
        "annotation": "float",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.linked_concepts_for_text",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "results",
        "kind": "positional_or_keyword",
        "name": "results",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.7",
        "display_name": "lambda_",
        "kind": "positional_or_keyword",
        "name": "lambda_",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.mmr_deduplicate",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "dense",
        "kind": "positional_or_keyword",
        "name": "dense",
        "optional": false
      },
      {
        "annotation": "list",
        "default": null,
        "display_name": "sparse",
        "kind": "positional_or_keyword",
        "name": "sparse",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "60",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.rrf_fuse",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "SearchRequest",
        "default": null,
        "display_name": "req",
        "kind": "positional_or_keyword",
        "name": "req",
        "optional": false
      },
      {
        "annotation": "None",
        "default": "Depends(auth)",
        "display_name": "_",
        "kind": "positional_or_keyword",
        "name": "_",
        "optional": true
      }
    ],
    "qname": "search_api.__init__.search",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.tok",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.tokenize",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.__init__.toks",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.app",
    "notes": [],
    "parameters": [
      {
        "annotation": "dict",
        "default": null,
        "display_name": "cands",
        "kind": "positional_or_keyword",
        "name": "cands",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.08",
        "display_name": "direct",
        "kind": "positional_or_keyword",
        "name": "direct",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.04",
        "display_name": "one_hop",
        "kind": "positional_or_keyword",
        "name": "one_hop",
        "optional": true
      }
    ],
    "qname": "search_api.app.apply_kg_boosts",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.app",
    "notes": [],
    "parameters": [
      {
        "annotation": "str | None",
        "default": "Header(default=None)",
        "display_name": "authorization",
        "kind": "positional_or_keyword",
        "name": "authorization",
        "optional": true
      }
    ],
    "qname": "search_api.app.auth",
    "raises": [
      {
        "description": "Raised when TODO for HTTPException.",
        "exception": "HTTPException"
      }
    ],
    "returns": []
  },
  {
    "kind": "function",
    "module": "search_api.app",
    "notes": [],
    "parameters": [
      {
        "annotation": "Mapping",
        "default": null,
        "display_name": "body",
        "kind": "positional_or_keyword",
        "name": "body",
        "optional": false
      },
      {
        "annotation": "None",
        "default": "Depends(auth)",
        "display_name": "_",
        "kind": "positional_or_keyword",
        "name": "_",
        "optional": true
      }
    ],
    "qname": "search_api.app.graph_concepts",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.app",
    "notes": [],
    "parameters": [],
    "qname": "search_api.app.healthz",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.app",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "lists",
        "kind": "positional_or_keyword",
        "name": "lists",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k_rrf",
        "kind": "positional_or_keyword",
        "name": "k_rrf",
        "optional": false
      }
    ],
    "qname": "search_api.app.rrf_fuse",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.app",
    "notes": [],
    "parameters": [
      {
        "annotation": "SearchRequest",
        "default": null,
        "display_name": "req",
        "kind": "positional_or_keyword",
        "name": "req",
        "optional": false
      },
      {
        "annotation": "None",
        "default": "Depends(auth)",
        "display_name": "_",
        "kind": "positional_or_keyword",
        "name": "_",
        "optional": true
      }
    ],
    "qname": "search_api.app.search",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [],
    "qname": "search_api.bm25_index.BM25Doc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_id",
        "kind": "positional_or_keyword",
        "name": "doc_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "title",
        "kind": "positional_or_keyword",
        "name": "title",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "section",
        "kind": "positional_or_keyword",
        "name": "section",
        "optional": false
      },
      {
        "annotation": "dict",
        "default": null,
        "display_name": "tf",
        "kind": "positional_or_keyword",
        "name": "tf",
        "optional": false
      },
      {
        "annotation": "float",
        "default": null,
        "display_name": "dl",
        "kind": "positional_or_keyword",
        "name": "dl",
        "optional": false
      }
    ],
    "qname": "search_api.bm25_index.BM25Doc.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [],
    "qname": "search_api.bm25_index.BM25Index",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "positional_or_keyword",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "positional_or_keyword",
        "name": "b",
        "optional": true
      }
    ],
    "qname": "search_api.bm25_index.BM25Index.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "Iterable",
        "default": null,
        "display_name": "rows",
        "kind": "positional_or_keyword",
        "name": "rows",
        "optional": false
      }
    ],
    "qname": "search_api.bm25_index.BM25Index._build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "term",
        "kind": "positional_or_keyword",
        "name": "term",
        "optional": false
      }
    ],
    "qname": "search_api.bm25_index.BM25Index._idf",
    "raises": [],
    "returns": [
      {
        "annotation": "float",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": null,
        "default": null,
        "display_name": "cls",
        "kind": "positional_or_keyword",
        "name": "cls",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      }
    ],
    "qname": "search_api.bm25_index.BM25Index.build_from_duckdb",
    "raises": [],
    "returns": [
      {
        "annotation": "BM25Index",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": null,
        "display_name": "index",
        "kind": "positional_or_keyword",
        "name": "index",
        "optional": false
      }
    ],
    "qname": "search_api.bm25_index.BM25Index.doc",
    "raises": [],
    "returns": [
      {
        "annotation": "BM25Doc",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": null,
        "default": null,
        "display_name": "cls",
        "kind": "positional_or_keyword",
        "name": "cls",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "path",
        "kind": "positional_or_keyword",
        "name": "path",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.9",
        "display_name": "k1",
        "kind": "keyword_only",
        "name": "k1",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.4",
        "display_name": "b",
        "kind": "keyword_only",
        "name": "b",
        "optional": true
      }
    ],
    "qname": "search_api.bm25_index.BM25Index.from_parquet",
    "raises": [],
    "returns": [
      {
        "annotation": "BM25Index",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": null,
        "default": null,
        "display_name": "cls",
        "kind": "positional_or_keyword",
        "name": "cls",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "path",
        "kind": "positional_or_keyword",
        "name": "path",
        "optional": false
      }
    ],
    "qname": "search_api.bm25_index.BM25Index.load",
    "raises": [],
    "returns": [
      {
        "annotation": "BM25Index",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "path",
        "kind": "positional_or_keyword",
        "name": "path",
        "optional": false
      }
    ],
    "qname": "search_api.bm25_index.BM25Index.save",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.bm25_index.BM25Index.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.bm25_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.bm25_index.toks",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [],
    "qname": "search_api.faiss_adapter.DenseVecs",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "ids",
        "kind": "positional_or_keyword",
        "name": "ids",
        "optional": false
      },
      {
        "annotation": "VecArray",
        "default": null,
        "display_name": "mat",
        "kind": "positional_or_keyword",
        "name": "mat",
        "optional": false
      }
    ],
    "qname": "search_api.faiss_adapter.DenseVecs.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [],
    "qname": "search_api.faiss_adapter.FaissAdapter",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      },
      {
        "annotation": "str",
        "default": "'OPQ64,IVF8192,PQ64'",
        "display_name": "factory",
        "kind": "positional_or_keyword",
        "name": "factory",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'ip'",
        "display_name": "metric",
        "kind": "positional_or_keyword",
        "name": "metric",
        "optional": true
      }
    ],
    "qname": "search_api.faiss_adapter.FaissAdapter.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "object",
        "default": null,
        "display_name": "cpu_index",
        "kind": "positional_or_keyword",
        "name": "cpu_index",
        "optional": false
      }
    ],
    "qname": "search_api.faiss_adapter.FaissAdapter._clone_to_gpu",
    "raises": [],
    "returns": [
      {
        "annotation": "object",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "Path",
        "default": null,
        "display_name": "source",
        "kind": "positional_or_keyword",
        "name": "source",
        "optional": false
      }
    ],
    "qname": "search_api.faiss_adapter.FaissAdapter._load_dense_from_parquet",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": [
      {
        "annotation": "DenseVecs",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [],
    "qname": "search_api.faiss_adapter.FaissAdapter._load_dense_parquet",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": [
      {
        "annotation": "DenseVecs",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "VecArray",
        "default": null,
        "display_name": "qvec",
        "kind": "positional_or_keyword",
        "name": "qvec",
        "optional": false
      }
    ],
    "qname": "search_api.faiss_adapter.FaissAdapter._prepare_queries",
    "raises": [],
    "returns": [
      {
        "annotation": "VecArray",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "VecArray",
        "default": null,
        "display_name": "queries",
        "kind": "positional_or_keyword",
        "name": "queries",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "search_api.faiss_adapter.FaissAdapter._search_with_cpu",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "VecArray",
        "default": null,
        "display_name": "queries",
        "kind": "positional_or_keyword",
        "name": "queries",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "search_api.faiss_adapter.FaissAdapter._search_with_faiss",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [],
    "qname": "search_api.faiss_adapter.FaissAdapter.build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "cpu_index_path",
        "kind": "positional_or_keyword",
        "name": "cpu_index_path",
        "optional": true
      }
    ],
    "qname": "search_api.faiss_adapter.FaissAdapter.load_or_build",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.faiss_adapter",
    "notes": [],
    "parameters": [
      {
        "annotation": "FloatArrayLike",
        "default": null,
        "display_name": "qvec",
        "kind": "positional_or_keyword",
        "name": "qvec",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.faiss_adapter.FaissAdapter.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_api.fixture_index",
    "notes": [],
    "parameters": [],
    "qname": "search_api.fixture_index.FixtureDoc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.fixture_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_id",
        "kind": "positional_or_keyword",
        "name": "doc_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "title",
        "kind": "positional_or_keyword",
        "name": "title",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "section",
        "kind": "positional_or_keyword",
        "name": "section",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.fixture_index.FixtureDoc.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.fixture_index",
    "notes": [],
    "parameters": [],
    "qname": "search_api.fixture_index.FixtureIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.fixture_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'/data'",
        "display_name": "root",
        "kind": "positional_or_keyword",
        "name": "root",
        "optional": true
      },
      {
        "annotation": "str",
        "default": "'/data/catalog/catalog.duckdb'",
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": true
      }
    ],
    "qname": "search_api.fixture_index.FixtureIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.fixture_index",
    "notes": [],
    "parameters": [],
    "qname": "search_api.fixture_index.FixtureIndex._build_lex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.fixture_index",
    "notes": [],
    "parameters": [],
    "qname": "search_api.fixture_index.FixtureIndex._load_from_duckdb",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.fixture_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": null,
        "display_name": "index",
        "kind": "positional_or_keyword",
        "name": "index",
        "optional": false
      }
    ],
    "qname": "search_api.fixture_index.FixtureIndex.doc",
    "raises": [],
    "returns": [
      {
        "annotation": "FixtureDoc",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.fixture_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.fixture_index.FixtureIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.fixture_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.fixture_index.tokenize",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.fusion",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "rankers",
        "kind": "positional_or_keyword",
        "name": "rankers",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "60",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.fusion.rrf_fuse",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_api.kg_mock",
    "notes": [],
    "parameters": [],
    "qname": "search_api.kg_mock.ConceptMeta",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "search_api.kg_mock",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      }
    ],
    "qname": "search_api.kg_mock.detect_query_concepts",
    "raises": [],
    "returns": [
      {
        "annotation": "set",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.kg_mock",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "query_concepts",
        "kind": "positional_or_keyword",
        "name": "query_concepts",
        "optional": false
      },
      {
        "annotation": "list",
        "default": null,
        "display_name": "chunk_concepts",
        "kind": "positional_or_keyword",
        "name": "chunk_concepts",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.08",
        "display_name": "direct",
        "kind": "positional_or_keyword",
        "name": "direct",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "0.04",
        "display_name": "one_hop",
        "kind": "positional_or_keyword",
        "name": "one_hop",
        "optional": true
      }
    ],
    "qname": "search_api.kg_mock.kg_boost",
    "raises": [],
    "returns": [
      {
        "annotation": "float",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.kg_mock",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.kg_mock.linked_concepts_for_text",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_api.schemas",
    "notes": [],
    "parameters": [],
    "qname": "search_api.schemas.SearchRequest",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.schemas",
    "notes": [],
    "parameters": [],
    "qname": "search_api.schemas.SearchResult",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "search_api.service",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "fused",
        "kind": "positional_or_keyword",
        "name": "fused",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      }
    ],
    "qname": "search_api.service.apply_kg_boosts",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.service",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "results",
        "kind": "positional_or_keyword",
        "name": "results",
        "optional": false
      },
      {
        "annotation": "float",
        "default": "0.7",
        "display_name": "lambda_",
        "kind": "positional_or_keyword",
        "name": "lambda_",
        "optional": true
      }
    ],
    "qname": "search_api.service.mmr_deduplicate",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.service",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "dense",
        "kind": "positional_or_keyword",
        "name": "dense",
        "optional": false
      },
      {
        "annotation": "list",
        "default": null,
        "display_name": "sparse",
        "kind": "positional_or_keyword",
        "name": "sparse",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "60",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.service.rrf_fuse",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_api.splade_index",
    "notes": [],
    "parameters": [],
    "qname": "search_api.splade_index.SpladeDoc",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.splade_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "chunk_id",
        "kind": "positional_or_keyword",
        "name": "chunk_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "doc_id",
        "kind": "positional_or_keyword",
        "name": "doc_id",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "section",
        "kind": "positional_or_keyword",
        "name": "section",
        "optional": false
      },
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.splade_index.SpladeDoc.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_api.splade_index",
    "notes": [],
    "parameters": [],
    "qname": "search_api.splade_index.SpladeIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.splade_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "db_path",
        "kind": "positional_or_keyword",
        "name": "db_path",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "chunks_dataset_root",
        "kind": "positional_or_keyword",
        "name": "chunks_dataset_root",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "sparse_root",
        "kind": "positional_or_keyword",
        "name": "sparse_root",
        "optional": true
      }
    ],
    "qname": "search_api.splade_index.SpladeIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.splade_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "chunks_root",
        "kind": "positional_or_keyword",
        "name": "chunks_root",
        "optional": true
      }
    ],
    "qname": "search_api.splade_index.SpladeIndex._load",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_api.splade_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "int",
        "default": null,
        "display_name": "index",
        "kind": "positional_or_keyword",
        "name": "index",
        "optional": false
      }
    ],
    "qname": "search_api.splade_index.SpladeIndex.doc",
    "raises": [],
    "returns": [
      {
        "annotation": "SpladeDoc",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_api.splade_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      }
    ],
    "qname": "search_api.splade_index.SpladeIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "search_api.splade_index",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "text",
        "kind": "positional_or_keyword",
        "name": "text",
        "optional": false
      }
    ],
    "qname": "search_api.splade_index.tok",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_client.__init__.KGFoundryClient",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'http://localhost:8080'",
        "display_name": "base_url",
        "kind": "positional_or_keyword",
        "name": "base_url",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "api_key",
        "kind": "positional_or_keyword",
        "name": "api_key",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "30.0",
        "display_name": "timeout",
        "kind": "positional_or_keyword",
        "name": "timeout",
        "optional": true
      },
      {
        "annotation": "SupportsHttp | None",
        "default": "None",
        "display_name": "http",
        "kind": "positional_or_keyword",
        "name": "http",
        "optional": true
      }
    ],
    "qname": "search_client.__init__.KGFoundryClient.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_client.__init__.KGFoundryClient._headers",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "q",
        "kind": "positional_or_keyword",
        "name": "q",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "50",
        "display_name": "limit",
        "kind": "positional_or_keyword",
        "name": "limit",
        "optional": true
      }
    ],
    "qname": "search_client.__init__.KGFoundryClient.concepts",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_client.__init__.KGFoundryClient.healthz",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      },
      {
        "annotation": "dict[str, Any] | None",
        "default": "None",
        "display_name": "filters",
        "kind": "positional_or_keyword",
        "name": "filters",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "explain",
        "kind": "positional_or_keyword",
        "name": "explain",
        "optional": true
      }
    ],
    "qname": "search_client.__init__.KGFoundryClient.search",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_client.__init__.RequestsHttp",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_only",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "search_client.__init__.RequestsHttp.get",
    "raises": [],
    "returns": [
      {
        "annotation": "SupportsResponse",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_only",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "search_client.__init__.RequestsHttp.post",
    "raises": [],
    "returns": [
      {
        "annotation": "SupportsResponse",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_client.__init__.SupportsHttp",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_only",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "search_client.__init__.SupportsHttp.get",
    "raises": [],
    "returns": [
      {
        "annotation": "SupportsResponse",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_only",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "search_client.__init__.SupportsHttp.post",
    "raises": [],
    "returns": [
      {
        "annotation": "SupportsResponse",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_client.__init__.SupportsResponse",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_client.__init__.SupportsResponse.json",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.__init__",
    "notes": [],
    "parameters": [],
    "qname": "search_client.__init__.SupportsResponse.raise_for_status",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "search_client.client",
    "notes": [],
    "parameters": [],
    "qname": "search_client.client.KGFoundryClient",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'http://localhost:8080'",
        "display_name": "base_url",
        "kind": "positional_or_keyword",
        "name": "base_url",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "api_key",
        "kind": "positional_or_keyword",
        "name": "api_key",
        "optional": true
      },
      {
        "annotation": "float",
        "default": "30.0",
        "display_name": "timeout",
        "kind": "positional_or_keyword",
        "name": "timeout",
        "optional": true
      },
      {
        "annotation": "SupportsHttp | None",
        "default": "None",
        "display_name": "http",
        "kind": "positional_or_keyword",
        "name": "http",
        "optional": true
      }
    ],
    "qname": "search_client.client.KGFoundryClient.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [],
    "qname": "search_client.client.KGFoundryClient._headers",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "q",
        "kind": "positional_or_keyword",
        "name": "q",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "50",
        "display_name": "limit",
        "kind": "positional_or_keyword",
        "name": "limit",
        "optional": true
      }
    ],
    "qname": "search_client.client.KGFoundryClient.concepts",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [],
    "qname": "search_client.client.KGFoundryClient.healthz",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "10",
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": true
      },
      {
        "annotation": "dict[str, Any] | None",
        "default": "None",
        "display_name": "filters",
        "kind": "positional_or_keyword",
        "name": "filters",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "False",
        "display_name": "explain",
        "kind": "positional_or_keyword",
        "name": "explain",
        "optional": true
      }
    ],
    "qname": "search_client.client.KGFoundryClient.search",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_client.client",
    "notes": [],
    "parameters": [],
    "qname": "search_client.client.RequestsHttp",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_only",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "search_client.client.RequestsHttp.get",
    "raises": [],
    "returns": [
      {
        "annotation": "SupportsResponse",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_only",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "search_client.client.RequestsHttp.post",
    "raises": [],
    "returns": [
      {
        "annotation": "SupportsResponse",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_client.client",
    "notes": [],
    "parameters": [],
    "qname": "search_client.client.SupportsHttp",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_only",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "search_client.client.SupportsHttp.get",
    "raises": [],
    "returns": [
      {
        "annotation": "SupportsResponse",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "url",
        "kind": "positional_only",
        "name": "url",
        "optional": false
      },
      {
        "annotation": "object",
        "default": "()",
        "display_name": "*args",
        "kind": "var_positional",
        "name": "args",
        "optional": true
      },
      {
        "annotation": "object",
        "default": "{}",
        "display_name": "**kwargs",
        "kind": "var_keyword",
        "name": "kwargs",
        "optional": true
      }
    ],
    "qname": "search_client.client.SupportsHttp.post",
    "raises": [],
    "returns": [
      {
        "annotation": "SupportsResponse",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "search_client.client",
    "notes": [],
    "parameters": [],
    "qname": "search_client.client.SupportsResponse",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [],
    "qname": "search_client.client.SupportsResponse.json",
    "raises": [],
    "returns": [
      {
        "annotation": "dict",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "search_client.client",
    "notes": [],
    "parameters": [],
    "qname": "search_client.client.SupportsResponse.raise_for_status",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize.DocstringAttrProto",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize.DocstringCommonModuleProto",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize.DocstringMetaProto",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize.DocstringProto",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize.DocstringYields",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [
      {
        "annotation": "Sequence",
        "default": null,
        "display_name": "args",
        "kind": "positional_or_keyword",
        "name": "args",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "description",
        "kind": "positional_or_keyword",
        "name": "description",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": null,
        "display_name": "type_name",
        "kind": "positional_or_keyword",
        "name": "type_name",
        "optional": true
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "return_name",
        "kind": "positional_or_keyword",
        "name": "return_name",
        "optional": true
      }
    ],
    "qname": "sitecustomize.DocstringYields.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize.DocstringYieldsProto",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize._DocstringCommonModule",
    "raises": [],
    "returns": []
  },
  {
    "kind": "function",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize._docstring_attrs",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize._docstring_many_yields",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize._docstring_size",
    "raises": [],
    "returns": [
      {
        "annotation": "int",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [],
    "qname": "sitecustomize._docstring_yields",
    "raises": [],
    "returns": [
      {
        "annotation": "object | None",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [
      {
        "annotation": "type",
        "default": null,
        "display_name": "doc_cls",
        "kind": "positional_or_keyword",
        "name": "doc_cls",
        "optional": false
      },
      {
        "annotation": "type",
        "default": null,
        "display_name": "attr_cls",
        "kind": "positional_or_keyword",
        "name": "attr_cls",
        "optional": false
      }
    ],
    "qname": "sitecustomize.register_docstring_attrs",
    "raises": [],
    "returns": [
      {
        "annotation": "bool",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [
      {
        "annotation": "type",
        "default": null,
        "display_name": "doc_cls",
        "kind": "positional_or_keyword",
        "name": "doc_cls",
        "optional": false
      }
    ],
    "qname": "sitecustomize.register_docstring_size",
    "raises": [],
    "returns": [
      {
        "annotation": "bool",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "function",
    "module": "sitecustomize",
    "notes": [],
    "parameters": [
      {
        "annotation": "type",
        "default": null,
        "display_name": "doc_cls",
        "kind": "positional_or_keyword",
        "name": "doc_cls",
        "optional": false
      },
      {
        "annotation": "type",
        "default": null,
        "display_name": "yields_cls",
        "kind": "positional_or_keyword",
        "name": "yields_cls",
        "optional": false
      }
    ],
    "qname": "sitecustomize.register_docstring_yields",
    "raises": [],
    "returns": [
      {
        "annotation": "tuple",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "class",
    "module": "vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [],
    "qname": "vectorstore_faiss.__init__.FaissGpuIndex",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'OPQ64,IVF8192,PQ64'",
        "display_name": "factory",
        "kind": "positional_or_keyword",
        "name": "factory",
        "optional": true
      },
      {
        "annotation": "int",
        "default": "64",
        "display_name": "nprobe",
        "kind": "positional_or_keyword",
        "name": "nprobe",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "True",
        "display_name": "gpu",
        "kind": "positional_or_keyword",
        "name": "gpu",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "True",
        "display_name": "cuvs",
        "kind": "positional_or_keyword",
        "name": "cuvs",
        "optional": true
      }
    ],
    "qname": "vectorstore_faiss.__init__.FaissGpuIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [],
    "qname": "vectorstore_faiss.__init__.FaissGpuIndex._ensure_resources",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "keys",
        "kind": "positional_or_keyword",
        "name": "keys",
        "optional": false
      },
      {
        "annotation": "FloatArray | FloatArrayLike",
        "default": null,
        "display_name": "vectors",
        "kind": "positional_or_keyword",
        "name": "vectors",
        "optional": false
      }
    ],
    "qname": "vectorstore_faiss.__init__.FaissGpuIndex.add",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_uri",
        "kind": "positional_or_keyword",
        "name": "index_uri",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "idmap_uri",
        "kind": "positional_or_keyword",
        "name": "idmap_uri",
        "optional": true
      }
    ],
    "qname": "vectorstore_faiss.__init__.FaissGpuIndex.load",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_uri",
        "kind": "positional_or_keyword",
        "name": "index_uri",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "idmap_uri",
        "kind": "positional_or_keyword",
        "name": "idmap_uri",
        "optional": true
      }
    ],
    "qname": "vectorstore_faiss.__init__.FaissGpuIndex.save",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "FloatArray | FloatArrayLike",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "vectorstore_faiss.__init__.FaissGpuIndex.search",
    "raises": [],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.__init__",
    "notes": [],
    "parameters": [
      {
        "annotation": "FloatArray | FloatArrayLike",
        "default": null,
        "display_name": "train_vectors",
        "kind": "positional_or_keyword",
        "name": "train_vectors",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "42",
        "display_name": "seed",
        "kind": "keyword_only",
        "name": "seed",
        "optional": true
      }
    ],
    "qname": "vectorstore_faiss.__init__.FaissGpuIndex.train",
    "raises": [],
    "returns": []
  },
  {
    "kind": "class",
    "module": "vectorstore_faiss.gpu",
    "notes": [],
    "parameters": [],
    "qname": "vectorstore_faiss.gpu.FaissGpuIndex",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.gpu",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": "'OPQ64,IVF8192,PQ64'",
        "display_name": "factory",
        "kind": "positional_or_keyword",
        "name": "factory",
        "optional": true
      },
      {
        "annotation": "int",
        "default": "64",
        "display_name": "nprobe",
        "kind": "positional_or_keyword",
        "name": "nprobe",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "True",
        "display_name": "gpu",
        "kind": "positional_or_keyword",
        "name": "gpu",
        "optional": true
      },
      {
        "annotation": "bool",
        "default": "True",
        "display_name": "cuvs",
        "kind": "positional_or_keyword",
        "name": "cuvs",
        "optional": true
      }
    ],
    "qname": "vectorstore_faiss.gpu.FaissGpuIndex.__init__",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.gpu",
    "notes": [],
    "parameters": [],
    "qname": "vectorstore_faiss.gpu.FaissGpuIndex._ensure_resources",
    "raises": [],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.gpu",
    "notes": [],
    "parameters": [
      {
        "annotation": "list",
        "default": null,
        "display_name": "keys",
        "kind": "positional_or_keyword",
        "name": "keys",
        "optional": false
      },
      {
        "annotation": "FloatArray | FloatArrayLike",
        "default": null,
        "display_name": "vectors",
        "kind": "positional_or_keyword",
        "name": "vectors",
        "optional": false
      }
    ],
    "qname": "vectorstore_faiss.gpu.FaissGpuIndex.add",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.gpu",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_uri",
        "kind": "positional_or_keyword",
        "name": "index_uri",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "idmap_uri",
        "kind": "positional_or_keyword",
        "name": "idmap_uri",
        "optional": true
      }
    ],
    "qname": "vectorstore_faiss.gpu.FaissGpuIndex.load",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.gpu",
    "notes": [],
    "parameters": [
      {
        "annotation": "str",
        "default": null,
        "display_name": "index_uri",
        "kind": "positional_or_keyword",
        "name": "index_uri",
        "optional": false
      },
      {
        "annotation": "str | None",
        "default": "None",
        "display_name": "idmap_uri",
        "kind": "positional_or_keyword",
        "name": "idmap_uri",
        "optional": true
      }
    ],
    "qname": "vectorstore_faiss.gpu.FaissGpuIndex.save",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": []
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.gpu",
    "notes": [],
    "parameters": [
      {
        "annotation": "FloatArray | FloatArrayLike",
        "default": null,
        "display_name": "query",
        "kind": "positional_or_keyword",
        "name": "query",
        "optional": false
      },
      {
        "annotation": "int",
        "default": null,
        "display_name": "k",
        "kind": "positional_or_keyword",
        "name": "k",
        "optional": false
      }
    ],
    "qname": "vectorstore_faiss.gpu.FaissGpuIndex.search",
    "raises": [
      {
        "description": "Raised when TODO for RuntimeError.",
        "exception": "RuntimeError"
      }
    ],
    "returns": [
      {
        "annotation": "list",
        "kind": "returns"
      }
    ]
  },
  {
    "kind": "method",
    "module": "vectorstore_faiss.gpu",
    "notes": [],
    "parameters": [
      {
        "annotation": "FloatArray | FloatArrayLike",
        "default": null,
        "display_name": "train_vectors",
        "kind": "positional_or_keyword",
        "name": "train_vectors",
        "optional": false
      },
      {
        "annotation": "int",
        "default": "42",
        "display_name": "seed",
        "kind": "keyword_only",
        "name": "seed",
        "optional": true
      }
    ],
    "qname": "vectorstore_faiss.gpu.FaissGpuIndex.train",
    "raises": [],
    "returns": []
  }
]
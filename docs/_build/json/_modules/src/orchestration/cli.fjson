{"parents": [{"link": "../../../", "title": "Module code"}], "title": "src.orchestration.cli", "body": "<h1>Source code for src.orchestration.cli</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"linenos\">  1</span><span class=\"sd\">&quot;&quot;&quot;Overview of cli.</span>\n<span class=\"linenos\">  2</span>\n<span class=\"linenos\">  3</span><span class=\"sd\">This module bundles cli logic for the kgfoundry stack. It groups related helpers so downstream</span>\n<span class=\"linenos\">  4</span><span class=\"sd\">packages can import a single cohesive namespace. Refer to the functions and classes below for</span>\n<span class=\"linenos\">  5</span><span class=\"sd\">implementation specifics.</span>\n<span class=\"linenos\">  6</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"linenos\">  7</span>\n<span class=\"linenos\">  8</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">__future__</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n<span class=\"linenos\">  9</span>\n<span class=\"linenos\"> 10</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">json</span>\n<span class=\"linenos\"> 11</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">os</span>\n<span class=\"linenos\"> 12</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">typing</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Final</span>\n<span class=\"linenos\"> 13</span>\n<span class=\"linenos\"> 14</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">numpy</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">np</span>\n<span class=\"linenos\"> 15</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">typer</span>\n<span class=\"linenos\"> 16</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">kgfoundry.embeddings_sparse.bm25</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">get_bm25</span>\n<span class=\"linenos\"> 17</span>\n<span class=\"linenos\"> 18</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">kgfoundry_common.navmap_types</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">NavMap</span>\n<span class=\"linenos\"> 19</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">vectorstore_faiss</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">gpu</span> <span class=\"k\">as</span> <span class=\"n\">faiss_gpu</span>\n<span class=\"linenos\"> 20</span>\n<span class=\"linenos\"> 21</span><span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;api&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;e2e&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;index_bm25&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;index_faiss&quot;</span><span class=\"p\">]</span>\n<span class=\"linenos\"> 22</span>\n<span class=\"linenos\"> 23</span><span class=\"n\">__navmap__</span><span class=\"p\">:</span> <span class=\"n\">Final</span><span class=\"p\">[</span><span class=\"n\">NavMap</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 24</span>    <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;orchestration.cli&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 25</span>    <span class=\"s2\">&quot;synopsis&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Prefect command-line entrypoints for orchestration flows&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 26</span>    <span class=\"s2\">&quot;exports&quot;</span><span class=\"p\">:</span> <span class=\"n\">__all__</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 27</span>    <span class=\"s2\">&quot;sections&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n<span class=\"linenos\"> 28</span>        <span class=\"p\">{</span>\n<span class=\"linenos\"> 29</span>            <span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;public-api&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 30</span>            <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Public API&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 31</span>            <span class=\"s2\">&quot;symbols&quot;</span><span class=\"p\">:</span> <span class=\"n\">__all__</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 32</span>        <span class=\"p\">},</span>\n<span class=\"linenos\"> 33</span>    <span class=\"p\">],</span>\n<span class=\"linenos\"> 34</span>    <span class=\"s2\">&quot;module_meta&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 35</span>        <span class=\"s2\">&quot;owner&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@orchestration&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 36</span>        <span class=\"s2\">&quot;stability&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;beta&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 37</span>        <span class=\"s2\">&quot;since&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.1.0&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 38</span>    <span class=\"p\">},</span>\n<span class=\"linenos\"> 39</span>    <span class=\"s2\">&quot;symbols&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 40</span>        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 41</span>            <span class=\"s2\">&quot;owner&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@orchestration&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 42</span>            <span class=\"s2\">&quot;stability&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;beta&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 43</span>            <span class=\"s2\">&quot;since&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.1.0&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 44</span>        <span class=\"p\">}</span>\n<span class=\"linenos\"> 45</span>        <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">__all__</span>\n<span class=\"linenos\"> 46</span>    <span class=\"p\">},</span>\n<span class=\"linenos\"> 47</span><span class=\"p\">}</span>\n<span class=\"linenos\"> 48</span>\n<span class=\"linenos\"> 49</span><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Typer</span><span class=\"p\">(</span><span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;kgfoundry orchestration CLI&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 50</span>\n<span class=\"linenos\"> 51</span>\n<span class=\"linenos\"> 52</span><span class=\"c1\"># [nav:anchor index_bm25]</span>\n<span class=\"linenos\"> 53</span><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<div class=\"viewcode-block\" id=\"index_bm25\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/orchestration/cli/#src.orchestration.cli.index_bm25\">[docs]</a>\n<span class=\"linenos\"> 54</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">index_bm25</span><span class=\"p\">(</span>\n<span class=\"linenos\"> 55</span>    <span class=\"n\">chunks_parquet</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Argument</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Path to Parquet/JSONL with chunks&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\"> 56</span>    <span class=\"n\">backend</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"s2\">&quot;lucene&quot;</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;lucene|pure&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\"> 57</span>    <span class=\"n\">index_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"s2\">&quot;./_indices/bm25&quot;</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Output index directory&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\"> 58</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 59</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute index bm25.</span>\n<span class=\"linenos\"> 60</span>\n<span class=\"linenos\"> 61</span><span class=\"sd\">    Carry out the index bm25 operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\"> 62</span><span class=\"sd\">    </span>\n<span class=\"linenos\"> 63</span><span class=\"sd\">    Parameters</span>\n<span class=\"linenos\"> 64</span><span class=\"sd\">    ----------</span>\n<span class=\"linenos\"> 65</span><span class=\"sd\">    chunks_parquet : str | None</span>\n<span class=\"linenos\"> 66</span><span class=\"sd\">        Optional parameter default ``typer.Argument(..., help=&#39;Path to Parquet/JSONL with chunks&#39;)``. Description for ``chunks_parquet``.</span>\n<span class=\"linenos\"> 67</span><span class=\"sd\">    backend : str | None</span>\n<span class=\"linenos\"> 68</span><span class=\"sd\">        Optional parameter default ``typer.Option(&#39;lucene&#39;, help=&#39;lucene|pure&#39;)``. Description for ``backend``.</span>\n<span class=\"linenos\"> 69</span><span class=\"sd\">    index_dir : str | None</span>\n<span class=\"linenos\"> 70</span><span class=\"sd\">        Optional parameter default ``typer.Option(&#39;./_indices/bm25&#39;, help=&#39;Output index directory&#39;)``. Description for ``index_dir``.</span>\n<span class=\"linenos\"> 71</span><span class=\"sd\">    </span>\n<span class=\"linenos\"> 72</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\"> 73</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\"> 74</span><span class=\"sd\">    &gt;&gt;&gt; from orchestration.cli import index_bm25</span>\n<span class=\"linenos\"> 75</span><span class=\"sd\">    &gt;&gt;&gt; index_bm25()  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\"> 76</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\"> 77</span>    \n<span class=\"linenos\"> 78</span>    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">index_dir</span><span class=\"p\">,</span> <span class=\"n\">exist_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 79</span>    <span class=\"c1\"># Very small loader that supports JSONL in this skeleton (Parquet in real pipeline).</span>\n<span class=\"linenos\"> 80</span>    <span class=\"n\">docs</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"linenos\"> 81</span>    <span class=\"k\">if</span> <span class=\"n\">chunks_parquet</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;.jsonl&quot;</span><span class=\"p\">):</span>\n<span class=\"linenos\"> 82</span>        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">chunks_parquet</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 83</span>            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 84</span>                <span class=\"n\">rec</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 85</span>                <span class=\"n\">docs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n<span class=\"linenos\"> 86</span>                    <span class=\"p\">(</span>\n<span class=\"linenos\"> 87</span>                        <span class=\"n\">rec</span><span class=\"p\">[</span><span class=\"s2\">&quot;chunk_id&quot;</span><span class=\"p\">],</span>\n<span class=\"linenos\"> 88</span>                        <span class=\"p\">{</span>\n<span class=\"linenos\"> 89</span>                            <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"n\">rec</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\"> 90</span>                            <span class=\"s2\">&quot;section&quot;</span><span class=\"p\">:</span> <span class=\"n\">rec</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;section&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\"> 91</span>                            <span class=\"s2\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"n\">rec</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\"> 92</span>                        <span class=\"p\">},</span>\n<span class=\"linenos\"> 93</span>                    <span class=\"p\">)</span>\n<span class=\"linenos\"> 94</span>                <span class=\"p\">)</span>\n<span class=\"linenos\"> 95</span>    <span class=\"k\">else</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 96</span>        <span class=\"c1\"># naive: expect a JSON file with list under skeleton; replace with Parquet</span>\n<span class=\"linenos\"> 97</span>        <span class=\"c1\"># reader in implementation</span>\n<span class=\"linenos\"> 98</span>        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">chunks_parquet</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 99</span>            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fh</span><span class=\"p\">)</span>\n<span class=\"linenos\">100</span>        <span class=\"k\">for</span> <span class=\"n\">rec</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">:</span>\n<span class=\"linenos\">101</span>            <span class=\"n\">docs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n<span class=\"linenos\">102</span>                <span class=\"p\">(</span>\n<span class=\"linenos\">103</span>                    <span class=\"n\">rec</span><span class=\"p\">[</span><span class=\"s2\">&quot;chunk_id&quot;</span><span class=\"p\">],</span>\n<span class=\"linenos\">104</span>                    <span class=\"p\">{</span>\n<span class=\"linenos\">105</span>                        <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"n\">rec</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\">106</span>                        <span class=\"s2\">&quot;section&quot;</span><span class=\"p\">:</span> <span class=\"n\">rec</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;section&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\">107</span>                        <span class=\"s2\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"n\">rec</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\">108</span>                    <span class=\"p\">},</span>\n<span class=\"linenos\">109</span>                <span class=\"p\">)</span>\n<span class=\"linenos\">110</span>            <span class=\"p\">)</span>\n<span class=\"linenos\">111</span>    <span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"n\">get_bm25</span><span class=\"p\">(</span><span class=\"n\">backend</span><span class=\"p\">,</span> <span class=\"n\">index_dir</span><span class=\"p\">,</span> <span class=\"n\">k1</span><span class=\"o\">=</span><span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mf\">0.4</span><span class=\"p\">)</span>\n<span class=\"linenos\">112</span>    <span class=\"n\">idx</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">docs</span><span class=\"p\">)</span>\n<span class=\"linenos\">113</span>    <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">echo</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;BM25 index built at </span><span class=\"si\">{</span><span class=\"n\">index_dir</span><span class=\"si\">}</span><span class=\"s2\"> using backend=</span><span class=\"si\">{</span><span class=\"n\">backend</span><span class=\"si\">}</span><span class=\"s2\"> (</span><span class=\"si\">{</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"si\">}</span><span class=\"s2\">)&quot;</span><span class=\"p\">)</span></div>\n\n<span class=\"linenos\">114</span>\n<span class=\"linenos\">115</span>\n<span class=\"linenos\">116</span><span class=\"c1\"># [nav:anchor index_faiss]</span>\n<span class=\"linenos\">117</span><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<div class=\"viewcode-block\" id=\"index_faiss\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/orchestration/cli/#src.orchestration.cli.index_faiss\">[docs]</a>\n<span class=\"linenos\">118</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">index_faiss</span><span class=\"p\">(</span>\n<span class=\"linenos\">119</span>    <span class=\"n\">dense_vectors</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Argument</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Path to dense vectors JSON (skeleton)&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\">120</span>    <span class=\"n\">index_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span>\n<span class=\"linenos\">121</span>        <span class=\"s2\">&quot;./_indices/faiss/shard_000.idx&quot;</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Output index (CPU .idx)&quot;</span>\n<span class=\"linenos\">122</span>    <span class=\"p\">),</span>\n<span class=\"linenos\">123</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">124</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute index faiss.</span>\n<span class=\"linenos\">125</span>\n<span class=\"linenos\">126</span><span class=\"sd\">    Carry out the index faiss operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">127</span><span class=\"sd\">    </span>\n<span class=\"linenos\">128</span><span class=\"sd\">    Parameters</span>\n<span class=\"linenos\">129</span><span class=\"sd\">    ----------</span>\n<span class=\"linenos\">130</span><span class=\"sd\">    dense_vectors : str | None</span>\n<span class=\"linenos\">131</span><span class=\"sd\">        Optional parameter default ``typer.Argument(..., help=&#39;Path to dense vectors JSON (skeleton)&#39;)``. Description for ``dense_vectors``.</span>\n<span class=\"linenos\">132</span><span class=\"sd\">    index_path : str | None</span>\n<span class=\"linenos\">133</span><span class=\"sd\">        Optional parameter default ``typer.Option(&#39;./_indices/faiss/shard_000.idx&#39;, help=&#39;Output index (CPU .idx)&#39;)``. Description for ``index_path``.</span>\n<span class=\"linenos\">134</span><span class=\"sd\">    </span>\n<span class=\"linenos\">135</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\">136</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\">137</span><span class=\"sd\">    &gt;&gt;&gt; from orchestration.cli import index_faiss</span>\n<span class=\"linenos\">138</span><span class=\"sd\">    &gt;&gt;&gt; index_faiss()  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">139</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\">140</span>    \n<span class=\"linenos\">141</span>    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">index_path</span><span class=\"p\">),</span> <span class=\"n\">exist_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"linenos\">142</span>    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">dense_vectors</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n<span class=\"linenos\">143</span>        <span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fh</span><span class=\"p\">)</span>\n<span class=\"linenos\">144</span>    <span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">[</span><span class=\"s2\">&quot;key&quot;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">vecs</span><span class=\"p\">]</span>\n<span class=\"linenos\">145</span>    <span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">r</span><span class=\"p\">[</span><span class=\"s2\">&quot;vector&quot;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">vecs</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s2\">&quot;float32&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">146</span>    <span class=\"c1\"># Train and add</span>\n<span class=\"linenos\">147</span>    <span class=\"n\">vs</span> <span class=\"o\">=</span> <span class=\"n\">faiss_gpu</span><span class=\"o\">.</span><span class=\"n\">FaissGpuIndex</span><span class=\"p\">()</span>\n<span class=\"linenos\">148</span>    <span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"n\">vectors</span><span class=\"p\">[:</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vectors</span><span class=\"p\">),</span> <span class=\"mi\">10000</span><span class=\"p\">)])</span>  <span class=\"c1\"># small train set</span>\n<span class=\"linenos\">149</span>    <span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"p\">,</span> <span class=\"n\">vectors</span><span class=\"p\">)</span>\n<span class=\"linenos\">150</span>    <span class=\"c1\"># Save CPU form when possible</span>\n<span class=\"linenos\">151</span>    <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">152</span>        <span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">index_path</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"linenos\">153</span>        <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">echo</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;FAISS index saved to </span><span class=\"si\">{</span><span class=\"n\">index_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">154</span>    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n<span class=\"linenos\">155</span>        <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">echo</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Saved fallback matrix (npz) due to </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">!r}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">156</span>        <span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">index_path</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span></div>\n\n<span class=\"linenos\">157</span>\n<span class=\"linenos\">158</span>\n<span class=\"linenos\">159</span><span class=\"c1\"># [nav:anchor api]</span>\n<span class=\"linenos\">160</span><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<div class=\"viewcode-block\" id=\"api\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/orchestration/cli/#src.orchestration.cli.api\">[docs]</a>\n<span class=\"linenos\">161</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">api</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8080</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">162</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute api.</span>\n<span class=\"linenos\">163</span>\n<span class=\"linenos\">164</span><span class=\"sd\">    Carry out the api operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">165</span><span class=\"sd\">    </span>\n<span class=\"linenos\">166</span><span class=\"sd\">    Parameters</span>\n<span class=\"linenos\">167</span><span class=\"sd\">    ----------</span>\n<span class=\"linenos\">168</span><span class=\"sd\">    port : int | None</span>\n<span class=\"linenos\">169</span><span class=\"sd\">        Optional parameter default ``8080``. Description for ``port``.</span>\n<span class=\"linenos\">170</span><span class=\"sd\">    </span>\n<span class=\"linenos\">171</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\">172</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\">173</span><span class=\"sd\">    &gt;&gt;&gt; from orchestration.cli import api</span>\n<span class=\"linenos\">174</span><span class=\"sd\">    &gt;&gt;&gt; api()  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">175</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\">176</span>    \n<span class=\"linenos\">177</span>    <span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">uvicorn</span>\n<span class=\"linenos\">178</span>\n<span class=\"linenos\">179</span>    <span class=\"n\">uvicorn</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s2\">&quot;search_api.app:app&quot;</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.0.0.0&quot;</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">reload</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n<span class=\"linenos\">180</span>\n<span class=\"linenos\">181</span>\n<span class=\"linenos\">182</span><span class=\"c1\"># [nav:anchor e2e]</span>\n<span class=\"linenos\">183</span><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<div class=\"viewcode-block\" id=\"e2e\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/orchestration/cli/#src.orchestration.cli.e2e\">[docs]</a>\n<span class=\"linenos\">184</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">e2e</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">185</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute e2e.</span>\n<span class=\"linenos\">186</span>\n<span class=\"linenos\">187</span><span class=\"sd\">    Carry out the e2e operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">188</span>\n<span class=\"linenos\">189</span><span class=\"sd\">    Raises</span>\n<span class=\"linenos\">190</span><span class=\"sd\">    ------</span>\n<span class=\"linenos\">191</span><span class=\"sd\">    typer.Exit</span>\n<span class=\"linenos\">192</span><span class=\"sd\">        Raised when validation fails.</span>\n<span class=\"linenos\">193</span>\n<span class=\"linenos\">194</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\">195</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\">196</span><span class=\"sd\">    &gt;&gt;&gt; from orchestration.cli import e2e</span>\n<span class=\"linenos\">197</span><span class=\"sd\">    &gt;&gt;&gt; e2e()  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">198</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\">199</span>    <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">200</span>        <span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">orchestration.flows</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">e2e_flow</span>\n<span class=\"linenos\">201</span>    <span class=\"k\">except</span> <span class=\"ne\">ModuleNotFoundError</span> <span class=\"k\">as</span> <span class=\"n\">exc</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover - defensive messaging</span>\n<span class=\"linenos\">202</span>        <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">echo</span><span class=\"p\">(</span>\n<span class=\"linenos\">203</span>            <span class=\"s2\">&quot;Prefect is required for the e2e pipeline command. &quot;</span>\n<span class=\"linenos\">204</span>            <span class=\"s2\">&quot;Install it via `pip install -e &#39;.[gpu]&#39;` or add `prefect` manually.&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\">205</span>            <span class=\"n\">err</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"linenos\">206</span>        <span class=\"p\">)</span>\n<span class=\"linenos\">207</span>        <span class=\"k\">raise</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">exc</span>\n<span class=\"linenos\">208</span>\n<span class=\"linenos\">209</span>    <span class=\"n\">stages</span> <span class=\"o\">=</span> <span class=\"n\">e2e_flow</span><span class=\"p\">()</span>\n<span class=\"linenos\">210</span>    <span class=\"k\">for</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"n\">stages</span><span class=\"p\">:</span>\n<span class=\"linenos\">211</span>        <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">echo</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">)</span></div>\n\n<span class=\"linenos\">212</span>\n<span class=\"linenos\">213</span>\n<span class=\"linenos\">214</span><span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n<span class=\"linenos\">215</span>    <span class=\"n\">app</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/src/orchestration/cli", "sidebars": ["sidebar-nav-bs.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "theme_show_toc_level": 1, "generate_toctree_html": "<functools._lru_cache_wrapper object at 0x7628d58ec1a0>", "generate_toc_html": "<functools._lru_cache_wrapper object at 0x7628d58ec250>", "theme_version": "0.16.1", "theme_logo": {"image_relative": {}}}
{"parents": [{"link": "../../../", "title": "Module code"}], "title": "src.search_api.faiss_adapter", "body": "<h1>Source code for src.search_api.faiss_adapter</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"linenos\">  1</span><span class=\"sd\">&quot;&quot;&quot;Overview of faiss adapter.</span>\n<span class=\"linenos\">  2</span>\n<span class=\"linenos\">  3</span><span class=\"sd\">This module bundles faiss adapter logic for the kgfoundry stack. It groups related helpers so</span>\n<span class=\"linenos\">  4</span><span class=\"sd\">downstream packages can import a single cohesive namespace. Refer to the functions and classes below</span>\n<span class=\"linenos\">  5</span><span class=\"sd\">for implementation specifics.</span>\n<span class=\"linenos\">  6</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"linenos\">  7</span>\n<span class=\"linenos\">  8</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">__future__</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n<span class=\"linenos\">  9</span>\n<span class=\"linenos\"> 10</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">dataclasses</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n<span class=\"linenos\"> 11</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">pathlib</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"linenos\"> 12</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">typing</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Final</span><span class=\"p\">,</span> <span class=\"n\">TypeAlias</span><span class=\"p\">,</span> <span class=\"n\">cast</span>\n<span class=\"linenos\"> 13</span>\n<span class=\"linenos\"> 14</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">duckdb</span>\n<span class=\"linenos\"> 15</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">numpy</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">np</span>\n<span class=\"linenos\"> 16</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">numpy.typing</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">NDArray</span>\n<span class=\"linenos\"> 17</span>\n<span class=\"linenos\"> 18</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">kgfoundry_common.navmap_types</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">NavMap</span>\n<span class=\"linenos\"> 19</span>\n<span class=\"linenos\"> 20</span><span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;DenseVecs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FaissAdapter&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;VecArray&quot;</span><span class=\"p\">]</span>\n<span class=\"linenos\"> 21</span>\n<span class=\"linenos\"> 22</span><span class=\"n\">__navmap__</span><span class=\"p\">:</span> <span class=\"n\">Final</span><span class=\"p\">[</span><span class=\"n\">NavMap</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 23</span>    <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;search_api.faiss_adapter&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 24</span>    <span class=\"s2\">&quot;synopsis&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Dense retrieval utilities that wrap FAISS with DuckDB persistence.&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 25</span>    <span class=\"s2\">&quot;exports&quot;</span><span class=\"p\">:</span> <span class=\"n\">__all__</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 26</span>    <span class=\"s2\">&quot;sections&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n<span class=\"linenos\"> 27</span>        <span class=\"p\">{</span>\n<span class=\"linenos\"> 28</span>            <span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;public-api&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 29</span>            <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Public API&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 30</span>            <span class=\"s2\">&quot;symbols&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;DenseVecs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FaissAdapter&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;VecArray&quot;</span><span class=\"p\">],</span>\n<span class=\"linenos\"> 31</span>        <span class=\"p\">},</span>\n<span class=\"linenos\"> 32</span>    <span class=\"p\">],</span>\n<span class=\"linenos\"> 33</span>    <span class=\"s2\">&quot;module_meta&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 34</span>        <span class=\"s2\">&quot;owner&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@search-api&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 35</span>        <span class=\"s2\">&quot;stability&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;experimental&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 36</span>        <span class=\"s2\">&quot;since&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.2.0&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 37</span>    <span class=\"p\">},</span>\n<span class=\"linenos\"> 38</span>    <span class=\"s2\">&quot;symbols&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 39</span>        <span class=\"s2\">&quot;DenseVecs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 40</span>            <span class=\"s2\">&quot;owner&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@search-api&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 41</span>            <span class=\"s2\">&quot;stability&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;experimental&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 42</span>            <span class=\"s2\">&quot;since&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.2.0&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 43</span>        <span class=\"p\">},</span>\n<span class=\"linenos\"> 44</span>        <span class=\"s2\">&quot;FaissAdapter&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 45</span>            <span class=\"s2\">&quot;owner&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@search-api&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 46</span>            <span class=\"s2\">&quot;stability&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;experimental&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 47</span>            <span class=\"s2\">&quot;since&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.2.0&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 48</span>        <span class=\"p\">},</span>\n<span class=\"linenos\"> 49</span>        <span class=\"s2\">&quot;VecArray&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 50</span>            <span class=\"s2\">&quot;owner&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@search-api&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 51</span>            <span class=\"s2\">&quot;stability&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;experimental&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 52</span>            <span class=\"s2\">&quot;since&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.2.0&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 53</span>        <span class=\"p\">},</span>\n<span class=\"linenos\"> 54</span>    <span class=\"p\">},</span>\n<span class=\"linenos\"> 55</span><span class=\"p\">}</span>\n<span class=\"linenos\"> 56</span>\n<span class=\"linenos\"> 57</span><span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 58</span>    <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 59</span>        <span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">libcuvs</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">load_library</span> <span class=\"k\">as</span> <span class=\"n\">_load_cuvs</span>\n<span class=\"linenos\"> 60</span>\n<span class=\"linenos\"> 61</span>        <span class=\"n\">_load_cuvs</span><span class=\"p\">()</span>\n<span class=\"linenos\"> 62</span>    <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 63</span>        <span class=\"k\">pass</span>\n<span class=\"linenos\"> 64</span>    <span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">faiss</span>\n<span class=\"linenos\"> 65</span>\n<span class=\"linenos\"> 66</span>    <span class=\"n\">HAVE_FAISS</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"linenos\"> 67</span><span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover - exercised when FAISS is unavailable</span>\n<span class=\"linenos\"> 68</span>    <span class=\"n\">faiss</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"linenos\"> 69</span>    <span class=\"n\">HAVE_FAISS</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"linenos\"> 70</span>\n<span class=\"linenos\"> 71</span>\n<span class=\"linenos\"> 72</span><span class=\"c1\"># [nav:anchor VecArray]</span>\n<div class=\"viewcode-block\" id=\"VecArray\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.VecArray\">[docs]</a>\n<span class=\"linenos\"> 73</span><span class=\"n\">VecArray</span><span class=\"p\">:</span> <span class=\"n\">TypeAlias</span> <span class=\"o\">=</span> <span class=\"n\">NDArray</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">]</span></div>\n\n<span class=\"linenos\"> 74</span><span class=\"n\">IndexArray</span><span class=\"p\">:</span> <span class=\"n\">TypeAlias</span> <span class=\"o\">=</span> <span class=\"n\">NDArray</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int64</span><span class=\"p\">]</span>\n<span class=\"linenos\"> 75</span>\n<span class=\"linenos\"> 76</span>\n<span class=\"linenos\"> 77</span><span class=\"c1\"># [nav:anchor DenseVecs]</span>\n<span class=\"linenos\"> 78</span><span class=\"nd\">@dataclass</span>\n<div class=\"viewcode-block\" id=\"DenseVecs\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.DenseVecs\">[docs]</a>\n<span class=\"linenos\"> 79</span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">DenseVecs</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 80</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Model the DenseVecs.</span>\n<span class=\"linenos\"> 81</span>\n<span class=\"linenos\"> 82</span><span class=\"sd\">    Represent the densevecs data structure used throughout the project. The class encapsulates</span>\n<span class=\"linenos\"> 83</span><span class=\"sd\">    behaviour behind a well-defined interface for collaborating components. Instances are typically</span>\n<span class=\"linenos\"> 84</span><span class=\"sd\">    created by factories or runtime orchestrators documented nearby.</span>\n<span class=\"linenos\"> 85</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\"> 86</span>\n<div class=\"viewcode-block\" id=\"DenseVecs.ids\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.DenseVecs.ids\">[docs]</a>\n<span class=\"linenos\"> 87</span>    <span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"DenseVecs.mat\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.DenseVecs.mat\">[docs]</a>\n<span class=\"linenos\"> 88</span>    <span class=\"n\">mat</span><span class=\"p\">:</span> <span class=\"n\">VecArray</span></div>\n</div>\n\n<span class=\"linenos\"> 89</span>\n<span class=\"linenos\"> 90</span>\n<span class=\"linenos\"> 91</span><span class=\"c1\"># [nav:anchor FaissAdapter]</span>\n<div class=\"viewcode-block\" id=\"FaissAdapter\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter\">[docs]</a>\n<span class=\"linenos\"> 92</span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">FaissAdapter</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 93</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Model the FaissAdapter.</span>\n<span class=\"linenos\"> 94</span>\n<span class=\"linenos\"> 95</span><span class=\"sd\">    Represent the faissadapter data structure used throughout the project. The class encapsulates</span>\n<span class=\"linenos\"> 96</span><span class=\"sd\">    behaviour behind a well-defined interface for collaborating components. Instances are typically</span>\n<span class=\"linenos\"> 97</span><span class=\"sd\">    created by factories or runtime orchestrators documented nearby.</span>\n<span class=\"linenos\"> 98</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\"> 99</span>\n<span class=\"linenos\">100</span>    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n<span class=\"linenos\">101</span>        <span class=\"bp\">self</span><span class=\"p\">,</span>\n<span class=\"linenos\">102</span>        <span class=\"n\">db_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n<span class=\"linenos\">103</span>        <span class=\"n\">factory</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;OPQ64,IVF8192,PQ64&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\">104</span>        <span class=\"n\">metric</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ip&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\">105</span>    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">106</span><span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Compute init.</span>\n<span class=\"linenos\">107</span>\n<span class=\"linenos\">108</span><span class=\"sd\">        Initialise a new instance with validated parameters. The constructor prepares internal state and coordinates any setup required by the class. Subclasses should call ``super().__init__`` to keep validation and defaults intact.</span>\n<span class=\"linenos\">109</span>\n<span class=\"linenos\">110</span><span class=\"sd\">        Parameters</span>\n<span class=\"linenos\">111</span><span class=\"sd\">        ----------</span>\n<span class=\"linenos\">112</span><span class=\"sd\">        db_path : str</span>\n<span class=\"linenos\">113</span><span class=\"sd\">            Description for ``db_path``.</span>\n<span class=\"linenos\">114</span><span class=\"sd\">        factory : str | None</span>\n<span class=\"linenos\">115</span><span class=\"sd\">            Optional parameter default ``&#39;OPQ64,IVF8192,PQ64&#39;``. Description for ``factory``.</span>\n<span class=\"linenos\">116</span><span class=\"sd\">        metric : str | None</span>\n<span class=\"linenos\">117</span><span class=\"sd\">            Optional parameter default ``&#39;ip&#39;``. Description for ``metric``.</span>\n<span class=\"linenos\">118</span><span class=\"sd\">        &quot;&quot;&quot;</span>\n<span class=\"linenos\">119</span>        \n<div class=\"viewcode-block\" id=\"FaissAdapter.db_path\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter.db_path\">[docs]</a>\n<span class=\"linenos\">120</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_path</span> <span class=\"o\">=</span> <span class=\"n\">db_path</span></div>\n\n<div class=\"viewcode-block\" id=\"FaissAdapter.factory\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter.factory\">[docs]</a>\n<span class=\"linenos\">121</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">factory</span> <span class=\"o\">=</span> <span class=\"n\">factory</span></div>\n\n<div class=\"viewcode-block\" id=\"FaissAdapter.metric\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter.metric\">[docs]</a>\n<span class=\"linenos\">122</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">metric</span></div>\n\n<div class=\"viewcode-block\" id=\"FaissAdapter.index\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter.index\">[docs]</a>\n<span class=\"linenos\">123</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"FaissAdapter.idmap\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter.idmap\">[docs]</a>\n<span class=\"linenos\">124</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">idmap</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"FaissAdapter.vecs\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter.vecs\">[docs]</a>\n<span class=\"linenos\">125</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vecs</span><span class=\"p\">:</span> <span class=\"n\">DenseVecs</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></div>\n\n<span class=\"linenos\">126</span>\n<div class=\"viewcode-block\" id=\"FaissAdapter._load_dense_from_parquet\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter._load_dense_from_parquet\">[docs]</a>\n<span class=\"linenos\">127</span>    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_load_dense_from_parquet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"n\">Path</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">DenseVecs</span><span class=\"p\">:</span>\n<span class=\"linenos\">128</span><span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Load dense vectors directly from a parquet dataset.&quot;&quot;&quot;</span>\n<span class=\"linenos\">129</span>        <span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"n\">duckdb</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">&quot;:memory:&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">130</span>        <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">131</span>            <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n<span class=\"linenos\">132</span>                <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"linenos\">133</span><span class=\"s2\">                SELECT chunk_id, vector</span>\n<span class=\"linenos\">134</span><span class=\"s2\">                FROM read_parquet(&#39;</span><span class=\"si\">{</span><span class=\"n\">source</span><span class=\"si\">}</span><span class=\"s2\">&#39;, union_by_name=true)</span>\n<span class=\"linenos\">135</span><span class=\"s2\">            &quot;&quot;&quot;</span>\n<span class=\"linenos\">136</span>            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span>\n<span class=\"linenos\">137</span>        <span class=\"k\">finally</span><span class=\"p\">:</span>\n<span class=\"linenos\">138</span>            <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"linenos\">139</span>        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">rows</span><span class=\"p\">:</span>\n<span class=\"linenos\">140</span>            <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;No dense vectors discovered in </span><span class=\"si\">{</span><span class=\"n\">source</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n<span class=\"linenos\">141</span>            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n<span class=\"linenos\">142</span>        <span class=\"n\">ids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">rows</span><span class=\"p\">]</span>\n<span class=\"linenos\">143</span>        <span class=\"n\">mat</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">VecArray</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">rows</span><span class=\"p\">]))</span>\n<span class=\"linenos\">144</span>        <span class=\"n\">norms</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">1e-9</span>\n<span class=\"linenos\">145</span>        <span class=\"n\">normalized</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">VecArray</span><span class=\"p\">,</span> <span class=\"n\">mat</span> <span class=\"o\">/</span> <span class=\"n\">norms</span><span class=\"p\">)</span>\n<span class=\"linenos\">146</span>        <span class=\"k\">return</span> <span class=\"n\">DenseVecs</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">=</span><span class=\"n\">ids</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"o\">=</span><span class=\"n\">normalized</span><span class=\"p\">)</span></div>\n\n<span class=\"linenos\">147</span>\n<div class=\"viewcode-block\" id=\"FaissAdapter._load_dense_parquet\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter._load_dense_parquet\">[docs]</a>\n<span class=\"linenos\">148</span>    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_load_dense_parquet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">DenseVecs</span><span class=\"p\">:</span>\n<span class=\"linenos\">149</span><span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Compute load dense parquet.</span>\n<span class=\"linenos\">150</span>\n<span class=\"linenos\">151</span><span class=\"sd\">        Carry out the load dense parquet operation.</span>\n<span class=\"linenos\">152</span>\n<span class=\"linenos\">153</span><span class=\"sd\">        Returns</span>\n<span class=\"linenos\">154</span><span class=\"sd\">        -------</span>\n<span class=\"linenos\">155</span><span class=\"sd\">        DenseVecs</span>\n<span class=\"linenos\">156</span><span class=\"sd\">            Description of return value.</span>\n<span class=\"linenos\">157</span>\n<span class=\"linenos\">158</span><span class=\"sd\">        Raises</span>\n<span class=\"linenos\">159</span><span class=\"sd\">        ------</span>\n<span class=\"linenos\">160</span><span class=\"sd\">        RuntimeError</span>\n<span class=\"linenos\">161</span><span class=\"sd\">            Raised when validation fails.</span>\n<span class=\"linenos\">162</span><span class=\"sd\">        &quot;&quot;&quot;</span>\n<span class=\"linenos\">163</span>        <span class=\"n\">candidate</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_path</span><span class=\"p\">)</span>\n<span class=\"linenos\">164</span>        <span class=\"k\">if</span> <span class=\"n\">candidate</span><span class=\"o\">.</span><span class=\"n\">is_dir</span><span class=\"p\">()</span> <span class=\"ow\">or</span> <span class=\"n\">candidate</span><span class=\"o\">.</span><span class=\"n\">suffix</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;.parquet&quot;</span><span class=\"p\">:</span>\n<span class=\"linenos\">165</span>            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_dense_from_parquet</span><span class=\"p\">(</span><span class=\"n\">candidate</span><span class=\"p\">)</span>\n<span class=\"linenos\">166</span>        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">candidate</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n<span class=\"linenos\">167</span>            <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;DuckDB registry not found&quot;</span>\n<span class=\"linenos\">168</span>            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n<span class=\"linenos\">169</span>        <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">170</span>            <span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"n\">duckdb</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_path</span><span class=\"p\">)</span>\n<span class=\"linenos\">171</span>        <span class=\"k\">except</span> <span class=\"n\">duckdb</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">:</span>\n<span class=\"linenos\">172</span>            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_dense_from_parquet</span><span class=\"p\">(</span><span class=\"n\">candidate</span><span class=\"p\">)</span>\n<span class=\"linenos\">173</span>        <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">174</span>            <span class=\"n\">dense_run</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n<span class=\"linenos\">175</span>                <span class=\"s2\">&quot;SELECT parquet_root, dim FROM dense_runs ORDER BY created_at DESC LIMIT 1&quot;</span>\n<span class=\"linenos\">176</span>            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fetchone</span><span class=\"p\">()</span>\n<span class=\"linenos\">177</span>            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dense_run</span><span class=\"p\">:</span>\n<span class=\"linenos\">178</span>                <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;No dense_runs found&quot;</span>\n<span class=\"linenos\">179</span>                <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n<span class=\"linenos\">180</span>            <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">dense_run</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"linenos\">181</span>            <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n<span class=\"linenos\">182</span>                <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"linenos\">183</span><span class=\"s2\">                SELECT chunk_id, vector</span>\n<span class=\"linenos\">184</span><span class=\"s2\">                FROM read_parquet(&#39;</span><span class=\"si\">{</span><span class=\"n\">root</span><span class=\"si\">}</span><span class=\"s2\">/*/*.parquet&#39;, union_by_name=true)</span>\n<span class=\"linenos\">185</span><span class=\"s2\">            &quot;&quot;&quot;</span>\n<span class=\"linenos\">186</span>            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span>\n<span class=\"linenos\">187</span>        <span class=\"k\">finally</span><span class=\"p\">:</span>\n<span class=\"linenos\">188</span>            <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"linenos\">189</span>        <span class=\"n\">ids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">rows</span><span class=\"p\">]</span>\n<span class=\"linenos\">190</span>        <span class=\"n\">mat</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">VecArray</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">rows</span><span class=\"p\">]))</span>\n<span class=\"linenos\">191</span>        <span class=\"n\">norms</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">1e-9</span>\n<span class=\"linenos\">192</span>        <span class=\"n\">normalized</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">VecArray</span><span class=\"p\">,</span> <span class=\"n\">mat</span> <span class=\"o\">/</span> <span class=\"n\">norms</span><span class=\"p\">)</span>\n<span class=\"linenos\">193</span>        <span class=\"k\">return</span> <span class=\"n\">DenseVecs</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">=</span><span class=\"n\">ids</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"o\">=</span><span class=\"n\">normalized</span><span class=\"p\">)</span></div>\n\n<span class=\"linenos\">194</span>\n<div class=\"viewcode-block\" id=\"FaissAdapter.build\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter.build\">[docs]</a>\n<span class=\"linenos\">195</span>    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">build</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">196</span><span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Compute build.</span>\n<span class=\"linenos\">197</span>\n<span class=\"linenos\">198</span><span class=\"sd\">        Carry out the build operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">199</span>\n<span class=\"linenos\">200</span><span class=\"sd\">        Examples</span>\n<span class=\"linenos\">201</span><span class=\"sd\">        --------</span>\n<span class=\"linenos\">202</span><span class=\"sd\">        &gt;&gt;&gt; from search_api.faiss_adapter import build</span>\n<span class=\"linenos\">203</span><span class=\"sd\">        &gt;&gt;&gt; build()  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">204</span><span class=\"sd\">        &quot;&quot;&quot;</span>\n<span class=\"linenos\">205</span>        <span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_dense_parquet</span><span class=\"p\">()</span>\n<span class=\"linenos\">206</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">vectors</span>\n<span class=\"linenos\">207</span>        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">HAVE_FAISS</span><span class=\"p\">:</span>\n<span class=\"linenos\">208</span>            <span class=\"k\">return</span>\n<span class=\"linenos\">209</span>        <span class=\"n\">dimension</span> <span class=\"o\">=</span> <span class=\"n\">vectors</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"linenos\">210</span>        <span class=\"n\">metric_type</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">METRIC_INNER_PRODUCT</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">metric</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ip&quot;</span> <span class=\"k\">else</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">METRIC_L2</span>\n<span class=\"linenos\">211</span>        <span class=\"n\">factory</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">factory</span> <span class=\"k\">if</span> <span class=\"n\">dimension</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">64</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;Flat&quot;</span>\n<span class=\"linenos\">212</span>        <span class=\"n\">cpu</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">index_factory</span><span class=\"p\">(</span><span class=\"n\">dimension</span><span class=\"p\">,</span> <span class=\"n\">factory</span><span class=\"p\">,</span> <span class=\"n\">metric_type</span><span class=\"p\">)</span>\n<span class=\"linenos\">213</span>        <span class=\"n\">cpu</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">IndexIDMap2</span><span class=\"p\">(</span><span class=\"n\">cpu</span><span class=\"p\">)</span>\n<span class=\"linenos\">214</span>        <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"n\">vectors</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">[:</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mi\">100000</span><span class=\"p\">,</span> <span class=\"n\">vectors</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])]</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"linenos\">215</span>        <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">normalize_L2</span><span class=\"p\">(</span><span class=\"n\">train</span><span class=\"p\">)</span>\n<span class=\"linenos\">216</span>        <span class=\"n\">cpu</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"n\">train</span><span class=\"p\">)</span>\n<span class=\"linenos\">217</span>        <span class=\"n\">ids64</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">IndexArray</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">vectors</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int64</span><span class=\"p\">))</span>\n<span class=\"linenos\">218</span>        <span class=\"n\">cpu</span><span class=\"o\">.</span><span class=\"n\">add_with_ids</span><span class=\"p\">(</span><span class=\"n\">vectors</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">,</span> <span class=\"n\">ids64</span><span class=\"p\">)</span>\n<span class=\"linenos\">219</span>        <span class=\"n\">resources</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">StandardGpuResources</span><span class=\"p\">()</span>\n<span class=\"linenos\">220</span>        <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">GpuClonerOptions</span><span class=\"p\">()</span>\n<span class=\"linenos\">221</span>        <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">use_cuvs</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"linenos\">222</span>        <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">223</span>            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">index_cpu_to_gpu</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">cpu</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"linenos\">224</span>        <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover - fallback path without cuVS</span>\n<span class=\"linenos\">225</span>            <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">use_cuvs</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"linenos\">226</span>            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">index_cpu_to_gpu</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">cpu</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"linenos\">227</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">idmap</span> <span class=\"o\">=</span> <span class=\"n\">vectors</span><span class=\"o\">.</span><span class=\"n\">ids</span></div>\n\n<span class=\"linenos\">228</span>\n<div class=\"viewcode-block\" id=\"FaissAdapter.load_or_build\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter.load_or_build\">[docs]</a>\n<span class=\"linenos\">229</span>    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">load_or_build</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cpu_index_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">230</span><span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Compute load or build.</span>\n<span class=\"linenos\">231</span>\n<span class=\"linenos\">232</span><span class=\"sd\">        Carry out the load or build operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">233</span><span class=\"sd\">        </span>\n<span class=\"linenos\">234</span><span class=\"sd\">        Parameters</span>\n<span class=\"linenos\">235</span><span class=\"sd\">        ----------</span>\n<span class=\"linenos\">236</span><span class=\"sd\">        cpu_index_path : str | None</span>\n<span class=\"linenos\">237</span><span class=\"sd\">            Optional parameter default ``None``. Description for ``cpu_index_path``.</span>\n<span class=\"linenos\">238</span><span class=\"sd\">        </span>\n<span class=\"linenos\">239</span><span class=\"sd\">        Examples</span>\n<span class=\"linenos\">240</span><span class=\"sd\">        --------</span>\n<span class=\"linenos\">241</span><span class=\"sd\">        &gt;&gt;&gt; from search_api.faiss_adapter import load_or_build</span>\n<span class=\"linenos\">242</span><span class=\"sd\">        &gt;&gt;&gt; load_or_build()  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">243</span><span class=\"sd\">        &quot;&quot;&quot;</span>\n<span class=\"linenos\">244</span>        \n<span class=\"linenos\">245</span>        <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">246</span>            <span class=\"k\">if</span> <span class=\"n\">HAVE_FAISS</span> <span class=\"ow\">and</span> <span class=\"n\">cpu_index_path</span> <span class=\"ow\">and</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">cpu_index_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n<span class=\"linenos\">247</span>                <span class=\"n\">cpu</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">read_index</span><span class=\"p\">(</span><span class=\"n\">cpu_index_path</span><span class=\"p\">)</span>\n<span class=\"linenos\">248</span>                <span class=\"n\">resources</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">StandardGpuResources</span><span class=\"p\">()</span>\n<span class=\"linenos\">249</span>                <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">GpuClonerOptions</span><span class=\"p\">()</span>\n<span class=\"linenos\">250</span>                <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">use_cuvs</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"linenos\">251</span>                <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">252</span>                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">index_cpu_to_gpu</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">cpu</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"linenos\">253</span>                <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover - fallback path without cuVS</span>\n<span class=\"linenos\">254</span>                    <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">use_cuvs</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"linenos\">255</span>                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">index_cpu_to_gpu</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">cpu</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"linenos\">256</span>                <span class=\"n\">dense</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_dense_parquet</span><span class=\"p\">()</span>\n<span class=\"linenos\">257</span>                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">dense</span>\n<span class=\"linenos\">258</span>                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">idmap</span> <span class=\"o\">=</span> <span class=\"n\">dense</span><span class=\"o\">.</span><span class=\"n\">ids</span>\n<span class=\"linenos\">259</span>                <span class=\"k\">return</span>\n<span class=\"linenos\">260</span>        <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n<span class=\"linenos\">261</span>            <span class=\"k\">pass</span>\n<span class=\"linenos\">262</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span></div>\n\n<span class=\"linenos\">263</span>\n<div class=\"viewcode-block\" id=\"FaissAdapter.search\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/faiss_adapter/#src.search_api.faiss_adapter.FaissAdapter.search\">[docs]</a>\n<span class=\"linenos\">264</span>    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">search</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">qvec</span><span class=\"p\">:</span> <span class=\"n\">VecArray</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]:</span>\n<span class=\"linenos\">265</span><span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Compute search.</span>\n<span class=\"linenos\">266</span>\n<span class=\"linenos\">267</span><span class=\"sd\">        Carry out the search operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">268</span><span class=\"sd\">        </span>\n<span class=\"linenos\">269</span><span class=\"sd\">        Parameters</span>\n<span class=\"linenos\">270</span><span class=\"sd\">        ----------</span>\n<span class=\"linenos\">271</span><span class=\"sd\">        qvec : src.search_api.faiss_adapter.VecArray</span>\n<span class=\"linenos\">272</span><span class=\"sd\">            Description for ``qvec``.</span>\n<span class=\"linenos\">273</span><span class=\"sd\">        k : int | None</span>\n<span class=\"linenos\">274</span><span class=\"sd\">            Optional parameter default ``10``. Description for ``k``.</span>\n<span class=\"linenos\">275</span><span class=\"sd\">        </span>\n<span class=\"linenos\">276</span><span class=\"sd\">        Returns</span>\n<span class=\"linenos\">277</span><span class=\"sd\">        -------</span>\n<span class=\"linenos\">278</span><span class=\"sd\">        List[List[Tuple[str, float]]]</span>\n<span class=\"linenos\">279</span><span class=\"sd\">            Description of return value.</span>\n<span class=\"linenos\">280</span><span class=\"sd\">        </span>\n<span class=\"linenos\">281</span><span class=\"sd\">        Raises</span>\n<span class=\"linenos\">282</span><span class=\"sd\">        ------</span>\n<span class=\"linenos\">283</span><span class=\"sd\">        RuntimeError</span>\n<span class=\"linenos\">284</span><span class=\"sd\">            Raised when validation fails.</span>\n<span class=\"linenos\">285</span><span class=\"sd\">        </span>\n<span class=\"linenos\">286</span><span class=\"sd\">        Examples</span>\n<span class=\"linenos\">287</span><span class=\"sd\">        --------</span>\n<span class=\"linenos\">288</span><span class=\"sd\">        &gt;&gt;&gt; from search_api.faiss_adapter import search</span>\n<span class=\"linenos\">289</span><span class=\"sd\">        &gt;&gt;&gt; result = search(...)</span>\n<span class=\"linenos\">290</span><span class=\"sd\">        &gt;&gt;&gt; result  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">291</span><span class=\"sd\">        ...</span>\n<span class=\"linenos\">292</span><span class=\"sd\">        &quot;&quot;&quot;</span>\n<span class=\"linenos\">293</span>        \n<span class=\"linenos\">294</span>        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vecs</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">295</span>            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">296</span>        <span class=\"k\">if</span> <span class=\"n\">HAVE_FAISS</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">297</span>            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">idmap</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">298</span>                <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ID mapping not loaded for FAISS index&quot;</span>\n<span class=\"linenos\">299</span>                <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n<span class=\"linenos\">300</span>            <span class=\"n\">query_arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">qvec</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s2\">&quot;C&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">301</span>            <span class=\"k\">if</span> <span class=\"n\">query_arr</span><span class=\"o\">.</span><span class=\"n\">ndim</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n<span class=\"linenos\">302</span>                <span class=\"n\">query_arr</span> <span class=\"o\">=</span> <span class=\"n\">query_arr</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:]</span>\n<span class=\"linenos\">303</span>            <span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">VecArray</span> <span class=\"o\">=</span> <span class=\"n\">query_arr</span>\n<span class=\"linenos\">304</span>            <span class=\"n\">distances</span><span class=\"p\">,</span> <span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n<span class=\"linenos\">305</span>            <span class=\"n\">batches</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">306</span>            <span class=\"k\">for</span> <span class=\"n\">idx_row</span><span class=\"p\">,</span> <span class=\"n\">dist_row</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">indices</span><span class=\"p\">,</span> <span class=\"n\">distances</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"linenos\">307</span>                <span class=\"n\">results</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">308</span>                <span class=\"k\">for</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"n\">score</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">idx_row</span><span class=\"p\">,</span> <span class=\"n\">dist_row</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"linenos\">309</span>                    <span class=\"k\">if</span> <span class=\"n\">idx</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n<span class=\"linenos\">310</span>                        <span class=\"k\">continue</span>\n<span class=\"linenos\">311</span>                    <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">idmap</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"p\">)],</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"p\">)))</span>\n<span class=\"linenos\">312</span>                <span class=\"n\">batches</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">)</span>\n<span class=\"linenos\">313</span>            <span class=\"k\">return</span> <span class=\"n\">batches</span>\n<span class=\"linenos\">314</span>        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vecs</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">315</span>            <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Dense vectors not loaded&quot;</span>\n<span class=\"linenos\">316</span>            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n<span class=\"linenos\">317</span>        <span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">mat</span>\n<span class=\"linenos\">318</span>        <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">qvec</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s2\">&quot;C&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">319</span>        <span class=\"k\">if</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">ndim</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n<span class=\"linenos\">320</span>            <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:]</span>\n<span class=\"linenos\">321</span>        <span class=\"n\">batches</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">322</span>        <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">query</span><span class=\"p\">:</span>\n<span class=\"linenos\">323</span>            <span class=\"n\">row</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"linenos\">324</span>            <span class=\"n\">row</span> <span class=\"o\">/=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">1e-9</span>\n<span class=\"linenos\">325</span>            <span class=\"n\">sims</span> <span class=\"o\">=</span> <span class=\"n\">matrix</span> <span class=\"o\">@</span> <span class=\"n\">row</span>\n<span class=\"linenos\">326</span>            <span class=\"n\">topk</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argsort</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">sims</span><span class=\"p\">)[:</span><span class=\"n\">k</span><span class=\"p\">]</span>\n<span class=\"linenos\">327</span>            <span class=\"n\">batches</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">ids</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">sims</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]))</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">topk</span><span class=\"p\">])</span>\n<span class=\"linenos\">328</span>        <span class=\"k\">return</span> <span class=\"n\">batches</span></div>\n</div>\n\n</pre></div>", "current_page_name": "_modules/src/search_api/faiss_adapter", "sidebars": ["sidebar-nav-bs.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "theme_show_toc_level": 1, "generate_toctree_html": "<functools._lru_cache_wrapper object at 0x7628d5732610>", "generate_toc_html": "<functools._lru_cache_wrapper object at 0x7628d57322a0>", "theme_version": "0.16.1", "theme_logo": {"image_relative": {}}}
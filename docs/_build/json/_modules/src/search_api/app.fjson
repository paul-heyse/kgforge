{"parents": [{"link": "../../../", "title": "Module code"}], "title": "src.search_api.app", "body": "<h1>Source code for src.search_api.app</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"linenos\">  1</span><span class=\"sd\">&quot;&quot;&quot;Overview of app.</span>\n<span class=\"linenos\">  2</span>\n<span class=\"linenos\">  3</span><span class=\"sd\">This module bundles app logic for the kgfoundry stack. It groups related helpers so downstream</span>\n<span class=\"linenos\">  4</span><span class=\"sd\">packages can import a single cohesive namespace. Refer to the functions and classes below for</span>\n<span class=\"linenos\">  5</span><span class=\"sd\">implementation specifics.</span>\n<span class=\"linenos\">  6</span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"linenos\">  7</span>\n<span class=\"linenos\">  8</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">__future__</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n<span class=\"linenos\">  9</span>\n<span class=\"linenos\"> 10</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">logging</span>\n<span class=\"linenos\"> 11</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">os</span>\n<span class=\"linenos\"> 12</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">collections.abc</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Mapping</span>\n<span class=\"linenos\"> 13</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">typing</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Final</span>\n<span class=\"linenos\"> 14</span>\n<span class=\"linenos\"> 15</span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">yaml</span>\n<span class=\"linenos\"> 16</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">fastapi</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Depends</span><span class=\"p\">,</span> <span class=\"n\">FastAPI</span><span class=\"p\">,</span> <span class=\"n\">Header</span><span class=\"p\">,</span> <span class=\"n\">HTTPException</span>\n<span class=\"linenos\"> 17</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">kgfoundry.embeddings_sparse.bm25</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">PurePythonBM25</span><span class=\"p\">,</span> <span class=\"n\">get_bm25</span>\n<span class=\"linenos\"> 18</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">kgfoundry.embeddings_sparse.splade</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">get_splade</span>\n<span class=\"linenos\"> 19</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">kgfoundry.kg_builder.mock_kg</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">MockKG</span>\n<span class=\"linenos\"> 20</span>\n<span class=\"linenos\"> 21</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">kgfoundry_common.navmap_types</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">NavMap</span>\n<span class=\"linenos\"> 22</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">search_api.schemas</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">SearchRequest</span><span class=\"p\">,</span> <span class=\"n\">SearchResult</span>\n<span class=\"linenos\"> 23</span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">vectorstore_faiss</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">gpu</span> <span class=\"k\">as</span> <span class=\"n\">faiss_gpu</span>\n<span class=\"linenos\"> 24</span>\n<span class=\"linenos\"> 25</span><span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"linenos\"> 26</span>    <span class=\"s2\">&quot;apply_kg_boosts&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 27</span>    <span class=\"s2\">&quot;auth&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 28</span>    <span class=\"s2\">&quot;graph_concepts&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 29</span>    <span class=\"s2\">&quot;healthz&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 30</span>    <span class=\"s2\">&quot;rrf_fuse&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 31</span>    <span class=\"s2\">&quot;search&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 32</span><span class=\"p\">]</span>\n<span class=\"linenos\"> 33</span>\n<span class=\"linenos\"> 34</span><span class=\"n\">__navmap__</span><span class=\"p\">:</span> <span class=\"n\">Final</span><span class=\"p\">[</span><span class=\"n\">NavMap</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 35</span>    <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;search_api.app&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 36</span>    <span class=\"s2\">&quot;synopsis&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Search service endpoints and helper utilities&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 37</span>    <span class=\"s2\">&quot;exports&quot;</span><span class=\"p\">:</span> <span class=\"n\">__all__</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 38</span>    <span class=\"s2\">&quot;sections&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n<span class=\"linenos\"> 39</span>        <span class=\"p\">{</span>\n<span class=\"linenos\"> 40</span>            <span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;public-api&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 41</span>            <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Public API&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 42</span>            <span class=\"s2\">&quot;symbols&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n<span class=\"linenos\"> 43</span>                <span class=\"s2\">&quot;auth&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 44</span>                <span class=\"s2\">&quot;healthz&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 45</span>                <span class=\"s2\">&quot;rrf_fuse&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 46</span>                <span class=\"s2\">&quot;apply_kg_boosts&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 47</span>                <span class=\"s2\">&quot;search&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 48</span>                <span class=\"s2\">&quot;graph_concepts&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 49</span>            <span class=\"p\">],</span>\n<span class=\"linenos\"> 50</span>        <span class=\"p\">},</span>\n<span class=\"linenos\"> 51</span>    <span class=\"p\">],</span>\n<span class=\"linenos\"> 52</span>    <span class=\"s2\">&quot;module_meta&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 53</span>        <span class=\"s2\">&quot;owner&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@search-api&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 54</span>        <span class=\"s2\">&quot;stability&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;experimental&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 55</span>        <span class=\"s2\">&quot;since&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.2.0&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 56</span>    <span class=\"p\">},</span>\n<span class=\"linenos\"> 57</span>    <span class=\"s2\">&quot;symbols&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 58</span>        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\"> 59</span>            <span class=\"s2\">&quot;owner&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@search-api&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 60</span>            <span class=\"s2\">&quot;stability&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;experimental&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 61</span>            <span class=\"s2\">&quot;since&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.2.0&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 62</span>        <span class=\"p\">}</span>\n<span class=\"linenos\"> 63</span>        <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">__all__</span>\n<span class=\"linenos\"> 64</span>    <span class=\"p\">},</span>\n<span class=\"linenos\"> 65</span><span class=\"p\">}</span>\n<span class=\"linenos\"> 66</span>\n<span class=\"linenos\"> 67</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 68</span>\n<span class=\"linenos\"> 69</span><span class=\"n\">API_KEYS</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>  <span class=\"c1\"># NOTE: load from env SEARCH_API_KEYS when secrets wiring is ready</span>\n<span class=\"linenos\"> 70</span>\n<span class=\"linenos\"> 71</span><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">FastAPI</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;kgfoundry Search API&quot;</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.2.0&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 72</span>\n<span class=\"linenos\"> 73</span><span class=\"c1\"># --- bootstrap lightweight dependencies from config ---</span>\n<span class=\"linenos\"> 74</span><span class=\"n\">CFG_PATH</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n<span class=\"linenos\"> 75</span>    <span class=\"s2\">&quot;KGF_CONFIG&quot;</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"s2\">&quot;../../config/config.yaml&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 76</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 77</span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">CFG_PATH</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 78</span>    <span class=\"n\">CFG</span> <span class=\"o\">=</span> <span class=\"n\">yaml</span><span class=\"o\">.</span><span class=\"n\">safe_load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 79</span>\n<span class=\"linenos\"> 80</span><span class=\"n\">SPARSE_BACKEND</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;search&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;sparse_backend&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;lucene&quot;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;lucene&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n<span class=\"linenos\"> 81</span><span class=\"n\">BM25_DIR</span> <span class=\"o\">=</span> <span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;sparse_embedding&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;bm25&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;index_dir&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;./_indices/bm25&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 82</span><span class=\"n\">SPLADE_DIR</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"linenos\"> 83</span>    <span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;sparse_embedding&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;splade&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;index_dir&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;./_indices/splade_impact&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 84</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 85</span><span class=\"n\">FAISS_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;./_indices/faiss/shard_000.idx&quot;</span>\n<span class=\"linenos\"> 86</span>\n<span class=\"linenos\"> 87</span><span class=\"n\">bm25</span> <span class=\"o\">=</span> <span class=\"n\">get_bm25</span><span class=\"p\">(</span>\n<span class=\"linenos\"> 88</span>    <span class=\"n\">SPARSE_BACKEND</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 89</span>    <span class=\"n\">BM25_DIR</span><span class=\"p\">,</span>\n<span class=\"linenos\"> 90</span>    <span class=\"n\">k1</span><span class=\"o\">=</span><span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;sparse_embedding&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;bm25&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;k1&quot;</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">),</span>\n<span class=\"linenos\"> 91</span>    <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;sparse_embedding&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;bm25&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">),</span>\n<span class=\"linenos\"> 92</span>    <span class=\"n\">field_boosts</span><span class=\"o\">=</span><span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;sparse_embedding&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;bm25&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;field_boosts&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n<span class=\"linenos\"> 93</span><span class=\"p\">)</span>\n<span class=\"linenos\"> 94</span><span class=\"c1\"># load index if exists</span>\n<span class=\"linenos\"> 95</span><span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 96</span>    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">bm25</span><span class=\"p\">,</span> <span class=\"n\">PurePythonBM25</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BM25_DIR</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pure_bm25.pkl&quot;</span><span class=\"p\">)):</span>\n<span class=\"linenos\"> 97</span>        <span class=\"n\">bm25</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">()</span>\n<span class=\"linenos\"> 98</span><span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n<span class=\"linenos\"> 99</span>    <span class=\"k\">pass</span>\n<span class=\"linenos\">100</span>\n<span class=\"linenos\">101</span><span class=\"n\">splade</span> <span class=\"o\">=</span> <span class=\"n\">get_splade</span><span class=\"p\">(</span><span class=\"n\">SPARSE_BACKEND</span><span class=\"p\">,</span> <span class=\"n\">SPLADE_DIR</span><span class=\"p\">)</span>\n<span class=\"linenos\">102</span><span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">103</span>    <span class=\"c1\"># for PureImpactIndex, try to load</span>\n<span class=\"linenos\">104</span>    <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">splade</span><span class=\"p\">,</span> <span class=\"s2\">&quot;load&quot;</span><span class=\"p\">):</span>\n<span class=\"linenos\">105</span>        <span class=\"n\">splade</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">()</span>\n<span class=\"linenos\">106</span><span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n<span class=\"linenos\">107</span>    <span class=\"k\">pass</span>\n<span class=\"linenos\">108</span>\n<span class=\"linenos\">109</span><span class=\"n\">faiss</span> <span class=\"o\">=</span> <span class=\"n\">faiss_gpu</span><span class=\"o\">.</span><span class=\"n\">FaissGpuIndex</span><span class=\"p\">(</span>\n<span class=\"linenos\">110</span>    <span class=\"n\">factory</span><span class=\"o\">=</span><span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;faiss&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;index_factory&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OPQ64,IVF8192,PQ64&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\">111</span>    <span class=\"n\">nprobe</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;faiss&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;nprobe&quot;</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)),</span>\n<span class=\"linenos\">112</span>    <span class=\"n\">gpu</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;faiss&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;gpu&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)),</span>\n<span class=\"linenos\">113</span>    <span class=\"n\">cuvs</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">CFG</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;faiss&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;cuvs&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)),</span>\n<span class=\"linenos\">114</span><span class=\"p\">)</span>\n<span class=\"linenos\">115</span><span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">116</span>    <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">FAISS_PATH</span><span class=\"p\">):</span>\n<span class=\"linenos\">117</span>        <span class=\"n\">faiss</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">FAISS_PATH</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"linenos\">118</span><span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n<span class=\"linenos\">119</span>    <span class=\"k\">pass</span>\n<span class=\"linenos\">120</span>\n<span class=\"linenos\">121</span><span class=\"c1\"># tiny KG mock with a few edges/mentions to demonstrate boosts</span>\n<span class=\"linenos\">122</span><span class=\"n\">kg</span> <span class=\"o\">=</span> <span class=\"n\">MockKG</span><span class=\"p\">()</span>\n<span class=\"linenos\">123</span><span class=\"n\">kg</span><span class=\"o\">.</span><span class=\"n\">add_mention</span><span class=\"p\">(</span><span class=\"s2\">&quot;chunk:1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;C:42&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">124</span><span class=\"n\">kg</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s2\">&quot;C:42&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;C:99&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">125</span>\n<span class=\"linenos\">126</span>\n<span class=\"linenos\">127</span><span class=\"c1\"># [nav:anchor auth]</span>\n<div class=\"viewcode-block\" id=\"auth\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/app/#src.search_api.app.auth\">[docs]</a>\n<span class=\"linenos\">128</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">auth</span><span class=\"p\">(</span><span class=\"n\">authorization</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"n\">Header</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">))</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"linenos\">129</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute auth.</span>\n<span class=\"linenos\">130</span>\n<span class=\"linenos\">131</span><span class=\"sd\">    Carry out the auth operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">132</span><span class=\"sd\">    </span>\n<span class=\"linenos\">133</span><span class=\"sd\">    Parameters</span>\n<span class=\"linenos\">134</span><span class=\"sd\">    ----------</span>\n<span class=\"linenos\">135</span><span class=\"sd\">    authorization : str | None</span>\n<span class=\"linenos\">136</span><span class=\"sd\">        Optional parameter default ``Header(default=None)``. Description for ``authorization``.</span>\n<span class=\"linenos\">137</span><span class=\"sd\">    </span>\n<span class=\"linenos\">138</span><span class=\"sd\">    Raises</span>\n<span class=\"linenos\">139</span><span class=\"sd\">    ------</span>\n<span class=\"linenos\">140</span><span class=\"sd\">    HTTPException</span>\n<span class=\"linenos\">141</span><span class=\"sd\">        Raised when validation fails.</span>\n<span class=\"linenos\">142</span><span class=\"sd\">    </span>\n<span class=\"linenos\">143</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\">144</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\">145</span><span class=\"sd\">    &gt;&gt;&gt; from search_api.app import auth</span>\n<span class=\"linenos\">146</span><span class=\"sd\">    &gt;&gt;&gt; auth()  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">147</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\">148</span>    \n<span class=\"linenos\">149</span>    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">API_KEYS</span><span class=\"p\">:</span>\n<span class=\"linenos\">150</span>        <span class=\"k\">return</span>  <span class=\"c1\"># disabled in skeleton</span>\n<span class=\"linenos\">151</span>    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">authorization</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">authorization</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;Bearer &quot;</span><span class=\"p\">):</span>\n<span class=\"linenos\">152</span>        <span class=\"k\">raise</span> <span class=\"n\">HTTPException</span><span class=\"p\">(</span><span class=\"n\">status_code</span><span class=\"o\">=</span><span class=\"mi\">401</span><span class=\"p\">,</span> <span class=\"n\">detail</span><span class=\"o\">=</span><span class=\"s2\">&quot;Unauthorized&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">153</span>    <span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">authorization</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"linenos\">154</span>    <span class=\"k\">if</span> <span class=\"n\">token</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">API_KEYS</span><span class=\"p\">:</span>\n<span class=\"linenos\">155</span>        <span class=\"k\">raise</span> <span class=\"n\">HTTPException</span><span class=\"p\">(</span><span class=\"n\">status_code</span><span class=\"o\">=</span><span class=\"mi\">401</span><span class=\"p\">,</span> <span class=\"n\">detail</span><span class=\"o\">=</span><span class=\"s2\">&quot;Unauthorized&quot;</span><span class=\"p\">)</span></div>\n\n<span class=\"linenos\">156</span>\n<span class=\"linenos\">157</span>\n<span class=\"linenos\">158</span><span class=\"c1\"># [nav:anchor healthz]</span>\n<span class=\"linenos\">159</span><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;/healthz&quot;</span><span class=\"p\">)</span>\n<div class=\"viewcode-block\" id=\"healthz\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/app/#src.search_api.app.healthz\">[docs]</a>\n<span class=\"linenos\">160</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">healthz</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]:</span>\n<span class=\"linenos\">161</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute healthz.</span>\n<span class=\"linenos\">162</span>\n<span class=\"linenos\">163</span><span class=\"sd\">    Carry out the healthz operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">164</span><span class=\"sd\">    </span>\n<span class=\"linenos\">165</span><span class=\"sd\">    Returns</span>\n<span class=\"linenos\">166</span><span class=\"sd\">    -------</span>\n<span class=\"linenos\">167</span><span class=\"sd\">    collections.abc.Mapping</span>\n<span class=\"linenos\">168</span><span class=\"sd\">        Description of return value.</span>\n<span class=\"linenos\">169</span><span class=\"sd\">    </span>\n<span class=\"linenos\">170</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\">171</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\">172</span><span class=\"sd\">    &gt;&gt;&gt; from search_api.app import healthz</span>\n<span class=\"linenos\">173</span><span class=\"sd\">    &gt;&gt;&gt; result = healthz()</span>\n<span class=\"linenos\">174</span><span class=\"sd\">    &gt;&gt;&gt; result  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">175</span><span class=\"sd\">    ...</span>\n<span class=\"linenos\">176</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\">177</span>    <span class=\"k\">return</span> <span class=\"p\">{</span>\n<span class=\"linenos\">178</span>        <span class=\"s2\">&quot;status&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ok&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\">179</span>        <span class=\"s2\">&quot;components&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"linenos\">180</span>            <span class=\"s2\">&quot;faiss&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">&quot;loaded&quot;</span> <span class=\"k\">if</span> <span class=\"n\">faiss</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;missing&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\">181</span>            <span class=\"s2\">&quot;bm25&quot;</span><span class=\"p\">:</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">bm25</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n<span class=\"linenos\">182</span>            <span class=\"s2\">&quot;splade&quot;</span><span class=\"p\">:</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">splade</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n<span class=\"linenos\">183</span>            <span class=\"s2\">&quot;vllm_embeddings&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;mocked&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\">184</span>            <span class=\"s2\">&quot;neo4j&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;mocked&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\">185</span>        <span class=\"p\">},</span>\n<span class=\"linenos\">186</span>    <span class=\"p\">}</span></div>\n\n<span class=\"linenos\">187</span>\n<span class=\"linenos\">188</span>\n<span class=\"linenos\">189</span><span class=\"c1\"># [nav:anchor rrf_fuse]</span>\n<div class=\"viewcode-block\" id=\"rrf_fuse\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/app/#src.search_api.app.rrf_fuse\">[docs]</a>\n<span class=\"linenos\">190</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">rrf_fuse</span><span class=\"p\">(</span><span class=\"n\">lists</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]],</span> <span class=\"n\">k_rrf</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]:</span>\n<span class=\"linenos\">191</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute rrf fuse.</span>\n<span class=\"linenos\">192</span>\n<span class=\"linenos\">193</span><span class=\"sd\">    Carry out the rrf fuse operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">194</span><span class=\"sd\">    </span>\n<span class=\"linenos\">195</span><span class=\"sd\">    Parameters</span>\n<span class=\"linenos\">196</span><span class=\"sd\">    ----------</span>\n<span class=\"linenos\">197</span><span class=\"sd\">    lists : List[List[Tuple[str, float]]]</span>\n<span class=\"linenos\">198</span><span class=\"sd\">        Description for ``lists``.</span>\n<span class=\"linenos\">199</span><span class=\"sd\">    k_rrf : int</span>\n<span class=\"linenos\">200</span><span class=\"sd\">        Description for ``k_rrf``.</span>\n<span class=\"linenos\">201</span><span class=\"sd\">    </span>\n<span class=\"linenos\">202</span><span class=\"sd\">    Returns</span>\n<span class=\"linenos\">203</span><span class=\"sd\">    -------</span>\n<span class=\"linenos\">204</span><span class=\"sd\">    collections.abc.Mapping</span>\n<span class=\"linenos\">205</span><span class=\"sd\">        Description of return value.</span>\n<span class=\"linenos\">206</span><span class=\"sd\">    </span>\n<span class=\"linenos\">207</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\">208</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\">209</span><span class=\"sd\">    &gt;&gt;&gt; from search_api.app import rrf_fuse</span>\n<span class=\"linenos\">210</span><span class=\"sd\">    &gt;&gt;&gt; result = rrf_fuse(..., ...)</span>\n<span class=\"linenos\">211</span><span class=\"sd\">    &gt;&gt;&gt; result  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">212</span><span class=\"sd\">    ...</span>\n<span class=\"linenos\">213</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\">214</span>    \n<span class=\"linenos\">215</span>    <span class=\"n\">scores</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"linenos\">216</span>    <span class=\"k\">for</span> <span class=\"n\">hits</span> <span class=\"ow\">in</span> <span class=\"n\">lists</span><span class=\"p\">:</span>\n<span class=\"linenos\">217</span>        <span class=\"k\">for</span> <span class=\"n\">rank</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">doc_id</span><span class=\"p\">,</span> <span class=\"n\">_score</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">hits</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n<span class=\"linenos\">218</span>            <span class=\"n\">scores</span><span class=\"p\">[</span><span class=\"n\">doc_id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">scores</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">doc_id</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">1.0</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">k_rrf</span> <span class=\"o\">+</span> <span class=\"n\">rank</span><span class=\"p\">)</span>\n<span class=\"linenos\">219</span>    <span class=\"k\">return</span> <span class=\"n\">scores</span></div>\n\n<span class=\"linenos\">220</span>\n<span class=\"linenos\">221</span>\n<span class=\"linenos\">222</span><span class=\"c1\"># [nav:anchor apply_kg_boosts]</span>\n<div class=\"viewcode-block\" id=\"apply_kg_boosts\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/app/#src.search_api.app.apply_kg_boosts\">[docs]</a>\n<span class=\"linenos\">223</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">apply_kg_boosts</span><span class=\"p\">(</span>\n<span class=\"linenos\">224</span>    <span class=\"n\">cands</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">],</span>\n<span class=\"linenos\">225</span>    <span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n<span class=\"linenos\">226</span>    <span class=\"n\">direct</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.08</span><span class=\"p\">,</span>\n<span class=\"linenos\">227</span>    <span class=\"n\">one_hop</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.04</span><span class=\"p\">,</span>\n<span class=\"linenos\">228</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]:</span>\n<span class=\"linenos\">229</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute apply kg boosts.</span>\n<span class=\"linenos\">230</span>\n<span class=\"linenos\">231</span><span class=\"sd\">    Carry out the apply kg boosts operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">232</span><span class=\"sd\">    </span>\n<span class=\"linenos\">233</span><span class=\"sd\">    Parameters</span>\n<span class=\"linenos\">234</span><span class=\"sd\">    ----------</span>\n<span class=\"linenos\">235</span><span class=\"sd\">    cands : collections.abc.Mapping</span>\n<span class=\"linenos\">236</span><span class=\"sd\">        Description for ``cands``.</span>\n<span class=\"linenos\">237</span><span class=\"sd\">    query : str</span>\n<span class=\"linenos\">238</span><span class=\"sd\">        Description for ``query``.</span>\n<span class=\"linenos\">239</span><span class=\"sd\">    direct : float | None</span>\n<span class=\"linenos\">240</span><span class=\"sd\">        Optional parameter default ``0.08``. Description for ``direct``.</span>\n<span class=\"linenos\">241</span><span class=\"sd\">    one_hop : float | None</span>\n<span class=\"linenos\">242</span><span class=\"sd\">        Optional parameter default ``0.04``. Description for ``one_hop``.</span>\n<span class=\"linenos\">243</span><span class=\"sd\">    </span>\n<span class=\"linenos\">244</span><span class=\"sd\">    Returns</span>\n<span class=\"linenos\">245</span><span class=\"sd\">    -------</span>\n<span class=\"linenos\">246</span><span class=\"sd\">    collections.abc.Mapping</span>\n<span class=\"linenos\">247</span><span class=\"sd\">        Description of return value.</span>\n<span class=\"linenos\">248</span><span class=\"sd\">    </span>\n<span class=\"linenos\">249</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\">250</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\">251</span><span class=\"sd\">    &gt;&gt;&gt; from search_api.app import apply_kg_boosts</span>\n<span class=\"linenos\">252</span><span class=\"sd\">    &gt;&gt;&gt; result = apply_kg_boosts(..., ...)</span>\n<span class=\"linenos\">253</span><span class=\"sd\">    &gt;&gt;&gt; result  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">254</span><span class=\"sd\">    ...</span>\n<span class=\"linenos\">255</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\">256</span>    \n<span class=\"linenos\">257</span>    <span class=\"n\">q_concepts</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n<span class=\"linenos\">258</span>    <span class=\"k\">for</span> <span class=\"n\">w</span> <span class=\"ow\">in</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">():</span>\n<span class=\"linenos\">259</span>        <span class=\"k\">if</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;concept&quot;</span><span class=\"p\">):</span>\n<span class=\"linenos\">260</span>            <span class=\"n\">q_concepts</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;C:</span><span class=\"si\">{</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;concept&#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"linenos\">261</span>    <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">cands</span><span class=\"p\">)</span>\n<span class=\"linenos\">262</span>    <span class=\"k\">for</span> <span class=\"n\">chunk_id</span><span class=\"p\">,</span> <span class=\"n\">base</span> <span class=\"ow\">in</span> <span class=\"n\">cands</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n<span class=\"linenos\">263</span>        <span class=\"n\">linked</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">kg</span><span class=\"o\">.</span><span class=\"n\">linked_concepts</span><span class=\"p\">(</span><span class=\"n\">chunk_id</span><span class=\"p\">))</span>\n<span class=\"linenos\">264</span>        <span class=\"n\">boost</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n<span class=\"linenos\">265</span>        <span class=\"k\">if</span> <span class=\"n\">linked</span> <span class=\"o\">&amp;</span> <span class=\"n\">q_concepts</span><span class=\"p\">:</span>\n<span class=\"linenos\">266</span>            <span class=\"n\">boost</span> <span class=\"o\">+=</span> <span class=\"n\">direct</span>\n<span class=\"linenos\">267</span>        <span class=\"k\">else</span><span class=\"p\">:</span>\n<span class=\"linenos\">268</span>            <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">linked</span><span class=\"p\">:</span>\n<span class=\"linenos\">269</span>                <span class=\"k\">if</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">kg</span><span class=\"o\">.</span><span class=\"n\">one_hop</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">))</span> <span class=\"o\">&amp;</span> <span class=\"n\">q_concepts</span><span class=\"p\">:</span>\n<span class=\"linenos\">270</span>                    <span class=\"n\">boost</span> <span class=\"o\">+=</span> <span class=\"n\">one_hop</span>\n<span class=\"linenos\">271</span>                    <span class=\"k\">break</span>\n<span class=\"linenos\">272</span>        <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"n\">chunk_id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">base</span> <span class=\"o\">+</span> <span class=\"n\">boost</span>\n<span class=\"linenos\">273</span>    <span class=\"k\">return</span> <span class=\"n\">out</span></div>\n\n<span class=\"linenos\">274</span>\n<span class=\"linenos\">275</span>\n<span class=\"linenos\">276</span><span class=\"c1\"># [nav:anchor search]</span>\n<span class=\"linenos\">277</span><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/search&quot;</span><span class=\"p\">,</span> <span class=\"n\">response_model</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">)</span>\n<div class=\"viewcode-block\" id=\"search\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/app/#src.search_api.app.search\">[docs]</a>\n<span class=\"linenos\">278</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">search</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">SearchRequest</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">auth</span><span class=\"p\">))</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]:</span>\n<span class=\"linenos\">279</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute search.</span>\n<span class=\"linenos\">280</span>\n<span class=\"linenos\">281</span><span class=\"sd\">    Carry out the search operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">282</span><span class=\"sd\">    </span>\n<span class=\"linenos\">283</span><span class=\"sd\">    Parameters</span>\n<span class=\"linenos\">284</span><span class=\"sd\">    ----------</span>\n<span class=\"linenos\">285</span><span class=\"sd\">    req : src.search_api.schemas.SearchRequest</span>\n<span class=\"linenos\">286</span><span class=\"sd\">        Description for ``req``.</span>\n<span class=\"linenos\">287</span><span class=\"sd\">    _ : None | None</span>\n<span class=\"linenos\">288</span><span class=\"sd\">        Optional parameter default ``Depends(auth)``. Description for ``_``.</span>\n<span class=\"linenos\">289</span><span class=\"sd\">    </span>\n<span class=\"linenos\">290</span><span class=\"sd\">    Returns</span>\n<span class=\"linenos\">291</span><span class=\"sd\">    -------</span>\n<span class=\"linenos\">292</span><span class=\"sd\">    collections.abc.Mapping</span>\n<span class=\"linenos\">293</span><span class=\"sd\">        Description of return value.</span>\n<span class=\"linenos\">294</span><span class=\"sd\">    </span>\n<span class=\"linenos\">295</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\">296</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\">297</span><span class=\"sd\">    &gt;&gt;&gt; from search_api.app import search</span>\n<span class=\"linenos\">298</span><span class=\"sd\">    &gt;&gt;&gt; result = search(...)</span>\n<span class=\"linenos\">299</span><span class=\"sd\">    &gt;&gt;&gt; result  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">300</span><span class=\"sd\">    ...</span>\n<span class=\"linenos\">301</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\">302</span>    \n<span class=\"linenos\">303</span>    <span class=\"c1\"># Retrieve from each channel</span>\n<span class=\"linenos\">304</span>    <span class=\"c1\"># We don&#39;t have a query embedder here; fallback to empty or demo vector</span>\n<span class=\"linenos\">305</span>    <span class=\"n\">dense_hits</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">306</span>    <span class=\"c1\"># sparse via BM25 (preferred) and SPLADE</span>\n<span class=\"linenos\">307</span>    <span class=\"n\">bm25_hits</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">308</span>    <span class=\"k\">if</span> <span class=\"n\">bm25</span><span class=\"p\">:</span>\n<span class=\"linenos\">309</span>        <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">310</span>            <span class=\"n\">bm25_hits</span> <span class=\"o\">=</span> <span class=\"n\">bm25</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"n\">CFG</span><span class=\"p\">[</span><span class=\"s2\">&quot;search&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;sparse_candidates&quot;</span><span class=\"p\">])</span>\n<span class=\"linenos\">311</span>        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">exc</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover - defensive fallback for missing indices</span>\n<span class=\"linenos\">312</span>            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;BM25 search failed, falling back to empty results: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">exc</span><span class=\"p\">)</span>\n<span class=\"linenos\">313</span>            <span class=\"n\">bm25_hits</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">314</span>    <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"linenos\">315</span>        <span class=\"n\">splade_hits</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"linenos\">316</span>            <span class=\"n\">splade</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"n\">CFG</span><span class=\"p\">[</span><span class=\"s2\">&quot;search&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;sparse_candidates&quot;</span><span class=\"p\">])</span> <span class=\"k\">if</span> <span class=\"n\">splade</span> <span class=\"k\">else</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">317</span>        <span class=\"p\">)</span>\n<span class=\"linenos\">318</span>    <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n<span class=\"linenos\">319</span>        <span class=\"n\">splade_hits</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">320</span>\n<span class=\"linenos\">321</span>    <span class=\"c1\"># RRF fusion</span>\n<span class=\"linenos\">322</span>    <span class=\"n\">fused</span> <span class=\"o\">=</span> <span class=\"n\">rrf_fuse</span><span class=\"p\">([</span><span class=\"n\">dense_hits</span><span class=\"p\">,</span> <span class=\"n\">bm25_hits</span><span class=\"p\">,</span> <span class=\"n\">splade_hits</span><span class=\"p\">],</span> <span class=\"n\">k_rrf</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">CFG</span><span class=\"p\">[</span><span class=\"s2\">&quot;search&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;rrf_k&quot;</span><span class=\"p\">]))</span>\n<span class=\"linenos\">323</span>    <span class=\"c1\"># KG boosts</span>\n<span class=\"linenos\">324</span>    <span class=\"n\">boosted</span> <span class=\"o\">=</span> <span class=\"n\">apply_kg_boosts</span><span class=\"p\">(</span>\n<span class=\"linenos\">325</span>        <span class=\"n\">fused</span><span class=\"p\">,</span>\n<span class=\"linenos\">326</span>        <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">,</span>\n<span class=\"linenos\">327</span>        <span class=\"n\">direct</span><span class=\"o\">=</span><span class=\"n\">CFG</span><span class=\"p\">[</span><span class=\"s2\">&quot;search&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;kg_boosts&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;direct&quot;</span><span class=\"p\">],</span>\n<span class=\"linenos\">328</span>        <span class=\"n\">one_hop</span><span class=\"o\">=</span><span class=\"n\">CFG</span><span class=\"p\">[</span><span class=\"s2\">&quot;search&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;kg_boosts&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;one_hop&quot;</span><span class=\"p\">],</span>\n<span class=\"linenos\">329</span>    <span class=\"p\">)</span>\n<span class=\"linenos\">330</span>    <span class=\"c1\"># Rank and craft results</span>\n<span class=\"linenos\">331</span>    <span class=\"n\">top</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">boosted</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">(),</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)[:</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">k</span><span class=\"p\">]</span>\n<span class=\"linenos\">332</span>    <span class=\"n\">results</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"linenos\">333</span>    <span class=\"k\">for</span> <span class=\"n\">chunk_id</span><span class=\"p\">,</span> <span class=\"n\">score</span> <span class=\"ow\">in</span> <span class=\"n\">top</span><span class=\"p\">:</span>\n<span class=\"linenos\">334</span>        <span class=\"c1\"># In real system we&#39;d hydrate title/section via DuckDB; here we echo ids</span>\n<span class=\"linenos\">335</span>        <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n<span class=\"linenos\">336</span>            <span class=\"n\">SearchResult</span><span class=\"p\">(</span>\n<span class=\"linenos\">337</span>                <span class=\"n\">doc_id</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;doc-of-</span><span class=\"si\">{</span><span class=\"n\">chunk_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\">338</span>                <span class=\"n\">chunk_id</span><span class=\"o\">=</span><span class=\"n\">chunk_id</span><span class=\"p\">,</span>\n<span class=\"linenos\">339</span>                <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Title for </span><span class=\"si\">{</span><span class=\"n\">chunk_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\">340</span>                <span class=\"n\">section</span><span class=\"o\">=</span><span class=\"s2\">&quot;Methods&quot;</span><span class=\"p\">,</span>\n<span class=\"linenos\">341</span>                <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"p\">),</span>\n<span class=\"linenos\">342</span>                <span class=\"n\">signals</span><span class=\"o\">=</span><span class=\"p\">{</span>\n<span class=\"linenos\">343</span>                    <span class=\"s2\">&quot;rrf&quot;</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">fused</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">chunk_id</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)),</span>\n<span class=\"linenos\">344</span>                    <span class=\"s2\">&quot;kg_boost&quot;</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">boosted</span><span class=\"p\">[</span><span class=\"n\">chunk_id</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">fused</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">chunk_id</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)),</span>\n<span class=\"linenos\">345</span>                <span class=\"p\">},</span>\n<span class=\"linenos\">346</span>                <span class=\"n\">spans</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;start_char&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;end_char&quot;</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">},</span>\n<span class=\"linenos\">347</span>                <span class=\"n\">concepts</span><span class=\"o\">=</span><span class=\"p\">[</span>\n<span class=\"linenos\">348</span>                    <span class=\"p\">{</span>\n<span class=\"linenos\">349</span>                        <span class=\"s2\">&quot;concept_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"p\">,</span>\n<span class=\"linenos\">350</span>                        <span class=\"s2\">&quot;label&quot;</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"p\">,</span>\n<span class=\"linenos\">351</span>                        <span class=\"s2\">&quot;match&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">&quot;direct&quot;</span> <span class=\"k\">if</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">query</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;nearby&quot;</span><span class=\"p\">),</span>\n<span class=\"linenos\">352</span>                    <span class=\"p\">}</span>\n<span class=\"linenos\">353</span>                    <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">kg</span><span class=\"o\">.</span><span class=\"n\">linked_concepts</span><span class=\"p\">(</span><span class=\"n\">chunk_id</span><span class=\"p\">)</span>\n<span class=\"linenos\">354</span>                <span class=\"p\">],</span>\n<span class=\"linenos\">355</span>            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">model_dump</span><span class=\"p\">()</span>\n<span class=\"linenos\">356</span>        <span class=\"p\">)</span>\n<span class=\"linenos\">357</span>    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">&quot;results&quot;</span><span class=\"p\">:</span> <span class=\"n\">results</span><span class=\"p\">}</span></div>\n\n<span class=\"linenos\">358</span>\n<span class=\"linenos\">359</span>\n<span class=\"linenos\">360</span><span class=\"c1\"># [nav:anchor graph_concepts]</span>\n<span class=\"linenos\">361</span><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/graph/concepts&quot;</span><span class=\"p\">,</span> <span class=\"n\">response_model</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">)</span>\n<div class=\"viewcode-block\" id=\"graph_concepts\">\n<a class=\"viewcode-back\" href=\"../../../../autoapi/src/search_api/app/#src.search_api.app.graph_concepts\">[docs]</a>\n<span class=\"linenos\">362</span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">graph_concepts</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">_</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">auth</span><span class=\"p\">))</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]:</span>\n<span class=\"linenos\">363</span><span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Compute graph concepts.</span>\n<span class=\"linenos\">364</span>\n<span class=\"linenos\">365</span><span class=\"sd\">    Carry out the graph concepts operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.</span>\n<span class=\"linenos\">366</span><span class=\"sd\">    </span>\n<span class=\"linenos\">367</span><span class=\"sd\">    Parameters</span>\n<span class=\"linenos\">368</span><span class=\"sd\">    ----------</span>\n<span class=\"linenos\">369</span><span class=\"sd\">    body : collections.abc.Mapping</span>\n<span class=\"linenos\">370</span><span class=\"sd\">        Description for ``body``.</span>\n<span class=\"linenos\">371</span><span class=\"sd\">    _ : None | None</span>\n<span class=\"linenos\">372</span><span class=\"sd\">        Optional parameter default ``Depends(auth)``. Description for ``_``.</span>\n<span class=\"linenos\">373</span><span class=\"sd\">    </span>\n<span class=\"linenos\">374</span><span class=\"sd\">    Returns</span>\n<span class=\"linenos\">375</span><span class=\"sd\">    -------</span>\n<span class=\"linenos\">376</span><span class=\"sd\">    collections.abc.Mapping</span>\n<span class=\"linenos\">377</span><span class=\"sd\">        Description of return value.</span>\n<span class=\"linenos\">378</span><span class=\"sd\">    </span>\n<span class=\"linenos\">379</span><span class=\"sd\">    Examples</span>\n<span class=\"linenos\">380</span><span class=\"sd\">    --------</span>\n<span class=\"linenos\">381</span><span class=\"sd\">    &gt;&gt;&gt; from search_api.app import graph_concepts</span>\n<span class=\"linenos\">382</span><span class=\"sd\">    &gt;&gt;&gt; result = graph_concepts(...)</span>\n<span class=\"linenos\">383</span><span class=\"sd\">    &gt;&gt;&gt; result  # doctest: +ELLIPSIS</span>\n<span class=\"linenos\">384</span><span class=\"sd\">    ...</span>\n<span class=\"linenos\">385</span><span class=\"sd\">    &quot;&quot;&quot;</span>\n<span class=\"linenos\">386</span>    \n<span class=\"linenos\">387</span>    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">body</span> <span class=\"ow\">or</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;q&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n<span class=\"linenos\">388</span>    <span class=\"c1\"># toy: return nodes that contain the query substring</span>\n<span class=\"linenos\">389</span>    <span class=\"n\">concepts</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"linenos\">390</span>        <span class=\"p\">{</span><span class=\"s2\">&quot;concept_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"s2\">&quot;label&quot;</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"p\">}</span>\n<span class=\"linenos\">391</span>        <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">({</span><span class=\"n\">c</span> <span class=\"k\">for</span> <span class=\"n\">cs</span> <span class=\"ow\">in</span> <span class=\"n\">kg</span><span class=\"o\">.</span><span class=\"n\">chunk2concepts</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">cs</span><span class=\"p\">})</span>\n<span class=\"linenos\">392</span>        <span class=\"k\">if</span> <span class=\"n\">q</span> <span class=\"ow\">in</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n<span class=\"linenos\">393</span>    <span class=\"p\">][:</span> <span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;limit&quot;</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)]</span>\n<span class=\"linenos\">394</span>    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">&quot;concepts&quot;</span><span class=\"p\">:</span> <span class=\"n\">concepts</span><span class=\"p\">}</span></div>\n\n</pre></div>", "current_page_name": "_modules/src/search_api/app", "sidebars": ["sidebar-nav-bs.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "theme_show_toc_level": 1, "generate_toctree_html": "<functools._lru_cache_wrapper object at 0x7628d57324b0>", "generate_toc_html": "<functools._lru_cache_wrapper object at 0x7628d5732400>", "theme_version": "0.16.1", "theme_logo": {"image_relative": {}}}
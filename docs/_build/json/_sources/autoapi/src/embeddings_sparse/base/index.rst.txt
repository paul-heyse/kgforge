src.embeddings_sparse.base
==========================

.. py:module:: src.embeddings_sparse.base

.. autoapi-nested-parse::

   Overview of base.

   This module bundles base logic for the kgfoundry stack. It groups related helpers so downstream
   packages can import a single cohesive namespace. Refer to the functions and classes below for
   implementation specifics.

   ..
       !! processed by numpydoc !!




Module Contents
---------------

.. py:class:: SparseEncoder

   Bases: :py:obj:`Protocol`



   Model the SparseEncoder.

   Represent the sparseencoder data structure used throughout the project. The class encapsulates
   behaviour behind a well-defined interface for collaborating components. Instances are typically
   created by factories or runtime orchestrators documented nearby.















   ..
       !! processed by numpydoc !!

   .. py:attribute:: name
      :type:  str


   .. py:method:: encode(texts)


      Compute encode.

      Carry out the encode operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param texts: Description for ``texts``.
      :type texts: List[str]

      :returns: *List[Tuple[List[int], List[float]]]* -- Description of return value.

      .. rubric:: Examples

      >>> from embeddings_sparse.base import encode
      >>> result = encode(...)
      >>> result  # doctest: +ELLIPSIS
      ...















      ..
          !! processed by numpydoc !!


.. py:class:: SparseIndex

   Bases: :py:obj:`Protocol`



   Model the SparseIndex.

   Represent the sparseindex data structure used throughout the project. The class encapsulates
   behaviour behind a well-defined interface for collaborating components. Instances are typically
   created by factories or runtime orchestrators documented nearby.















   ..
       !! processed by numpydoc !!

   .. py:method:: build(docs_iterable)


      Compute build.

      Carry out the build operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param docs_iterable: Description for ``docs_iterable``.
      :type docs_iterable: collections.abc.Iterable

      .. rubric:: Examples

      >>> from embeddings_sparse.base import build
      >>> build(...)  # doctest: +ELLIPSIS















      ..
          !! processed by numpydoc !!


   .. py:method:: search(query, k, fields = None)


      Compute search.

      Carry out the search operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param query: Description for ``query``.
      :type query: str
      :param k: Description for ``k``.
      :type k: int
      :param fields: Optional parameter default ``None``. Description for ``fields``.
      :type fields: Mapping[str, str] | None

      :returns: *List[Tuple[str, float]]* -- Description of return value.

      .. rubric:: Examples

      >>> from embeddings_sparse.base import search
      >>> result = search(..., ...)
      >>> result  # doctest: +ELLIPSIS
      ...















      ..
          !! processed by numpydoc !!

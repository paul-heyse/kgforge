src.registry.duckdb_registry
============================

.. py:module:: src.registry.duckdb_registry

.. autoapi-nested-parse::

   Duckdb Registry utilities.

   ..
       !! processed by numpydoc !!




Module Contents
---------------

.. py:class:: DuckDBRegistry(db_path)

   
   Describe DuckDBRegistry.
















   ..
       !! processed by numpydoc !!

   .. py:attribute:: db_path


   .. py:attribute:: con


   .. py:method:: begin_dataset(kind, run_id)

      
      Return begin dataset.

      :param kind: Description for ``kind``.
      :type kind: str
      :param run_id: Description for ``run_id``.
      :type run_id: str

      :returns: *str* -- Description of return value.















      ..
          !! processed by numpydoc !!


   .. py:method:: commit_dataset(dataset_id, parquet_root, rows)

      
      Return commit dataset.

      :param dataset_id: Description for ``dataset_id``.
      :type dataset_id: str
      :param parquet_root: Description for ``parquet_root``.
      :type parquet_root: str
      :param rows: Description for ``rows``.
      :type rows: int















      ..
          !! processed by numpydoc !!


   .. py:method:: rollback_dataset(dataset_id)

      
      Return rollback dataset.

      :param dataset_id: Description for ``dataset_id``.
      :type dataset_id: str















      ..
          !! processed by numpydoc !!


   .. py:method:: insert_run(purpose, model_id, revision, config)

      
      Return insert run.

      :param purpose: Description for ``purpose``.
      :type purpose: str
      :param model_id: Description for ``model_id``.
      :type model_id: str | None
      :param revision: Description for ``revision``.
      :type revision: str | None
      :param config: Description for ``config``.
      :type config: Mapping[str, object]

      :returns: *str* -- Description of return value.















      ..
          !! processed by numpydoc !!


   .. py:method:: close_run(run_id, success, notes = None)

      
      Return close run.

      :param run_id: Description for ``run_id``.
      :type run_id: str
      :param success: Description for ``success``.
      :type success: bool
      :param notes: Description for ``notes``.
      :type notes: str | None















      ..
          !! processed by numpydoc !!


   .. py:method:: register_documents(docs)

      
      Return register documents.

      :param docs: Description for ``docs``.
      :type docs: List[Doc]















      ..
          !! processed by numpydoc !!


   .. py:method:: register_doctags(assets)

      
      Return register doctags.

      :param assets: Description for ``assets``.
      :type assets: List[DoctagsAsset]















      ..
          !! processed by numpydoc !!


   .. py:method:: emit_event(event_name, subject_id, payload)

      
      Return emit event.

      :param event_name: Description for ``event_name``.
      :type event_name: str
      :param subject_id: Description for ``subject_id``.
      :type subject_id: str
      :param payload: Description for ``payload``.
      :type payload: Mapping[str, object]















      ..
          !! processed by numpydoc !!


   .. py:method:: incident(event, subject_id, error_class, message)

      
      Return incident.

      :param event: Description for ``event``.
      :type event: str
      :param subject_id: Description for ``subject_id``.
      :type subject_id: str
      :param error_class: Description for ``error_class``.
      :type error_class: str
      :param message: Description for ``message``.
      :type message: str















      ..
          !! processed by numpydoc !!



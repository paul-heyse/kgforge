src.kgfoundry_common.logging
============================

.. py:module:: src.kgfoundry_common.logging

.. autoapi-nested-parse::

   Provide utilities for module.

   .. rubric:: Notes

   This module exposes the primary interfaces for the package.

   .. seealso:: :py:obj:`kgfoundry_common.logging`

   ..
       !! processed by numpydoc !!






Module Contents
---------------

.. py:class:: JsonFormatter(fmt=None, datefmt=None, style='%', validate=True, *, defaults=None)

   Bases: :py:obj:`logging.Formatter`


   
   Represent JsonFormatter.

   .. attribute:: None

      No public attributes documented.

   .. method:: format()

      Method description.

   .. rubric:: Examples

   >>> from kgfoundry_common.logging import JsonFormatter
   >>> result = JsonFormatter()
   >>> result  # doctest: +ELLIPSIS
   ...

   .. seealso:: :py:obj:`kgfoundry_common.logging`

   .. rubric:: Notes

   Document class invariants and lifecycle details here.















   ..
       !! processed by numpydoc !!

   .. py:method:: format(record)

      
      Return format.

      :param record: Description for ``record``.
      :type record: logging.LogRecord

      :returns: *str* -- Description of return value.

      .. rubric:: Examples

      >>> from kgfoundry_common.logging import format
      >>> result = format(...)
      >>> result  # doctest: +ELLIPSIS
      ...

      .. seealso:: :py:obj:`kgfoundry_common.logging`

      .. rubric:: Notes

      Provide usage considerations, constraints, or complexity notes.















      ..
          !! processed by numpydoc !!


.. py:function:: setup_logging(level = logging.INFO)

   
   Return setup logging.

   :param level: Description for ``level``.
   :type level: int, optional

   .. rubric:: Examples

   >>> from kgfoundry_common.logging import setup_logging
   >>> setup_logging(...)  # doctest: +ELLIPSIS

   .. seealso:: :py:obj:`kgfoundry_common.logging`

   .. rubric:: Notes

   Provide usage considerations, constraints, or complexity notes.















   ..
       !! processed by numpydoc !!


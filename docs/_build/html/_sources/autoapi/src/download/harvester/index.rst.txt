src.download.harvester
======================

.. py:module:: src.download.harvester

.. autoapi-nested-parse::

   Harvester utilities.

   ..
       !! processed by numpydoc !!




Module Contents
---------------

.. py:class:: OpenAccessHarvester(user_agent, contact_email, openalex_base = 'https://api.openalex.org', unpaywall_base = 'https://api.unpaywall.org', pdf_host_base = None, out_dir = '/data/pdfs')

   
   Describe OpenAccessHarvester.
















   ..
       !! processed by numpydoc !!

   .. py:attribute:: ua


   .. py:attribute:: email


   .. py:attribute:: openalex
      :value: ''



   .. py:attribute:: unpaywall
      :value: ''



   .. py:attribute:: pdf_host
      :value: ''



   .. py:attribute:: out_dir
      :value: '/data/pdfs'



   .. py:attribute:: session


   .. py:method:: search(topic, years, max_works)

      
      Compute search.

      Carry out the search operation.

      :param topic: Description for ``topic``.
      :type topic: str
      :param years: Description for ``years``.
      :type years: str
      :param max_works: Description for ``max_works``.
      :type max_works: int

      :returns: *List[dict[str, Any]]* -- Description of return value.















      ..
          !! processed by numpydoc !!


   .. py:method:: resolve_pdf(work)

      
      Compute resolve pdf.

      Carry out the resolve pdf operation.

      :param work: Description for ``work``.
      :type work: Mapping[str, Any]

      :returns: *str | None* -- Description of return value.















      ..
          !! processed by numpydoc !!


   .. py:method:: download_pdf(url, target_path)

      
      Compute download pdf.

      Carry out the download pdf operation.

      :param url: Description for ``url``.
      :type url: str
      :param target_path: Description for ``target_path``.
      :type target_path: str

      :returns: *str* -- Description of return value.

      :raises DownloadError: Raised when validation fails.
      :raises UnsupportedMIMEError: Raised when validation fails.















      ..
          !! processed by numpydoc !!


   .. py:method:: run(topic, years, max_works)

      
      Compute run.

      Carry out the run operation.

      :param topic: Description for ``topic``.
      :type topic: str
      :param years: Description for ``years``.
      :type years: str
      :param max_works: Description for ``max_works``.
      :type max_works: int

      :returns: *List[Doc]* -- Description of return value.















      ..
          !! processed by numpydoc !!



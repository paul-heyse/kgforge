src.search_api.service
======================

.. py:module:: src.search_api.service

.. autoapi-nested-parse::

   Provide utilities for module.

   .. rubric:: Notes

   This module exposes the primary interfaces for the package.

   .. seealso:: :py:obj:`search_api.service`

   ..
       !! processed by numpydoc !!




Module Contents
---------------

.. py:function:: rrf_fuse(dense, sparse, k = 60)

   
   Return rrf fuse.

   :param dense: Description for ``dense``.
   :type dense: List[Tuple[str, float]]
   :param sparse: Description for ``sparse``.
   :type sparse: List[Tuple[str, float]]
   :param k: Description for ``k``.
   :type k: int, optional

   :returns: *List[Tuple[str, float]]* -- Description of return value.

   .. rubric:: Examples

   >>> from search_api.service import rrf_fuse
   >>> result = rrf_fuse(..., ..., ...)
   >>> result  # doctest: +ELLIPSIS
   ...

   .. seealso:: :py:obj:`search_api.service`

   .. rubric:: Notes

   Provide usage considerations, constraints, or complexity notes.















   ..
       !! processed by numpydoc !!

.. py:function:: apply_kg_boosts(fused, query)

   
   Return apply kg boosts.

   :param fused: Description for ``fused``.
   :type fused: List[Tuple[str, float]]
   :param query: Description for ``query``.
   :type query: str

   :returns: *List[Tuple[str, float]]* -- Description of return value.

   .. rubric:: Examples

   >>> from search_api.service import apply_kg_boosts
   >>> result = apply_kg_boosts(..., ...)
   >>> result  # doctest: +ELLIPSIS
   ...

   .. seealso:: :py:obj:`search_api.service`

   .. rubric:: Notes

   Provide usage considerations, constraints, or complexity notes.















   ..
       !! processed by numpydoc !!

.. py:function:: mmr_deduplicate(results, lambda_ = 0.7)

   
   Return mmr deduplicate.

   :param results: Description for ``results``.
   :type results: List[Tuple[str, float]]
   :param lambda_: Description for ``lambda_``.
   :type lambda_: float, optional

   :returns: *List[Tuple[str, float]]* -- Description of return value.

   .. rubric:: Examples

   >>> from search_api.service import mmr_deduplicate
   >>> result = mmr_deduplicate(..., ...)
   >>> result  # doctest: +ELLIPSIS
   ...

   .. seealso:: :py:obj:`search_api.service`

   .. rubric:: Notes

   Provide usage considerations, constraints, or complexity notes.















   ..
       !! processed by numpydoc !!


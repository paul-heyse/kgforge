src.vectorstore_faiss.gpu
=========================

.. py:module:: src.vectorstore_faiss.gpu

.. autoapi-nested-parse::

   Provide utilities for module.

   .. rubric:: Notes

   This module exposes the primary interfaces for the package.

   .. seealso:: :py:obj:`vectorstore_faiss.gpu`

   ..
       !! processed by numpydoc !!




Module Contents
---------------

.. py:class:: FaissGpuIndex(factory = 'OPQ64,IVF8192,PQ64', nprobe = 64, gpu = True, cuvs = True)

   
   Represent FaissGpuIndex.

   .. attribute:: None

      No public attributes documented.

   .. method:: __init__()

      Method description.

   .. method:: _ensure_resources()

      Method description.

   .. method:: train()

      Method description.

   .. method:: add()

      Method description.

   .. method:: search()

      Method description.

   .. method:: save()

      Method description.

   .. method:: load()

      Method description.

   .. rubric:: Examples

   >>> from vectorstore_faiss.gpu import FaissGpuIndex
   >>> result = FaissGpuIndex()
   >>> result  # doctest: +ELLIPSIS
   ...

   .. seealso:: :py:obj:`vectorstore_faiss.gpu`

   .. rubric:: Notes

   Document class invariants and lifecycle details here.















   ..
       !! processed by numpydoc !!

   .. py:attribute:: factory
      :value: 'OPQ64,IVF8192,PQ64'



   .. py:attribute:: nprobe
      :value: 64



   .. py:attribute:: gpu
      :value: True



   .. py:attribute:: cuvs
      :value: True



   .. py:attribute:: _faiss
      :type:  Any | None
      :value: None



   .. py:attribute:: _res
      :type:  Any | None
      :value: None



   .. py:attribute:: _index
      :type:  Any | None
      :value: None



   .. py:attribute:: _idmap
      :type:  StrArray | None
      :value: None



   .. py:attribute:: _xb
      :type:  FloatArray | None
      :value: None



   .. py:method:: _ensure_resources()

      
      Return ensure resources.

      .. rubric:: Examples

      >>> from vectorstore_faiss.gpu import _ensure_resources
      >>> _ensure_resources()  # doctest: +ELLIPSIS

      .. seealso:: :py:obj:`vectorstore_faiss.gpu`

      .. rubric:: Notes

      Provide usage considerations, constraints, or complexity notes.















      ..
          !! processed by numpydoc !!


   .. py:method:: train(train_vectors, *, seed = 42)

      
      Return train.

      :param train_vectors: Description for ``train_vectors``.
      :type train_vectors: FloatArray
      :param seed: Description for ``seed``.
      :type seed: int, optional

      .. rubric:: Examples

      >>> from vectorstore_faiss.gpu import train
      >>> train(..., ...)  # doctest: +ELLIPSIS

      .. seealso:: :py:obj:`vectorstore_faiss.gpu`

      .. rubric:: Notes

      Provide usage considerations, constraints, or complexity notes.















      ..
          !! processed by numpydoc !!


   .. py:method:: add(keys, vectors)

      
      Return add.

      :param keys: Description for ``keys``.
      :type keys: List[str]
      :param vectors: Description for ``vectors``.
      :type vectors: FloatArray

      :raises RuntimeError: Raised when validation fails.

      .. rubric:: Examples

      >>> from vectorstore_faiss.gpu import add
      >>> add(..., ...)  # doctest: +ELLIPSIS

      .. seealso:: :py:obj:`vectorstore_faiss.gpu`

      .. rubric:: Notes

      Provide usage considerations, constraints, or complexity notes.















      ..
          !! processed by numpydoc !!


   .. py:method:: search(query, k)

      
      Return search.

      :param query: Description for ``query``.
      :type query: FloatArray
      :param k: Description for ``k``.
      :type k: int

      :returns: *List[Tuple[str, float]]* -- Description of return value.

      :raises RuntimeError: Raised when validation fails.

      .. rubric:: Examples

      >>> from vectorstore_faiss.gpu import search
      >>> result = search(..., ...)
      >>> result  # doctest: +ELLIPSIS
      ...

      .. seealso:: :py:obj:`vectorstore_faiss.gpu`

      .. rubric:: Notes

      Provide usage considerations, constraints, or complexity notes.















      ..
          !! processed by numpydoc !!


   .. py:method:: save(index_uri, idmap_uri = None)

      
      Return save.

      :param index_uri: Description for ``index_uri``.
      :type index_uri: str
      :param idmap_uri: Description for ``idmap_uri``.
      :type idmap_uri: str | None, optional

      :raises RuntimeError: Raised when validation fails.

      .. rubric:: Examples

      >>> from vectorstore_faiss.gpu import save
      >>> save(..., ...)  # doctest: +ELLIPSIS

      .. seealso:: :py:obj:`vectorstore_faiss.gpu`

      .. rubric:: Notes

      Provide usage considerations, constraints, or complexity notes.















      ..
          !! processed by numpydoc !!


   .. py:method:: load(index_uri, idmap_uri = None)

      
      Return load.

      :param index_uri: Description for ``index_uri``.
      :type index_uri: str
      :param idmap_uri: Description for ``idmap_uri``.
      :type idmap_uri: str | None, optional

      :raises RuntimeError: Raised when validation fails.

      .. rubric:: Examples

      >>> from vectorstore_faiss.gpu import load
      >>> load(..., ...)  # doctest: +ELLIPSIS

      .. seealso:: :py:obj:`vectorstore_faiss.gpu`

      .. rubric:: Notes

      Provide usage considerations, constraints, or complexity notes.















      ..
          !! processed by numpydoc !!



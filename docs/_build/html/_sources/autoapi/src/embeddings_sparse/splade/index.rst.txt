src.embeddings_sparse.splade
============================

.. py:module:: src.embeddings_sparse.splade

.. autoapi-nested-parse::

   Overview of splade.

   This module bundles splade logic for the kgfoundry stack. It groups related helpers so downstream
   packages can import a single cohesive namespace. Refer to the functions and classes below for
   implementation specifics.

   ..
       !! processed by numpydoc !!






Module Contents
---------------

.. py:class:: SPLADEv3Encoder(model_id = 'naver/splade-v3-distilbert', device = 'cuda', topk = 256, max_seq_len = 512)


   Model the SPLADEv3Encoder.

   Represent the spladev3encoder data structure used throughout the project. The class encapsulates
   behaviour behind a well-defined interface for collaborating components. Instances are typically
   created by factories or runtime orchestrators documented nearby.















   ..
       !! processed by numpydoc !!

   .. py:attribute:: name
      :value: 'SPLADE-v3-distilbert'



   .. py:attribute:: model_id
      :value: 'naver/splade-v3-distilbert'



   .. py:attribute:: device
      :value: 'cuda'



   .. py:attribute:: topk
      :value: 256



   .. py:attribute:: max_seq_len
      :value: 512



   .. py:method:: encode(texts)


      Compute encode.

      Carry out the encode operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param texts: Description for ``texts``.
      :type texts: List[str]

      :returns: *List[Tuple[List[int], List[float]]]* -- Description of return value.

      :raises NotImplementedError: Raised when validation fails.

      .. rubric:: Examples

      >>> from embeddings_sparse.splade import encode
      >>> result = encode(...)
      >>> result  # doctest: +ELLIPSIS
      ...















      ..
          !! processed by numpydoc !!


.. py:class:: PureImpactIndex(index_dir)


   Model the PureImpactIndex.

   Represent the pureimpactindex data structure used throughout the project. The class encapsulates
   behaviour behind a well-defined interface for collaborating components. Instances are typically
   created by factories or runtime orchestrators documented nearby.















   ..
       !! processed by numpydoc !!

   .. py:attribute:: index_dir


   .. py:attribute:: df
      :type:  dict[str, int]


   .. py:attribute:: N
      :value: 0



   .. py:attribute:: postings
      :type:  dict[str, dict[str, float]]


   .. py:method:: _tokenize(text)
      :staticmethod:



      Compute tokenize.

      Carry out the tokenize operation.

      :param text: Description for ``text``.
      :type text: str

      :returns: *List[str]* -- Description of return value.















      ..
          !! processed by numpydoc !!


   .. py:method:: build(docs_iterable)


      Compute build.

      Carry out the build operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param docs_iterable: Description for ``docs_iterable``.
      :type docs_iterable: collections.abc.Iterable

      .. rubric:: Examples

      >>> from embeddings_sparse.splade import build
      >>> build(...)  # doctest: +ELLIPSIS















      ..
          !! processed by numpydoc !!


   .. py:method:: load()


      Compute load.

      Carry out the load operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      .. rubric:: Examples

      >>> from embeddings_sparse.splade import load
      >>> load()  # doctest: +ELLIPSIS















      ..
          !! processed by numpydoc !!


   .. py:method:: search(query, k)


      Compute search.

      Carry out the search operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param query: Description for ``query``.
      :type query: str
      :param k: Description for ``k``.
      :type k: int

      :returns: *List[Tuple[str, float]]* -- Description of return value.

      .. rubric:: Examples

      >>> from embeddings_sparse.splade import search
      >>> result = search(..., ...)
      >>> result  # doctest: +ELLIPSIS
      ...















      ..
          !! processed by numpydoc !!


.. py:class:: LuceneImpactIndex(index_dir)


   Model the LuceneImpactIndex.

   Represent the luceneimpactindex data structure used throughout the project. The class
   encapsulates behaviour behind a well-defined interface for collaborating components. Instances
   are typically created by factories or runtime orchestrators documented nearby.















   ..
       !! processed by numpydoc !!

   .. py:attribute:: index_dir


   .. py:attribute:: _searcher
      :type:  Any | None
      :value: None



   .. py:method:: _ensure()


      Compute ensure.

      Carry out the ensure operation.

      :raises RuntimeError: Raised when validation fails.















      ..
          !! processed by numpydoc !!


   .. py:method:: search(query, k)


      Compute search.

      Carry out the search operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

      :param query: Description for ``query``.
      :type query: str
      :param k: Description for ``k``.
      :type k: int

      :returns: *List[Tuple[str, float]]* -- Description of return value.

      :raises RuntimeError: Raised when validation fails.

      .. rubric:: Examples

      >>> from embeddings_sparse.splade import search
      >>> result = search(..., ...)
      >>> result  # doctest: +ELLIPSIS
      ...















      ..
          !! processed by numpydoc !!


.. py:function:: get_splade(backend, index_dir)


   Compute get splade.

   Carry out the get splade operation for the surrounding component. Generated documentation highlights how this helper collaborates with neighbouring utilities. Callers rely on the routine to remain stable across releases.

   :param backend: Description for ``backend``.
   :type backend: str
   :param index_dir: Description for ``index_dir``.
   :type index_dir: str

   :returns: *PureImpactIndex | LuceneImpactIndex* -- Description of return value.

   .. rubric:: Examples

   >>> from embeddings_sparse.splade import get_splade
   >>> result = get_splade(..., ...)
   >>> result  # doctest: +ELLIPSIS
   ...















   ..
       !! processed by numpydoc !!

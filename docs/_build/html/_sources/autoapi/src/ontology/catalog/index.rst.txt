src.ontology.catalog
====================

.. py:module:: src.ontology.catalog

.. autoapi-nested-parse::

   Provide utilities for module.

   .. rubric:: Notes

   This module exposes the primary interfaces for the package.

   .. seealso:: :py:obj:`ontology.catalog`

   ..
       !! processed by numpydoc !!




Module Contents
---------------

.. py:class:: OntologyCatalog(concepts)

   
   Represent OntologyCatalog.

   .. attribute:: None

      No public attributes documented.

   .. method:: __init__()

      Method description.

   .. method:: neighbors()

      Method description.

   .. method:: hydrate()

      Method description.

   .. rubric:: Examples

   >>> from ontology.catalog import OntologyCatalog
   >>> result = OntologyCatalog()
   >>> result  # doctest: +ELLIPSIS
   ...

   .. seealso:: :py:obj:`ontology.catalog`

   .. rubric:: Notes

   Document class invariants and lifecycle details here.















   ..
       !! processed by numpydoc !!

   .. py:attribute:: by_id


   .. py:method:: neighbors(concept_id, depth = 1)

      
      Return neighbors.

      :param concept_id: Description for ``concept_id``.
      :type concept_id: str
      :param depth: Description for ``depth``.
      :type depth: int, optional

      :returns: *Set[str]* -- Description of return value.

      .. rubric:: Examples

      >>> from ontology.catalog import neighbors
      >>> result = neighbors(..., ...)
      >>> result  # doctest: +ELLIPSIS
      ...

      .. seealso:: :py:obj:`ontology.catalog`

      .. rubric:: Notes

      Provide usage considerations, constraints, or complexity notes.















      ..
          !! processed by numpydoc !!


   .. py:method:: hydrate(concept_id)

      
      Return hydrate.

      :param concept_id: Description for ``concept_id``.
      :type concept_id: str

      :returns: *Mapping[str, Any]* -- Description of return value.

      .. rubric:: Examples

      >>> from ontology.catalog import hydrate
      >>> result = hydrate(...)
      >>> result  # doctest: +ELLIPSIS
      ...

      .. seealso:: :py:obj:`ontology.catalog`

      .. rubric:: Notes

      Provide usage considerations, constraints, or complexity notes.















      ..
          !! processed by numpydoc !!


